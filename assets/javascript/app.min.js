var isHomePage=$("body.homepage");isHomePage&&($.fn.isInViewport=function(){var e=$(this);if("undefined"!==e&&e.length){var t=$(this).offset().top,a=t+$(this).outerHeight(),n=$(window).scrollTop(),o=n+$(window).height();return n<a&&t<o}});var map,aboutAnimationHasRan=!1,aboutUsAnimationHasRan=!1,valuesAnimationHasRan=!1,headerAnimationHasRan=!1,brandsAnimationHasRan=!1,headerElem=$("#header"),aboutElem=$("#about"),brandsElem=$(".brandlist"),aboutUsElem=$("#aboutUs"),valuesElem=$("#values");function fireAnimations(){if(isHomePage&&0<headerElem.length&&headerElem.isInViewport()){var e=$("#header .logo"),t=$("#header h1"),a=$("#header .icon-play");headerAnimationHasRan||(TweenMax.fromTo(e,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"}}),TweenMax.fromTo(t,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"},delay:.3}),TweenMax.fromTo(a,.5,{opacity:0,scale:1.5,ease:Bounce.ease},{opacity:1,scale:1}),headerAnimationHasRan=!0)}if(isHomePage&&0<headerElem.length&&aboutElem.isInViewport()){var n=$("#about > .left-container"),o=$("#about > .right-container");aboutAnimationHasRan||(TweenMax.fromTo(n,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),TweenMax.fromTo(o,1,{css:{x:"100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),aboutAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var i=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(i,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}if(isHomePage&&0<brandsElem.length&&brandsElem.isInViewport()){var s=brandsElem.find("li");5<$(".brandlist li").length?$(".brandlist").slick({slidesToShow:5,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!1,swip:!0,responsive:[{breakpoint:600,settings:{slidesToShow:3,slidesToScroll:1}}]}):brandsAnimationHasRan||(TweenMax.staggerFromTo(s,.5,{css:{x:"-40",opacity:0}},{css:{x:"0",opacity:"1"},delay:.2},.2),brandsAnimationHasRan=!0)}if(isHomePage&&0<valuesElem.length&&valuesElem.isInViewport()){var d=$(".valueItem");valuesAnimationHasRan||($.each(d,function(){var e=$(this).find("strong"),t=(-1*Math.random()+1.5).toFixed(2);TweenMax.fromTo(e,1,{css:{x:"-10",opacity:0}},{css:{x:"0",opacity:"1"},delay:t})}),valuesAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var r=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(r,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}}function getDirection(e,t,a){Math.abs(t-e)<=5||a(t<e?"down":"up",e)}function handleMethodScroll(e){var t="method",a=".fadeIn",n=".method-item",o=".intro",i=".design",s=".tuning",d=".construction";$(a).removeClass(t),$(n).removeClass(t),1===e?($(a+o).addClass(t),$(n+o).addClass(t)):2===e?($(n+o).addClass(t),$(a+i).addClass(t),$(n+i).addClass(t)):3===e?($(n+o).addClass(t),$(n+i).addClass(t),$(a+s).addClass(t),$(n+s).addClass(t)):4===e?($(n+o).addClass(t),$(n+i).addClass(t),$(n+s).addClass(t),$(a+d).addClass(t),$(n+d).addClass(t)):5===e&&($(n+o).addClass(t),$(n+i).addClass(t),$(n+s).addClass(t),$(n+d).addClass(t),$(a+".eval").addClass(t),$(n+".eval").addClass(t))}function setCookie(e,t,a){var n="";if(a){var o=new Date;o.setTime(o.getTime()+24*a*60*60*1e3),n="; expires="+o.toUTCString()}document.cookie=e+"="+(t||"")+n+"; path=/"}function getCookie(e){for(var t=e+"=",a=document.cookie.split(";"),n=0;n<a.length;n++){for(var o=a[n];" "==o.charAt(0);)o=o.substring(1,o.length);if(0==o.indexOf(t))return o.substring(t.length,o.length)}return null}function eraseCookie(e){document.cookie=e+"=; Max-Age=-99999999;"}function chooseCookie(){var e=navigator.language||navigator.userLanguage,t=getCookie("lang"),a=getParameterByName("lang");null==t||""===t?(e.match(/de/g)?setCookie("lang","de",7):e.match(/en/g)?setCookie("lang","en",7):(e.match(/nl/g),setCookie("lang","nl",7)),setTimeout(function(){window.location.reload()},20)):$("body").addClass(t),void 0!==a&&"de"===a?setCookie("lang","de",7):void 0!==a&&"en"===a?setCookie("lang","en",7):void 0!==a&&"nl"===a&&setCookie("lang","nl",7),setTimeout(function(){$("#nav .active-loc").html(getCookie("lang"))},200)}function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var a=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null}function fixNav(e){var t=$("#nav");500<=e?t.addClass("fixed"):t.removeClass("fixed")}function trackLocation(e){var t=$(".slick-active .after"),a=$(".slick-active .before"),n=a[0].getBoundingClientRect(),o=a.outerWidth(),i=(e.pageX-n.left)/o*100;i<=100&&t.css("width",i+"%")}function googleMapsInit(){var e=new google.maps.LatLng(51.372027,6.160478),t={zoom:15,center:e,scrollwheel:!1,navigationControl:!1,mapTypeControl:!1,scaleControl:!1,disableDefaultUI:!0,styles:[{featureType:"landscape",stylers:[{visibility:"simplified"},{color:"#2b3f57"},{weight:.1}]},{featureType:"administrative",stylers:[{visibility:"on"},{hue:"#ff0000"},{weight:.4},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{weight:1.3},{color:"#FFFFFF"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:3}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:1.1}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:.4}]},{},{featureType:"road.highway",elementType:"labels",stylers:[{weight:.8},{color:"#ffffff"},{visibility:"on"}]},{featureType:"road.local",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"labels",stylers:[{color:"#ffffff"},{weight:.7}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{color:"#6c5b7b"}]},{featureType:"water",stylers:[{color:"#f3b191"}]},{featureType:"transit.line",stylers:[{visibility:"on"}]}]};map=new google.maps.Map(document.getElementById("map-canvas"),t);var a=new google.maps.Marker({position:e,icon:"//expo-mate.github.io/assets/images/marker.png",map:map}),n=new google.maps.InfoWindow({content:$(".contact-details-map").html()});450<$(window).width()&&map.panBy(200,-150),google.maps.event.addListener(a,"click",function(){n.open(map,a)})}function sliderInit(e){setTimeout(function(){"string"==typeof e&&$("#"+e+" .slider").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!0,lazyLoad:"onDemand",swip:!0})},100)}$(function(){isHomePage&&(fireAnimations(),$(window).on("resize scroll",function(){fireAnimations()}))}),$(function(){var a=0,n=!1,e=$("#header"),t=$("body.homepage"),o=$(window).height(),i=$(window).width(),s=950,d=0,r=$(".method-item"),c=$(".fadeIn"),l=-1<window.orientation&&screen.width<=640,m=null!=navigator.userAgent.match(/iPad/i),p=$("body").find("[data-content='content-method-hoverLabel']");if($(window).on("mousewheel DOMMouseScroll touchmove",function(){n=!0}),$(window).on("resize",function(){o=$(this).height(),i=$(this).width(),s=$(window).height()/100*20}),void 0!==t&&0<t.length){var h=$("#method"),f=$(".method-scroll-wrapper"),u=h.height(),v=h.offset().top,g=$("#case-studies"),w=~~g.offset().top,y=$("#about"),b=$("#preabout").offset().top,C="active",k="show";(l||m)&&(g.addClass(k),c.addClass(k),y.addClass(k)),$(r).on("mouseenter",function(){var e=$(this).attr("data-item");$(this).addClass("active"),$(".diagram-logo").addClass("hidden"),0<p.length&&p.addClass("hidden"),$(".method-desc."+e).addClass("active"),$("#diagram").addClass(e)}).on("mouseleave",function(){var e=$(this).attr("data-item");$(this).removeClass("active"),$(".diagram-logo").removeClass("hidden"),0<p.length&&p.removeClass("hidden"),$(".method-desc."+e).removeClass("active"),$("#diagram").removeClass(e)}),$(".close-btn").on("click",function(){$("body").toggleClass("isPlaying"),e.removeClass("play"),e.find(".video-container").removeClass("play"),$(".youtube-video-embed iframe").attr("id","").attr("src","")}),$(".play-video-wrapper").on("click",function(){$("body").toggleClass("isPlaying"),e.addClass("play"),e.find(".video-container").addClass("play");$.ajax({url:"./assets/json/content.json",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.header.content;$(".youtube-video-embed iframe").attr("id",t.youtubeURL).attr("src","https://www.youtube.com/embed/"+t.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1")}})}),$(window).on("scroll",function(){d=~~$(this).scrollTop(),o<1100&&(s=1050),r.removeClass(C),getDirection(d,a,function(e,t){(a=t)&&n&&!l&&1200<i&&!m&&("down"===e?(v<=t&&(c.removeClass(k),f.addClass(k),handleMethodScroll(5)),v+u<=t&&(g.addClass(k),c.removeClass(k),f.removeClass(k)),b<=t&&y.addClass(k)):(g.addClass(k),c.addClass(k),y.addClass(k)),"up"===e&&(t<w-s&&(f.addClass(k),handleMethodScroll(5)),t<=v-100&&c.removeClass(C)))})})}}),chooseCookie(),$(function(){var n=!1,o=$("#nav ul"),i=$(".hamburger"),e=$(window).scrollTop();$("#nav li a").on("click",function(e){e.preventDefault();var t=$(this).attr("href");if(-1!==t.indexOf("."))window.location.href=t;else if($(this).hasClass("loc"))eraseCookie("lang"),setCookie("lang",t,7),setTimeout(function(){window.location.reload()},20);else if(-1!==t.indexOf("#")){var a=$(t).offset().top;"#footer"===t?a=$("#contact-info").offset().top:"#comparison"===t&&(a=$("#comparison-wrapper").offset().top),$("html, body").animate({scrollTop:a})}n&&(i.removeClass("is-active"),o.removeClass("open"),n=!1)}),i.click(function(){$(this).toggleClass("is-active"),o.toggleClass("open"),n=!0}),$(window).on("scroll",function(){fixNav(~~$(this).scrollTop())}),$(".contact-btn").on("click",function(){var e=$("footer").offset().top;$("html, body").animate({scrollTop:e})}),fixNav(e)}),$(function(){if($("body").hasClass("homepage")){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.content.comparison,i=$("#comparison"),a=t.comparisons||"";$.each(a,function(e,t){i.append('<div class="item"><img data-content="content-comparison-before" src="'+t.before+'" class="before" alt>\n<div data-content="content-comparison-after" class="after" style="background-image: url('+t.after+')"></div></div>')}),setTimeout(function(){i.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,nextArrow:".icon-arrow-right",prevArrow:".icon-arrow-left",swipeToSlide:!1}),i.on("setPosition",function(e,t,a,n){var o=i.find(".slick-active");o&&(o.on("mousemove",trackLocation),o.on("touchstart",trackLocation),o.on("touchmove",trackLocation))})},200)}})}}),$(function(){var w=$("body");$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),n=t[a],o=n.nav.labels,i=n.pages.homepage,s=i.header.content,d=i.content.intro,r=d.images,c=i.content.about,l=i.content.aboutUs,m=i.content.values,p=i.content.comparison,h=i.content.method,f=i.content.model,u=i.content.projects,v=i.footer;if(n&&w.removeClass("loading"),void 0===a&&chooseCookie(),o){var g=$("#nav > ul > li ");g.find('a[href="#preabout"]').html(o.about),g.find('a[href="index.html#preabout"]').html(o.about),g.find('a[href="#method"]').html(o.method),g.find('a[href="index.html#method"]').html(o.method),g.find('a[href="#values"]').html(o.values),g.find('a[href="index.html#values"]').html(o.values),g.find('a[href="#aboutUs"]').html(o.aboutUs),g.find('a[href="index.html#aboutUs"]').html(o.aboutUs),g.find('a[href="projects.html"]').html(o.projects),g.find('a[href="#footer"]').html(o.contact),g.find('a[href="#footer"]').html(o.contact),g.find('a[href="#mission"]').html(o.mission),g.find('a[href="index.html#mission"]').html(o.mission),g.find('a[href="#model"]').html(o.model),g.find('a[href="index.html#model"]').html(o.model),g.find('a[href="#foundation"]').html(o.foundation),g.find('a[href="index.html#foundation"]').html(o.foundation),g.find('a[href="#comparison"]').html(o.comparison),g.find('a[href="index.html#comparison"]').html(o.comparison)}s&&($(".background-video").css({backgroundImage:s.backgroundImageSrc}),$(".youtube-video-embed iframe").attr("id",s.youtubeURL).attr("src","https://www.youtube.com/embed/"+s.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1"),$("video source#mp4").attr("src",s.backgroundVideoMp4Src),$("video source#webm").attr("src",s.backgroundVideoWebMSrc),w.find("[data-content='header-content-title']").html(s.header)),d&&(w.find("[data-content='content-intro-title']").html(d.header),w.find("[data-content='content-intro-desc']").html(d.description),0<$(".brandlist").length&&$.each(r,function(e,t){t.src&&w.find(".brandlist").append('<li><img src="'+t.src+'" alt="'+t.alt+'" /></li>')})),c&&(w.find("[data-content='content-about-row1-title']").html(c.row1.header),w.find("[data-content='content-about-row1-image']").css({backgroundImage:c.row1.image.src}),w.find("[data-content='content-about-row1-desc']").html(c.row1.description),w.find("[data-content='content-about-row2-title']").html(c.row2.header),w.find("[data-content='content-about-row2-image']").css({backgroundImage:c.row2.image.src}),w.find("[data-content='content-about-row2-desc']").html(c.row2.description)),l&&(w.find("[data-content='content-aboutUs-title']").html(l.header),w.find("[data-content='content-aboutUs-description']").html(l.description),w.find("[data-content='content-employee-niek-image']").attr("src",l.employees.niek.image.src).attr("alt",l.employees.niek.image.alt),w.find("[data-content='content-employee-niek-title']").html(l.employees.niek.header),w.find("[data-content='content-employee-niek-desc']").html(l.employees.niek.description),w.find("[data-content='content-employee-jan-image']").attr("src",l.employees.jan.image.src).attr("alt",l.employees.jan.image.alt),w.find("[data-content='content-employee-jan-title']").html(l.employees.jan.header),w.find("[data-content='content-employee-jan-desc']").html(l.employees.jan.description)),m&&(w.find("[data-content='content-values-image']").css({backgroundImage:m.image.src}),w.find("[data-content='content-values-title']").html(m.header),w.find("[data-content='content-values-desc']").html(m.description),w.find("[data-content='content-value1']").html(m.values.value1),w.find("[data-content='content-value2']").html(m.values.value2),w.find("[data-content='content-value3']").html(m.values.value3),w.find("[data-content='content-value4']").html(m.values.value4),w.find("[data-content='content-value5']").html(m.values.value5),w.find("[data-content='content-value6']").html(m.values.value6)),h&&(w.find("[data-content='content-method-title']").html(h.header),w.find("[data-content='content-method-desc']").html(h.description),w.find("[data-content='content-method-hoverLabel']").html(h.hoverLabel),w.find("[data-content='content-method-intro-title']").html(h.methods.intro.header),w.find("[data-content='content-method-intro-desc']").html(h.methods.intro.description),w.find("[data-content='content-method-design-title']").html(h.methods.design.header),w.find("[data-content='content-method-design-desc']").html(h.methods.design.description),w.find("[data-content='content-method-tuning-title']").html(h.methods.tuning.header),w.find("[data-content='content-method-tuning-desc']").html(h.methods.tuning.description),w.find("[data-content='content-method-construction-title']").html(h.methods.construction.header),w.find("[data-content='content-method-construction-desc']").html(h.methods.construction.description),w.find("[data-content='content-method-eval-title']").html(h.methods.eval.header),w.find("[data-content='content-method-eval-desc']").html(h.methods.eval.description)),f&&(w.find("[data-content='content-model-title']").html(f.header),w.find("[data-content='content-model-image']").css({backgroundImage:f.image.src}),w.find("[data-content='content-model-desc']").html(f.description)),u&&(w.find("[data-content='content-projects-title']").html(u.header),w.find("[data-content='content-projects-desc']").html(u.description),w.find("[data-content='content-projects-button']").html(u.button.label),w.find("[data-content='content-project1-image']").attr("src",u.project1.image.src).attr("alt",u.project1.image.alt),w.find("[data-content='content-project1-title']").html(u.project1.header),w.find("[data-content='content-project1-btn']").html(u.project1.button),w.find("[data-content='content-project2-image']").attr("src",u.project2.image.src).attr("alt",u.project2.image.alt),w.find("[data-content='content-project2-title']").html(u.project2.header),w.find("[data-content='content-project2-btn']").html(u.project2.button)),p&&(w.find("[data-content='content-projects-comparison-title']").html(p.header),w.find("[data-content='content-projects-comparison-desc']").html(p.description)),v&&(w.find("[data-content='footer-testimonials-title']").html(v.testimonials.header),w.find("[data-content='footer-contacts-header']").html(v.contacts.header),w.find("[data-content='footer-contacts-jan-title']").html(v.contacts.jan.header),w.find("[data-content='footer-contacts-jan-email']").attr("href",v.contacts.jan.links.email.src).html(v.contacts.jan.links.email.header),w.find("[data-content='footer-contacts-linkedin-jan']").attr("href",v.contacts.jan.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-jan-title']").html(v.contacts.jan.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-jan-phone']").attr("href",v.contacts.jan.phone),w.find("[data-content='footer-contacts-niek-title']").html(v.contacts.niek.header),w.find("[data-content='footer-contacts-niek-email']").attr("href",v.contacts.niek.links.email.src).html(v.contacts.niek.links.email.header),w.find("[data-content='footer-contacts-linkedin-niek']").attr("href",v.contacts.niek.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-niek-title']").html(v.contacts.niek.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-niek-phone']").attr("href",v.contacts.niek.phone),w.find("[data-content='footer-contacts-phone-header']").html(v.phone.header),w.find("[data-content='footer-contacts-visit-header']").html(v.visit.header),w.find("[data-content='footer-contacts-visit-desc']").html(v.visit.description),w.find("[data-content='footer-copyright-desc']").html(v.copyright.description))}})}),google.maps.event.addDomListener(window,"load",googleMapsInit),$(function(){if($("body").hasClass("projects")){var f=window.location.hash;$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),p=t[a].pages.homepage.content.projects.reviewLink||"",n=t[a].pages.projects,h=$("#projects .projects-wrapper");void 0===a&&chooseCookie(),$.each(n,function(e,t){var i=[],a=t.images,n=parseInt(e)+1,o=t.review,s=o.author||"",d=o.description||"",r=o.date||"",c=s.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),l=o.stars||"";if(a&&0<a.length&&$.each(a,function(e,t){var a=t.src,n=!1,o=a.split(".").pop().toLowerCase();"jpg"!==o&&"png"!==o||(n=!0),t&&n?i.push('<div class="project-image" style="background-image: url('+a+')"></div>'):i.push('<div class="project-image">\n<div class="youtube-video-embed embed-responsive embed-responsive-16by9" id="video">\n<span>\n    <iframe\n        id="player"\n        class="youtube-video embed-responsive-item"\n        frameborder="0"\n        allowfullscreen="1"\n        allow="autoplay; encrypted-media"\n        title="YouTube video player"\n         src="https://www.youtube.com/embed/'+a+'?autoplay=0&rel=0&fs=1&enablejsapi=1">\n    </iframe>\n  </span>\n  </div>\n </div>')}),h.append('<div class="project" id="project'+n+'">\n\t<div class="project-close"></div>\n\t<div class="project-wrapper">\n\t\t<div class="project-images">\n\t\t\t<div class="slider">'+i.join("")+'</div>\n\t\t</div>\n\t\t<div class="project-desc-wrapper">\n\t\t\t<div class="project-desc-content">\n\t\t\t\t<div class="project-header">\n\t\t\t\t\t<h2 class="project-title">'+t.header+'</h2>\n\t\t\t\t\t<div class="project-sub-title">'+t.subTitle+'</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="project-desc"> \n\t\t\t\t   <span>'+t.description+'</span> \n\t\t\t\t   <a class="read-review" data-count="'+n+'">'+p+" "+t.header+'</a> \n\t\t\t   </div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class="project-review">\n\t\t<div class="review-close"></div> \n\t\t<div class="review" id="'+c+'">\n\t\t\t<div class="review-author">'+s+'</div>\n\t\t\t<div class="review-date">'+r+'</div>\n           <div class="review-stars">\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <span></span>\n           </div>\n\t\t\t<div class="review-text">'+d+"</div>\n\t\t</div>\n\t</div>\n</div>"),4<l&&$("#project"+n).find(".review-stars > span").append('<i class="icon-star-full"></i>'),void 0!==o&&""!==d&&void 0!==d||$("#project"+n).find(".read-review").addClass("hidden"),$(".project-images").on("click",function(){if(!$("body").hasClass("open")){$(this).parent().parent(".project").addClass("open");var e=$(this).parent().parent(".project").attr("id");document.location.href="#"+e,$("body").addClass("open"),sliderInit(e),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-title").on("click",function(){if(!$("body").hasClass("open")){var e=$(this).parent().parent().parent().parent().parent();e.addClass("open");var t=e.attr("id");document.location.href="#"+t,$("body").addClass("open"),sliderInit(t),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-close").on("click",function(){$("body").removeClass("open"),$(this).parent(".project").removeClass("open");var e=$(this).parent(".project").attr("id");$("#"+e+" .slider").slick("unslick"),window.location.hash="",document.getElementById(e).scrollIntoView(!0)}),$(".read-review").on("click",function(e){e.preventDefault();var t=$(this).attr("data-count");$("#project"+t).addClass("show-review").find(".project-review").addClass("show")}),$(".review-close").on("click",function(){$(this).parent().removeClass("show").parent(".project").removeClass("show-review")}),f&&void 0!==f){var m="project"+n;m===(f=window.location.hash.substring(1))&&($("#"+f).addClass("open"),$("body").addClass("open"),sliderInit(m))}})},error:function(e){chooseCookie()}})}});var testimonial=$("#google-reviews");function reviewSlider(){testimonial.removeClass("hidden"),testimonial.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,fade:!0,infinite:!0,autoplaySpeed:8e3,arrows:!0,responsive:[{breakpoint:1025,settings:{adaptiveHeight:!0}}]})}$(function(){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.projects;$.each(t,function(e,t){var a=t.review,n=a.author||"",o=a.description||"",i=a.date||"",s=n.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),d=a.stars||"",r=parseInt(e)+1;(a&&void 0!==a&&""!==o&&void 0!==o||""!==d&&void 0!==d)&&(testimonial.addClass("hidden"),0<testimonial.length&&(testimonial.append('<div class="review" id="'+s+r+'">\n               <div class="review-author">'+n+'</div>\n               <div class="review-date">'+i+'</div>\n               <div class="review-stars">\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <span></span>\n               </div>\n               <div class="review-text">'+a.description+"</div>\n            </div>"),4<d&&$(".review#"+s+r).find(".review-stars > span").append('<i class="icon-star-full"></i>')))}),setTimeout(function(){reviewSlider()},1e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbnMuanMiLCJtYXBzSW5pdC5qcyIsImJvb3RzdHJhcC5qcyIsImNvb2tpZXMuanMiLCJoZWFkZXIuanMiLCJpbWFnZUNvbXBhcmlzb24uanMiLCJwcm9qZWN0LWJvb3RzdHJhcC5qcyIsImxvY2FsZS5qcyIsInJldmlld3MuanMiXSwibmFtZXMiOlsiaXNIb21lUGFnZSIsIiQiLCJmbiIsImlzSW5WaWV3cG9ydCIsInRoYXQiLCJ0aGlzIiwibGVuZ3RoIiwiZWxlbWVudFRvcCIsIm9mZnNldCIsInRvcCIsImVsZW1lbnRCb3R0b20iLCJvdXRlckhlaWdodCIsInZpZXdwb3J0VG9wIiwid2luZG93Iiwic2Nyb2xsVG9wIiwidmlld3BvcnRCb3R0b20iLCJoZWlnaHQiLCJtYXAiLCJhYm91dEFuaW1hdGlvbkhhc1JhbiIsImFib3V0VXNBbmltYXRpb25IYXNSYW4iLCJ2YWx1ZXNBbmltYXRpb25IYXNSYW4iLCJoZWFkZXJBbmltYXRpb25IYXNSYW4iLCJicmFuZHNBbmltYXRpb25IYXNSYW4iLCJoZWFkZXJFbGVtIiwiYWJvdXRFbGVtIiwiYnJhbmRzRWxlbSIsImFib3V0VXNFbGVtIiwidmFsdWVzRWxlbSIsImZpcmVBbmltYXRpb25zIiwibG9nbyIsImNhcHRpb24iLCJwbGF5QnRuIiwiVHdlZW5NYXgiLCJmcm9tVG8iLCJjc3MiLCJ5Iiwib3BhY2l0eSIsImRlbGF5Iiwic2NhbGUiLCJlYXNlIiwiQm91bmNlIiwibGVmdFNpZGVFbGVtIiwicmlnaHRTaWRlRWxlbSIsIngiLCJlbXBsbyIsInN0YWdnZXJGcm9tVG8iLCJicmFuZCIsImZpbmQiLCJzbGljayIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwiYXV0b3BsYXkiLCJhdXRvcGxheVNwZWVkIiwiYXJyb3dzIiwic3dpcCIsInJlc3BvbnNpdmUiLCJicmVha3BvaW50Iiwic2V0dGluZ3MiLCJ2YWx1ZUl0ZW0iLCJlYWNoIiwidGV4dEVsZW0iLCJyYW5kb21OdW0iLCJNYXRoIiwicmFuZG9tIiwidG9GaXhlZCIsImVtcGxveWVlIiwiZ2V0RGlyZWN0aW9uIiwic2Nyb2xsIiwibGFzdFNjcm9sbFRvcCIsImNhbGxiYWNrIiwiYWJzIiwiaGFuZGxlTWV0aG9kU2Nyb2xsIiwic3RlcCIsInRvZ2dsZUNsYXNzTmFtZSIsImZhZGVJbkVsZW1DbGFzcyIsIm1ldGhvZEVsZW0iLCJpbnRyb0VsZW1DbGFzcyIsImRlc2lnbkVsZW1DbGFzcyIsInR1bmluZ0VsZW1DbGFzcyIsImNvbnN0cnVjdGlvbkVsZW1DbGFzcyIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzZXRDb29raWUiLCJuYW1lIiwidmFsdWUiLCJkYXlzIiwiZXhwaXJlcyIsImRhdGUiLCJEYXRlIiwic2V0VGltZSIsImdldFRpbWUiLCJ0b1VUQ1N0cmluZyIsImRvY3VtZW50IiwiY29va2llIiwiZ2V0Q29va2llIiwibmFtZUVRIiwiY2EiLCJzcGxpdCIsImkiLCJjIiwiY2hhckF0Iiwic3Vic3RyaW5nIiwiaW5kZXhPZiIsImVyYXNlQ29va2llIiwiY2hvb3NlQ29va2llIiwidXNlckxhbmciLCJuYXZpZ2F0b3IiLCJsYW5ndWFnZSIsInVzZXJMYW5ndWFnZSIsImFjdGl2ZUNvb2tpZSIsInF1ZXJ5UGFyYW0iLCJnZXRQYXJhbWV0ZXJCeU5hbWUiLCJtYXRjaCIsInNldFRpbWVvdXQiLCJsb2NhdGlvbiIsInJlbG9hZCIsInVuZGVmaW5lZCIsImh0bWwiLCJ1cmwiLCJocmVmIiwicmVwbGFjZSIsInJlc3VsdHMiLCJSZWdFeHAiLCJleGVjIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZml4TmF2IiwibmF2IiwidHJhY2tMb2NhdGlvbiIsImUiLCJjb2xvcmJveCIsImZpbGxlckltYWdlIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImZpbGxlckltYWdlT3ciLCJvdXRlcldpZHRoIiwicG9zaXRpb24iLCJwYWdlWCIsImxlZnQiLCJnb29nbGVNYXBzSW5pdCIsIm15TGF0bG5nIiwiZ29vZ2xlIiwibWFwcyIsIkxhdExuZyIsIm1hcE9wdGlvbnMiLCJ6b29tIiwiY2VudGVyIiwic2Nyb2xsd2hlZWwiLCJuYXZpZ2F0aW9uQ29udHJvbCIsIm1hcFR5cGVDb250cm9sIiwic2NhbGVDb250cm9sIiwiZGlzYWJsZURlZmF1bHRVSSIsInN0eWxlcyIsImZlYXR1cmVUeXBlIiwic3R5bGVycyIsInZpc2liaWxpdHkiLCJjb2xvciIsIndlaWdodCIsImh1ZSIsImVsZW1lbnRUeXBlIiwiTWFwIiwiZ2V0RWxlbWVudEJ5SWQiLCJtYXJrZXIiLCJNYXJrZXIiLCJpY29uIiwiaW5mb3dpbmRvdyIsIkluZm9XaW5kb3ciLCJjb250ZW50Iiwid2lkdGgiLCJwYW5CeSIsImV2ZW50IiwiYWRkTGlzdGVuZXIiLCJvcGVuIiwic2xpZGVySW5pdCIsInByb2plY3RFbGVtIiwibGF6eUxvYWQiLCJvbiIsImhhc1Njcm9sbGVkIiwidmlld1BvcnRIZWlnaHQiLCJ2aWV3UG9ydFdpZHRoIiwiYW5pbWF0aW9uSW5jcmVtZW50cyIsIm1ldGhvZEl0ZW0iLCJtZXRob2RDb250ZW50IiwiaXNNb2JpbGUiLCJvcmllbnRhdGlvbiIsInNjcmVlbiIsImlzX2lQYWQiLCJ1c2VyQWdlbnQiLCJwbGFjZWhvbGRlciIsIm1ldGhvZENvbnRhaW5lciIsIm1ldGhvZFNjcm9sbENvbnRhaW5lciIsIm1ldGhvZENvbnRhaW5lckhlaWdodCIsIm1ldGhvZENvbnRhaW5lck9mZnNldCIsIkNhc2VTdHVkeUNvbnRhaW5lciIsIkNhc2VTdHVkeUNvbnRhaW5lck9mZnNldCIsImFib3V0Q29udGFpbmVyIiwicHJlQWJvdXRDb250YWluZXJPZmZzZXQiLCJ2aXNpYmxlQ2xhc3NOYW1lIiwiaXRlbSIsImF0dHIiLCJ0b2dnbGVDbGFzcyIsImFqYXgiLCJzY3JpcHRDaGFyc2V0IiwidHlwZSIsInN1Y2Nlc3MiLCJkYXRhIiwiaGVhZGVyIiwiSlNPTiIsInBhcnNlIiwiZXNjYXBlIiwiYXRvYiIsInBhZ2VzIiwiaG9tZXBhZ2UiLCJ5b3V0dWJlVVJMIiwiZGlyZWN0aW9uIiwibmF2SXNPcGVuIiwibW9iaWxlTmF2IiwiaGFtYnVyZ2VyRWxlbSIsInZpZXdQb3J0T2Zmc2V0IiwicHJldmVudERlZmF1bHQiLCJuYXZMaW5rIiwiaGFzQ2xhc3MiLCJsaW5rUG9zIiwiYW5pbWF0ZSIsImNsaWNrIiwiZm9vdGVyT2Zmc2V0IiwiY29tcGFyaXNvbiIsImNvbXBhcmlzb25XcmFwcGVyIiwiY29tcGFyaXNvbkl0ZW0iLCJjb21wYXJpc29ucyIsImluZGV4IiwiYXBwZW5kIiwiYmVmb3JlIiwiYWZ0ZXIiLCJub3QiLCJuZXh0QXJyb3ciLCJwcmV2QXJyb3ciLCJzd2lwZVRvU2xpZGUiLCJjdXJyZW50U2xpZGUiLCJuZXh0U2xpZGUiLCJpbmtib3giLCIkYm9keSIsImFjdHVhbCIsImxvYyIsImxvY0RhdGEiLCJsYWJlbHMiLCJpbnRybyIsImJyYW5kcyIsImltYWdlcyIsImFib3V0IiwiYWJvdXRVcyIsInZhbHVlcyIsIm1ldGhvZCIsIm1vZGVsIiwicHJvamVjdHMiLCJmb290ZXIiLCJuYXZJdGVtIiwiY29udGFjdCIsIm1pc3Npb24iLCJmb3VuZGF0aW9uIiwiYmFja2dyb3VuZEltYWdlIiwiYmFja2dyb3VuZEltYWdlU3JjIiwiYmFja2dyb3VuZFZpZGVvTXA0U3JjIiwiYmFja2dyb3VuZFZpZGVvV2ViTVNyYyIsImRlc2NyaXB0aW9uIiwic3JjIiwiYWx0Iiwicm93MSIsImltYWdlIiwicm93MiIsImVtcGxveWVlcyIsIm5pZWsiLCJqYW4iLCJ2YWx1ZTEiLCJ2YWx1ZTIiLCJ2YWx1ZTMiLCJ2YWx1ZTQiLCJ2YWx1ZTUiLCJ2YWx1ZTYiLCJob3ZlckxhYmVsIiwibWV0aG9kcyIsImRlc2lnbiIsInR1bmluZyIsImNvbnN0cnVjdGlvbiIsImV2YWwiLCJidXR0b24iLCJsYWJlbCIsInByb2plY3QxIiwicHJvamVjdDIiLCJ0ZXN0aW1vbmlhbHMiLCJjb250YWN0cyIsImxpbmtzIiwiZW1haWwiLCJsaW5rZWRpbiIsInBob25lIiwidmlzaXQiLCJjb3B5cmlnaHQiLCJhZGREb21MaXN0ZW5lciIsImhhc2giLCJyZXZpZXdMaW5rIiwicHJvamVjdERldGFpbCIsInNlY3Rpb24iLCJpbWFnZUFycmF5IiwiaW1hZ2VDb250ZW50IiwiY291bnQiLCJwYXJzZUludCIsInJldmlldyIsImF1dGhvciIsImRlc2MiLCJyZXZpZXdEYXRlIiwiaWRlbnRpZmllciIsInRvTG93ZXJDYXNlIiwic3RhckNvdW50Iiwic3RhcnMiLCJtZWRpYVNyYyIsImlzSW1hZ2UiLCJmaWxlVHlwZSIsInBvcCIsInB1c2giLCJqb2luIiwic3ViVGl0bGUiLCJwYXJlbnQiLCJwYXJlbnRJRCIsInBsYXRmb3JtIiwidGVzdCIsInBhcmVudEVsZW0iLCJzY3JvbGxJbnRvVmlldyIsInByb2plY3RJRCIsImVycm9yIiwiZXJyIiwidGVzdGltb25pYWwiLCJyZXZpZXdTbGlkZXIiLCJmYWRlIiwiaW5maW5pdGUiLCJhZGFwdGl2ZUhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQUEsV0FBQUMsRUFBQSxpQkFDQUQsYUFDQUMsRUFBQUMsR0FBQUMsYUFBQSxXQUNBLElBQUFDLEVBQUFILEVBQUFJLE1BQ0EsR0FBQSxjQUFBRCxHQUFBQSxFQUFBRSxPQUFBLENBQ0EsSUFBQUMsRUFBQU4sRUFBQUksTUFBQUcsU0FBQUMsSUFDQUMsRUFBQUgsRUFBQU4sRUFBQUksTUFBQU0sY0FDQUMsRUFBQVgsRUFBQVksUUFBQUMsWUFDQUMsRUFBQUgsRUFBQVgsRUFBQVksUUFBQUcsU0FDQSxPQUFBSixFQUFBRixHQUFBSCxFQUFBUSxLQUtBLElDWkFFLElEWUFDLHNCQUFBLEVBQ0FDLHdCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLFdBQUF0QixFQUFBLFdBQ0F1QixVQUFBdkIsRUFBQSxVQUNBd0IsV0FBQXhCLEVBQUEsY0FDQXlCLFlBQUF6QixFQUFBLFlBQ0EwQixXQUFBMUIsRUFBQSxXQVlBLFNBQUEyQixpQkFDQSxHQUFBNUIsWUFBQSxFQUFBdUIsV0FBQWpCLFFBQ0FpQixXQUFB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QSxTQUFBQyxHQUNBLElBRUErRixFQUZBN0YsS0FBQUMsTUFBQW5GLG1CQUFBb0YsT0FBQW5NLE9BQUFvTSxLQUFBTCxNQUNBOUcsVUFBQSxTQUNBb0gsTUFBQTJDLFNBRUE1UCxFQUFBMEQsS0FBQWdQLEVBQUEsU0FBQXRFLEVBQUFoQyxHQUNBLElBQUE0RyxFQUFBNUcsRUFBQTRHLE9BQ0FDLEVBQUFELEVBQUFDLFFBQUEsR0FDQUMsRUFBQUYsRUFBQTFDLGFBQUEsR0FDQTZDLEVBQUFILEVBQUExTixNQUFBLEdBQ0E4TixFQUFBSCxFQUFBMUwsUUFBQSxlQUFBLEtBQUE4TCxjQUNBQyxFQUFBTixFQUFBTyxPQUFBLEdBQ0FULEVBQUFDLFNBQUEzRSxHQUFBLEdBRUE0RSxRQUFBN0wsSUFBQTZMLEdBQUEsS0FBQUUsUUFBQS9MLElBQUErTCxHQUFBLEtBQUFJLFFBQUFuTSxJQUFBbU0sS0FDQWtCLFlBQUF4UCxTQUFBLFVBQ0EsRUFBQXdQLFlBQUFuVSxTQUNBbVUsWUFBQW5HLE9BQUEsMkJBQUErRSxFQUFBTixFQUFBLGlEQUNBRyxFQUFBLG1EQUNBRSxFQUFBLG1XQVFBSCxFQUFBMUMsWUFBQSw4QkFHQSxFQUFBZ0QsR0FDQXRULEVBQUEsV0FBQW9ULEVBQUFOLEdBQUFoUSxLQUFBLHdCQUFBdUwsT0FBQSxzQ0FNQXJILFdBQUEsV0FDQXlOLGdCQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNIb21lUGFnZSA9ICQoJ2JvZHkuaG9tZXBhZ2UnKTtcclxuaWYgKGlzSG9tZVBhZ2Upe1xyXG4gICAgJC5mbi5pc0luVmlld3BvcnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGhhdCA9ICQodGhpcyk7XHJcbiAgICAgICAgaWYgKHRoYXQgIT09ICd1bmRlZmluZWQnICYmIHRoYXQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbGVtZW50VG9wID0gJCh0aGlzKS5vZmZzZXQoKS50b3A7XHJcbiAgICAgICAgICAgIHZhciBlbGVtZW50Qm90dG9tID0gZWxlbWVudFRvcCArICQodGhpcykub3V0ZXJIZWlnaHQoKTtcclxuICAgICAgICAgICAgdmFyIHZpZXdwb3J0VG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgICAgICAgICB2YXIgdmlld3BvcnRCb3R0b20gPSB2aWV3cG9ydFRvcCArICQod2luZG93KS5oZWlnaHQoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnRCb3R0b20gPiB2aWV3cG9ydFRvcCAmJiBlbGVtZW50VG9wIDwgdmlld3BvcnRCb3R0b207XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5cclxudmFyIGFib3V0QW5pbWF0aW9uSGFzUmFuID0gZmFsc2U7XHJcbnZhciBhYm91dFVzQW5pbWF0aW9uSGFzUmFuID0gZmFsc2U7XHJcbnZhciB2YWx1ZXNBbmltYXRpb25IYXNSYW4gPSBmYWxzZTtcclxudmFyIGhlYWRlckFuaW1hdGlvbkhhc1JhbiA9IGZhbHNlO1xyXG52YXIgYnJhbmRzQW5pbWF0aW9uSGFzUmFuID0gZmFsc2U7XHJcbnZhciBoZWFkZXJFbGVtID0gJCgnI2hlYWRlcicpO1xyXG52YXIgYWJvdXRFbGVtID0gJCgnI2Fib3V0Jyk7XHJcbnZhciBicmFuZHNFbGVtID0gJCgnLmJyYW5kbGlzdCcpO1xyXG52YXIgYWJvdXRVc0VsZW0gPSAkKCcjYWJvdXRVcycpO1xyXG52YXIgdmFsdWVzRWxlbSA9ICQoJyN2YWx1ZXMnKTtcclxuXHJcblxyXG4kKGZ1bmN0aW9uKCl7XHJcbiAgICBpZiAoaXNIb21lUGFnZSl7XHJcbiAgICAgICAgZmlyZUFuaW1hdGlvbnMoKTtcclxuICAgICAgICAkKHdpbmRvdykub24oJ3Jlc2l6ZSBzY3JvbGwnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgZmlyZUFuaW1hdGlvbnMoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5mdW5jdGlvbiBmaXJlQW5pbWF0aW9ucygpe1xyXG4gICAgaWYoaXNIb21lUGFnZSAmJiBoZWFkZXJFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKGhlYWRlckVsZW0uaXNJblZpZXdwb3J0KCkpe1xyXG4gICAgICAgICAgICB2YXIgbG9nbyA9ICQoJyNoZWFkZXIgLmxvZ28nKTtcclxuICAgICAgICAgICAgdmFyIGNhcHRpb24gPSAkKCcjaGVhZGVyIGgxJyk7XHJcbiAgICAgICAgICAgIHZhciBwbGF5QnRuID0gJCgnI2hlYWRlciAuaWNvbi1wbGF5Jyk7XHJcbiAgICAgICAgICAgIGlmICghaGVhZGVyQW5pbWF0aW9uSGFzUmFuKSB7XHJcbiAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8obG9nbywgLjUsIHtjc3M6IHt5OiBcIi0zMFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3k6XCIwXCIsIG9wYWNpdHk6IFwiMVwifX0pO1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKGNhcHRpb24sIC41LCB7Y3NzOiB7eTogXCItMzBcIiwgb3BhY2l0eTogMH19LCB7Y3NzOnt5OlwiMFwiLCBvcGFjaXR5OiBcIjFcIn0sIGRlbGF5OiAuM30pO1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKHBsYXlCdG4sIC41LCB7b3BhY2l0eTogMCwgc2NhbGU6MS41LCBlYXNlOkJvdW5jZS5lYXNlfSwge29wYWNpdHk6IDEsIHNjYWxlOjF9KTtcclxuICAgICAgICAgICAgICAgIGhlYWRlckFuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAmJiBoZWFkZXJFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKGFib3V0RWxlbS5pc0luVmlld3BvcnQoKSl7XHJcbiAgICAgICAgICAgIHZhciBsZWZ0U2lkZUVsZW0gPSAkKCcjYWJvdXQgPiAubGVmdC1jb250YWluZXInKTtcclxuICAgICAgICAgICAgdmFyIHJpZ2h0U2lkZUVsZW0gPSAkKCcjYWJvdXQgPiAucmlnaHQtY29udGFpbmVyJyk7XHJcbiAgICAgICAgICAgIGlmICghYWJvdXRBbmltYXRpb25IYXNSYW4pIHtcclxuICAgICAgICAgICAgICAgIFR3ZWVuTWF4LmZyb21UbyhsZWZ0U2lkZUVsZW0sIDEsIHtjc3M6IHt4OiBcIi0xMDBcIiwgb3BhY2l0eTogMH19LCB7Y3NzOnt4OlwiMFwiLCBvcGFjaXR5OiBcIjFcIn0sIGRlbGF5OiAxfSk7XHJcbiAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8ocmlnaHRTaWRlRWxlbSwgMSwge2Nzczoge3g6IFwiMTAwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eDpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogMX0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGFib3V0QW5pbWF0aW9uSGFzUmFuID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZihpc0hvbWVQYWdlICYmIGFib3V0VXNFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKGFib3V0VXNFbGVtLmlzSW5WaWV3cG9ydCgpKXtcclxuICAgICAgICAgICAgdmFyIGVtcGxvID0gJCgnLmVtcGxveWVlLXdyYXBwZXInKTtcclxuICAgICAgICAgICAgaWYgKCFhYm91dFVzQW5pbWF0aW9uSGFzUmFuKSB7XHJcbiAgICAgICAgICAgICAgICBUd2Vlbk1heC5zdGFnZ2VyRnJvbVRvKGVtcGxvLCAxLCB7Y3NzOiB7eDogXCItMTAwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eDpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogMX0sIDAuNSk7XHJcbiAgICAgICAgICAgICAgICBhYm91dFVzQW5pbWF0aW9uSGFzUmFuID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZihpc0hvbWVQYWdlICYmIGJyYW5kc0VsZW0ubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgaWYoYnJhbmRzRWxlbS5pc0luVmlld3BvcnQoKSl7XHJcbiAgICAgICAgICAgIHZhciBicmFuZCA9IGJyYW5kc0VsZW0uZmluZCgnbGknKTtcclxuXHJcbiAgICAgICAgICAgIGlmICgkKCcuYnJhbmRsaXN0IGxpJykubGVuZ3RoID4gNSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmJyYW5kbGlzdCcpLnNsaWNrKHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDUsXHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXlTcGVlZDogMzAwMCxcclxuICAgICAgICAgICAgICAgICAgICBhcnJvd3M6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHN3aXA6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2l2ZTogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWtwb2ludDogNjAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFicmFuZHNBbmltYXRpb25IYXNSYW4pIHtcclxuICAgICAgICAgICAgICAgICAgICBUd2Vlbk1heC5zdGFnZ2VyRnJvbVRvKGJyYW5kLCAuNSwge2Nzczoge3g6IFwiLTQwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eDpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogLjJ9LCAwLjIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyYW5kc0FuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAmJiB2YWx1ZXNFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKHZhbHVlc0VsZW0uaXNJblZpZXdwb3J0KCkpe1xyXG4gICAgICAgICAgICB2YXIgdmFsdWVJdGVtID0gJCgnLnZhbHVlSXRlbScpO1xyXG4gICAgICAgICAgICBpZiAoIXZhbHVlc0FuaW1hdGlvbkhhc1Jhbikge1xyXG5cclxuICAgICAgICAgICAgICAgICQuZWFjaCh2YWx1ZUl0ZW0sIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRleHRFbGVtID0gJCh0aGlzKS5maW5kKCdzdHJvbmcnKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZG9tTnVtID0gKE1hdGgucmFuZG9tKCkgKiAoMC41IC0gMS41KSArIDEuNSkudG9GaXhlZCgyKTtcclxuICAgICAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8odGV4dEVsZW0sIDEsIHtjc3M6IHt4OiBcIi0xMFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3g6XCIwXCIsIG9wYWNpdHk6IFwiMVwifSwgZGVsYXk6IHJhbmRvbU51bX0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFsdWVzQW5pbWF0aW9uSGFzUmFuID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZihpc0hvbWVQYWdlICYmIGFib3V0VXNFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKGFib3V0VXNFbGVtLmlzSW5WaWV3cG9ydCgpKXtcclxuICAgICAgICAgICAgdmFyIGVtcGxveWVlID0gJCgnLmVtcGxveWVlLXdyYXBwZXInKTtcclxuICAgICAgICAgICAgaWYgKCFhYm91dFVzQW5pbWF0aW9uSGFzUmFuKSB7XHJcbiAgICAgICAgICAgICAgICBUd2Vlbk1heC5zdGFnZ2VyRnJvbVRvKGVtcGxveWVlLCAxLCB7Y3NzOiB7eDogXCItMTAwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eDpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogMX0sIDAuNSk7XHJcbiAgICAgICAgICAgICAgICBhYm91dFVzQW5pbWF0aW9uSGFzUmFuID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG4iLCIvLyBHb29nbGUgbWFwcyBzZXR1cFxyXG5cclxudmFyIG1hcDtcclxuZ29vZ2xlLm1hcHMuZXZlbnQuYWRkRG9tTGlzdGVuZXIod2luZG93LCAnbG9hZCcsIGdvb2dsZU1hcHNJbml0KTtcclxuXHJcbmZ1bmN0aW9uIGdvb2dsZU1hcHNJbml0KCkge1xyXG4gICAgdmFyIG15TGF0bG5nID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZyg1MS4zNzIwMjcsIDYuMTYwNDc4KTtcclxuICAgIHZhciBtYXBPcHRpb25zID0ge1xyXG4gICAgICAgIHpvb206IDE1LFxyXG4gICAgICAgIGNlbnRlcjogbXlMYXRsbmcsXHJcbiAgICAgICAgc2Nyb2xsd2hlZWw6IGZhbHNlLFxyXG4gICAgICAgIG5hdmlnYXRpb25Db250cm9sOiBmYWxzZSxcclxuICAgICAgICBtYXBUeXBlQ29udHJvbDogZmFsc2UsXHJcbiAgICAgICAgc2NhbGVDb250cm9sOiBmYWxzZSxcclxuICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxyXG4gICAgICAgIHN0eWxlczogW3tcImZlYXR1cmVUeXBlXCI6XCJsYW5kc2NhcGVcIixcInN0eWxlcnNcIjpbe1widmlzaWJpbGl0eVwiOlwic2ltcGxpZmllZFwifSx7XCJjb2xvclwiOlwiIzJiM2Y1N1wifSx7XCJ3ZWlnaHRcIjowLjF9XX0se1wiZmVhdHVyZVR5cGVcIjpcImFkbWluaXN0cmF0aXZlXCIsXCJzdHlsZXJzXCI6W3tcInZpc2liaWxpdHlcIjpcIm9uXCJ9LHtcImh1ZVwiOlwiI2ZmMDAwMFwifSx7XCJ3ZWlnaHRcIjowLjR9LHtcImNvbG9yXCI6XCIjZmZmZmZmXCJ9XX0se1wiZmVhdHVyZVR5cGVcIjpcInJvYWQuaGlnaHdheVwiLFwiZWxlbWVudFR5cGVcIjpcImxhYmVscy50ZXh0XCIsXCJzdHlsZXJzXCI6W3tcIndlaWdodFwiOjEuM30se1wiY29sb3JcIjpcIiNGRkZGRkZcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5oaWdod2F5XCIsXCJlbGVtZW50VHlwZVwiOlwiZ2VvbWV0cnlcIixcInN0eWxlcnNcIjpbe1wiY29sb3JcIjpcIiNmNTVmNzdcIn0se1wid2VpZ2h0XCI6M31dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5hcnRlcmlhbFwiLFwiZWxlbWVudFR5cGVcIjpcImdlb21ldHJ5XCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjZjU1Zjc3XCJ9LHtcIndlaWdodFwiOjEuMX1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5sb2NhbFwiLFwiZWxlbWVudFR5cGVcIjpcImdlb21ldHJ5XCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjZjU1Zjc3XCJ9LHtcIndlaWdodFwiOjAuNH1dfSx7fSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5oaWdod2F5XCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzXCIsXCJzdHlsZXJzXCI6W3tcIndlaWdodFwiOjAuOH0se1wiY29sb3JcIjpcIiNmZmZmZmZcIn0se1widmlzaWJpbGl0eVwiOlwib25cIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5sb2NhbFwiLFwiZWxlbWVudFR5cGVcIjpcImxhYmVsc1wiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJvZmZcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5hcnRlcmlhbFwiLFwiZWxlbWVudFR5cGVcIjpcImxhYmVsc1wiLFwic3R5bGVyc1wiOlt7XCJjb2xvclwiOlwiI2ZmZmZmZlwifSx7XCJ3ZWlnaHRcIjowLjd9XX0se1wiZmVhdHVyZVR5cGVcIjpcInBvaVwiLFwiZWxlbWVudFR5cGVcIjpcImxhYmVsc1wiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJvZmZcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicG9pXCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjNmM1YjdiXCJ9XX0se1wiZmVhdHVyZVR5cGVcIjpcIndhdGVyXCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjZjNiMTkxXCJ9XX0se1wiZmVhdHVyZVR5cGVcIjpcInRyYW5zaXQubGluZVwiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJvblwifV19XVxyXG4gICAgfTtcclxuXHJcbiAgICBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAtY2FudmFzJyksIG1hcE9wdGlvbnMpO1xyXG5cclxuICAgIHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgICAgICBwb3NpdGlvbjogbXlMYXRsbmcsXHJcbiAgICAgICAgaWNvbjogJy8vZXhwby1tYXRlLmdpdGh1Yi5pby9hc3NldHMvaW1hZ2VzL21hcmtlci5wbmcnLFxyXG4gICAgICAgIG1hcDogbWFwXHJcbiAgICB9KTtcclxuXHJcbiAgICB2YXIgaW5mb3dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHtcclxuICAgICAgICBjb250ZW50OiAkKCcuY29udGFjdC1kZXRhaWxzLW1hcCcpLmh0bWwoKVxyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGlmKCQod2luZG93KS53aWR0aCgpID4gNDUwKXtcclxuICAgICAgICBtYXAucGFuQnkoMjAwLCAtMTUwKTtcclxuICAgIH1cclxuXHJcbiAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihtYXJrZXIsICdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGluZm93aW5kb3cub3BlbihtYXAsbWFya2VyKTtcclxuICAgIH0pO1xyXG59IiwiJChmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyoqKioqKioqKiBDb25zdFxyXG4gICAgdmFyIGxhc3RTY3JvbGxUb3AgPSAwXHJcbiAgICAgICAgLCBoYXNTY3JvbGxlZCA9IGZhbHNlXHJcbiAgICAgICAgLCBoZWFkZXJFbGVtID0gJCgnI2hlYWRlcicpXHJcbiAgICAgICAgLCBpc0hvbWVQYWdlID0gJCgnYm9keS5ob21lcGFnZScpXHJcbiAgICAgICAgLCB2aWV3UG9ydEhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKVxyXG4gICAgICAgICwgdmlld1BvcnRXaWR0aCA9ICQod2luZG93KS53aWR0aCgpXHJcbiAgICAgICAgLCBhbmltYXRpb25JbmNyZW1lbnRzID0gOTUwXHJcbiAgICAgICAgLCBzdGVwID0gMFxyXG4gICAgICAgICwgc2Nyb2xsID0gMFxyXG4gICAgICAgICwgaGFzU25hcHBlZCA9IGZhbHNlXHJcbiAgICAgICAgLCBtZXRob2RJdGVtID0gJCgnLm1ldGhvZC1pdGVtJylcclxuICAgICAgICAsIG1ldGhvZENvbnRlbnQgPSAkKCcuZmFkZUluJylcclxuICAgICAgICAsIGlzTW9iaWxlID0gd2luZG93Lm9yaWVudGF0aW9uID4gLTEgJiYgc2NyZWVuLndpZHRoIDw9IDY0MFxyXG4gICAgICAgICwgaXNfaVBhZCA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQYWQvaSkgIT0gbnVsbFxyXG4gICAgICAgICwgcGxhY2Vob2xkZXIgPSAkKCdib2R5JykuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWhvdmVyTGFiZWwnXVwiKTtcclxuXHJcbiAgICAvLyoqKioqKioqKiBFdmVudCBIYW5kbGVyc1xyXG5cclxuICAgICQod2luZG93KS5vbignbW91c2V3aGVlbCBET01Nb3VzZVNjcm9sbCB0b3VjaG1vdmUnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBoYXNTY3JvbGxlZCA9IHRydWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmlld1BvcnRIZWlnaHQgPSAkKHRoaXMpLmhlaWdodCgpO1xyXG4gICAgICAgIHZpZXdQb3J0V2lkdGggPSAkKHRoaXMpLndpZHRoKCk7XHJcbiAgICAgICAgYW5pbWF0aW9uSW5jcmVtZW50cyA9ICQod2luZG93KS5oZWlnaHQoKSAvIDEwMCAqIDIwO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAhPT0gdW5kZWZpbmVkICYmIGlzSG9tZVBhZ2UubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgdmFyIG1ldGhvZENvbnRhaW5lciA9ICQoJyNtZXRob2QnKVxyXG4gICAgICAgICAgICAsIG1ldGhvZFNjcm9sbENvbnRhaW5lciA9ICQoJy5tZXRob2Qtc2Nyb2xsLXdyYXBwZXInKVxyXG4gICAgICAgICAgICAsIG1ldGhvZENvbnRhaW5lckhlaWdodCA9IG1ldGhvZENvbnRhaW5lci5oZWlnaHQoKVxyXG4gICAgICAgICAgICAsIG1ldGhvZENvbnRhaW5lck9mZnNldCA9IG1ldGhvZENvbnRhaW5lci5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgLCBDYXNlU3R1ZHlDb250YWluZXIgPSAkKCcjY2FzZS1zdHVkaWVzJylcclxuICAgICAgICAgICAgLCBDYXNlU3R1ZHlDb250YWluZXJPZmZzZXQgPSB+fkNhc2VTdHVkeUNvbnRhaW5lci5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgLCBhYm91dENvbnRhaW5lciA9ICQoJyNhYm91dCcpXHJcbiAgICAgICAgICAgICwgcHJlQWJvdXRDb250YWluZXIgPSAkKCcjcHJlYWJvdXQnKVxyXG4gICAgICAgICAgICAsIHByZUFib3V0Q29udGFpbmVyT2Zmc2V0ID0gcHJlQWJvdXRDb250YWluZXIub2Zmc2V0KCkudG9wXHJcbiAgICAgICAgICAgICwgdG9nZ2xlQ2xhc3NOYW1lID0gJ2FjdGl2ZSdcclxuICAgICAgICAgICAgLCB2aXNpYmxlQ2xhc3NOYW1lID0gJ3Nob3cnO1xyXG5cclxuICAgICAgICBpZihpc01vYmlsZSB8fCBpc19pUGFkKSB7XHJcbiAgICAgICAgICAgIENhc2VTdHVkeUNvbnRhaW5lci5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgbWV0aG9kQ29udGVudC5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgYWJvdXRDb250YWluZXIuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKG1ldGhvZEl0ZW0pLm9uKCdtb3VzZWVudGVyJywgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgdmFyIGl0ZW0gPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaXRlbScpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmRpYWdyYW0tbG9nbycpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgaWYocGxhY2Vob2xkZXIubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlci5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnLm1ldGhvZC1kZXNjLicrIGl0ZW0pLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnI2RpYWdyYW0nKS5hZGRDbGFzcyhpdGVtKTtcclxuICAgICAgICB9KS5vbignbW91c2VsZWF2ZScsZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgdmFyIGl0ZW0gPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaXRlbScpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmRpYWdyYW0tbG9nbycpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgaWYocGxhY2Vob2xkZXIubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlci5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnLm1ldGhvZC1kZXNjLicrIGl0ZW0pLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnI2RpYWdyYW0nKS5yZW1vdmVDbGFzcyhpdGVtKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmNsb3NlLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICQoJ2JvZHknKS50b2dnbGVDbGFzcygnaXNQbGF5aW5nJyk7XHJcbiAgICAgICAgICAgIGhlYWRlckVsZW0ucmVtb3ZlQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgaGVhZGVyRWxlbS5maW5kKCcudmlkZW8tY29udGFpbmVyJykucmVtb3ZlQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgJCgnLnlvdXR1YmUtdmlkZW8tZW1iZWQgaWZyYW1lJykuYXR0cignaWQnLCAnJykuYXR0cignc3JjJywgJycpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcucGxheS12aWRlby13cmFwcGVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgJCgnYm9keScpLnRvZ2dsZUNsYXNzKCdpc1BsYXlpbmcnKTtcclxuICAgICAgICAgICAgaGVhZGVyRWxlbS5hZGRDbGFzcygncGxheScpO1xyXG4gICAgICAgICAgICBoZWFkZXJFbGVtLmZpbmQoJy52aWRlby1jb250YWluZXInKS5hZGRDbGFzcygncGxheScpO1xyXG4gICAgICAgICAgICB2YXIgdXJsID0gJy4vYXNzZXRzL2pzb24vY29udGVudC5qc29uJztcclxuXHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIHNjcmlwdENoYXJzZXQ6IFwidXRmLThcIixcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhY3R1YWwgPSBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUod2luZG93LmF0b2IoZGF0YSkpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxvYyA9IGdldENvb2tpZSgnbGFuZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsb2NEYXRhID0gYWN0dWFsW2xvY107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGhvbWVwYWdlID0gbG9jRGF0YS5wYWdlcy5ob21lcGFnZTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaGVhZGVyID0gaG9tZXBhZ2UuaGVhZGVyLmNvbnRlbnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy55b3V0dWJlLXZpZGVvLWVtYmVkIGlmcmFtZScpLmF0dHIoJ2lkJywgaGVhZGVyLnlvdXR1YmVVUkwpLmF0dHIoJ3NyYycsICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nICsgaGVhZGVyLnlvdXR1YmVVUkwgKyAnP2F1dG9wbGF5PTAmcmVsPTAmZnM9MSZlbmFibGVqc2FwaT0xJylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQod2luZG93KS5vbignc2Nyb2xsJywgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgc2Nyb2xsID0gfn4kKHRoaXMpLnNjcm9sbFRvcCgpO1xyXG5cclxuICAgICAgICAgICAgaWYodmlld1BvcnRIZWlnaHQgPCAxMTAwKXtcclxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbkluY3JlbWVudHMgPSAxMDUwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBtZXRob2RJdGVtLnJlbW92ZUNsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcblxyXG4gICAgICAgICAgICBnZXREaXJlY3Rpb24oc2Nyb2xsLCBsYXN0U2Nyb2xsVG9wLCBmdW5jdGlvbihkaXJlY3Rpb24sIHNjcm9sbCl7XHJcbiAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsVG9wID0gc2Nyb2xsO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmKHNjcm9sbCAmJiBoYXNTY3JvbGxlZCAmJiAhaXNNb2JpbGUgJiYgdmlld1BvcnRXaWR0aCA+IDEyMDAgJiYgIWlzX2lQYWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZihkaXJlY3Rpb24gPT09ICdkb3duJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL29uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGwgPj0gbWV0aG9kQ29udGFpbmVyT2Zmc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc1NuYXBwZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2RDb250ZW50LnJlbW92ZUNsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbWV0aG9kSXRlbS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBtZXRob2RTY3JvbGxDb250YWluZXIuYWRkQ2xhc3MoJ2ZpeGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kU2Nyb2xsQ29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1ldGhvZFNjcm9sbCg1KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaGFzU25hcHBlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGwgPj0gbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICsgbWV0aG9kQ29udGFpbmVySGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXNlU3R1ZHlDb250YWluZXIuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2RDb250ZW50LnJlbW92ZUNsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tZXRob2RJdGVtLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbWV0aG9kU2Nyb2xsQ29udGFpbmVyLnJlbW92ZUNsYXNzKCdmaXhlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kU2Nyb2xsQ29udGFpbmVyLnJlbW92ZUNsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9oYXNTbmFwcGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGwgPj0gcHJlQWJvdXRDb250YWluZXJPZmZzZXQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3V0Q29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ2FzZVN0dWR5Q29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2RDb250ZW50LmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhYm91dENvbnRhaW5lci5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3VwJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL29uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGwgPCBDYXNlU3R1ZHlDb250YWluZXJPZmZzZXQgLSBhbmltYXRpb25JbmNyZW1lbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc1NuYXBwZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21ldGhvZEl0ZW0ucmVtb3ZlQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21ldGhvZFNjcm9sbENvbnRhaW5lci5hZGRDbGFzcygnZml4ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2RTY3JvbGxDb250YWluZXIuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlTWV0aG9kU2Nyb2xsKDUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9oYXNTbmFwcGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbCA8PSBtZXRob2RDb250YWluZXJPZmZzZXQgLSAxMDAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2RDb250ZW50LnJlbW92ZUNsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21ldGhvZEl0ZW0ucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tZXRob2RTY3JvbGxDb250YWluZXIucmVtb3ZlQ2xhc3MoJ2ZpeGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2hhc1NuYXBwZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYoaGFzU25hcHBlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsID4gbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICYmIHNjcm9sbCA8IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXAgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNjcm9sbCA+IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMgJiYgc2Nyb2xsIDwgbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICsgYW5pbWF0aW9uSW5jcmVtZW50cyAqIDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXAgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNjcm9sbCA+IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMgKiAyICYmIHNjcm9sbCA8IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMgKiAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwID0gMztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzY3JvbGwgPiBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzICogMyAmJiBzY3JvbGwgPCBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzICogNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcCA9IDQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2Nyb2xsID4gbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICsgYW5pbWF0aW9uSW5jcmVtZW50cyAqIDQgJiYgc2Nyb2xsIDwgQ2FzZVN0dWR5Q29udGFpbmVyT2Zmc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwID0gNTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlTWV0aG9kU2Nyb2xsKHN0ZXApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGdldERpcmVjdGlvbiAoc2Nyb2xsLCBsYXN0U2Nyb2xsVG9wLCBjYWxsYmFjayl7XHJcbiAgICB2YXIgZGlyZWN0aW9uID0gbnVsbFxyXG4gICAgICAgICwgZGVsdGEgPSA1O1xyXG5cclxuICAgIGlmKE1hdGguYWJzKGxhc3RTY3JvbGxUb3AgLSBzY3JvbGwpIDw9IGRlbHRhKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChzY3JvbGwgPiBsYXN0U2Nyb2xsVG9wKXtcclxuICAgICAgICBkaXJlY3Rpb24gPSAnZG93bic7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRpcmVjdGlvbiA9ICd1cCc7XHJcbiAgICB9XHJcbiAgICBjYWxsYmFjayhkaXJlY3Rpb24sIHNjcm9sbCk7XHJcbn1cclxuXHJcbi8vIFRoaXMgZnVuY3Rpb24gc2hvd2VkIHRoZSBhcHByb3ByaWF0ZSBidWJibGVcclxuLy8gY3VycmVudGx5IG5vdCB1c2VkIGFzIHRoZSBzY3JvbGxpbmcgZnVuY3Rpb24gaXMgZGlzYWJsZWRcclxuZnVuY3Rpb24gaGFuZGxlTWV0aG9kU2Nyb2xsKHN0ZXApe1xyXG4gICAgdmFyIHRvZ2dsZUNsYXNzTmFtZSA9ICdtZXRob2QnXHJcbiAgICAgICAgLCBmYWRlSW5FbGVtQ2xhc3MgPSAnLmZhZGVJbidcclxuICAgICAgICAsIG1ldGhvZEVsZW0gPSAnLm1ldGhvZC1pdGVtJ1xyXG4gICAgICAgICwgaW50cm9FbGVtQ2xhc3MgPSAnLmludHJvJ1xyXG4gICAgICAgICwgZGVzaWduRWxlbUNsYXNzID0gJy5kZXNpZ24nXHJcbiAgICAgICAgLCB0dW5pbmdFbGVtQ2xhc3MgPSAnLnR1bmluZydcclxuICAgICAgICAsIGNvbnN0cnVjdGlvbkVsZW1DbGFzcyA9ICcuY29uc3RydWN0aW9uJ1xyXG4gICAgICAgICwgZXZhbEVsZW1DbGFzcyA9ICcuZXZhbCc7XHJcblxyXG4gICAgJChmYWRlSW5FbGVtQ2xhc3MpLnJlbW92ZUNsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAkKG1ldGhvZEVsZW0pLnJlbW92ZUNsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcblxyXG4gICAgaWYoc3RlcCA9PT0gMSl7XHJcbiAgICAgICAgJChmYWRlSW5FbGVtQ2xhc3MraW50cm9FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2ludHJvRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgfSBlbHNlIGlmKHN0ZXAgPT09IDIpIHtcclxuICAgICAgICAkKG1ldGhvZEVsZW0raW50cm9FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChmYWRlSW5FbGVtQ2xhc3MrZGVzaWduRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQobWV0aG9kRWxlbStkZXNpZ25FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICB9IGVsc2UgaWYoc3RlcCA9PT0gMykge1xyXG4gICAgICAgICQobWV0aG9kRWxlbStpbnRyb0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rZGVzaWduRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQoZmFkZUluRWxlbUNsYXNzK3R1bmluZ0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rdHVuaW5nRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgfSBlbHNlIGlmKHN0ZXAgPT09IDQpIHtcclxuICAgICAgICAkKG1ldGhvZEVsZW0raW50cm9FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2Rlc2lnbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rdHVuaW5nRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQoZmFkZUluRWxlbUNsYXNzK2NvbnN0cnVjdGlvbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rY29uc3RydWN0aW9uRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgfSBlbHNlIGlmKHN0ZXAgPT09IDUpIHtcclxuICAgICAgICAkKG1ldGhvZEVsZW0raW50cm9FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2Rlc2lnbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rdHVuaW5nRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQobWV0aG9kRWxlbStjb25zdHJ1Y3Rpb25FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChmYWRlSW5FbGVtQ2xhc3MrZXZhbEVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rZXZhbEVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgIH1cclxufSIsImNob29zZUNvb2tpZSgpO1xyXG5cclxuZnVuY3Rpb24gc2V0Q29va2llKG5hbWUsdmFsdWUsZGF5cykge1xyXG4gICAgdmFyIGV4cGlyZXMgPSBcIlwiO1xyXG4gICAgaWYgKGRheXMpIHtcclxuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgKGRheXMqMjQqNjAqNjAqMTAwMCkpO1xyXG4gICAgICAgIGV4cGlyZXMgPSBcIjsgZXhwaXJlcz1cIiArIGRhdGUudG9VVENTdHJpbmcoKTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmNvb2tpZSA9IG5hbWUgKyBcIj1cIiArICh2YWx1ZSB8fCBcIlwiKSAgKyBleHBpcmVzICsgXCI7IHBhdGg9L1wiO1xyXG59XHJcbmZ1bmN0aW9uIGdldENvb2tpZShuYW1lKSB7XHJcbiAgICB2YXIgbmFtZUVRID0gbmFtZSArIFwiPVwiO1xyXG4gICAgdmFyIGNhID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7Jyk7XHJcbiAgICBmb3IodmFyIGk9MDtpIDwgY2EubGVuZ3RoO2krKykge1xyXG4gICAgICAgIHZhciBjID0gY2FbaV07XHJcbiAgICAgICAgd2hpbGUgKGMuY2hhckF0KDApPT0nICcpIGMgPSBjLnN1YnN0cmluZygxLGMubGVuZ3RoKTtcclxuICAgICAgICBpZiAoYy5pbmRleE9mKG5hbWVFUSkgPT0gMCkgcmV0dXJuIGMuc3Vic3RyaW5nKG5hbWVFUS5sZW5ndGgsYy5sZW5ndGgpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cclxuZnVuY3Rpb24gZXJhc2VDb29raWUobmFtZSkge1xyXG4gICAgZG9jdW1lbnQuY29va2llID0gbmFtZSsnPTsgTWF4LUFnZT0tOTk5OTk5OTk7JztcclxufVxyXG5cclxuZnVuY3Rpb24gY2hvb3NlQ29va2llKCl7XHJcbiAgICB2YXIgdXNlckxhbmcgPSBuYXZpZ2F0b3IubGFuZ3VhZ2UgfHwgbmF2aWdhdG9yLnVzZXJMYW5ndWFnZTtcclxuICAgIHZhciBhY3RpdmVDb29raWUgPSBnZXRDb29raWUoJ2xhbmcnKTtcclxuICAgIHZhciBxdWVyeVBhcmFtID0gZ2V0UGFyYW1ldGVyQnlOYW1lKCdsYW5nJyk7XHJcbiAgICBpZihhY3RpdmVDb29raWUgPT09IHVuZGVmaW5lZCB8fCBhY3RpdmVDb29raWUgPT09IG51bGwgfHwgYWN0aXZlQ29va2llID09PSAnJyl7XHJcbiAgICAgICAgaWYodXNlckxhbmcubWF0Y2goL2RlL2cpKXtcclxuICAgICAgICAgICAgc2V0Q29va2llKCdsYW5nJywnZGUnLDcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodXNlckxhbmcubWF0Y2goL2VuL2cpKXtcclxuICAgICAgICAgICAgc2V0Q29va2llKCdsYW5nJywnZW4nLDcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodXNlckxhbmcubWF0Y2goL25sL2cpKSB7XHJcbiAgICAgICAgICAgIHNldENvb2tpZSgnbGFuZycsJ25sJyw3KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZXRDb29raWUoJ2xhbmcnLCdubCcsNyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICB9LDIwKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnYm9keScpLmFkZENsYXNzKGFjdGl2ZUNvb2tpZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHF1ZXJ5UGFyYW0gIT09IHVuZGVmaW5lZCAmJiBxdWVyeVBhcmFtID09PSAnZGUnKXtcclxuICAgICAgICBzZXRDb29raWUoJ2xhbmcnLCdkZScsNyk7XHJcbiAgICB9IGVsc2UgaWYgKHF1ZXJ5UGFyYW0gIT09IHVuZGVmaW5lZCAmJiBxdWVyeVBhcmFtID09PSAnZW4nKXtcclxuICAgICAgICBzZXRDb29raWUoJ2xhbmcnLCdlbicsNyk7XHJcbiAgICB9IGVsc2UgaWYgKHF1ZXJ5UGFyYW0gIT09IHVuZGVmaW5lZCAmJiBxdWVyeVBhcmFtID09PSAnbmwnKXtcclxuICAgICAgICBzZXRDb29raWUoJ2xhbmcnLCdubCcsNyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICQoJyNuYXYgLmFjdGl2ZS1sb2MnKS5odG1sKGdldENvb2tpZSgnbGFuZycpKTtcclxuICAgIH0sMjAwKTtcclxuICAgIFxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRQYXJhbWV0ZXJCeU5hbWUobmFtZSwgdXJsKSB7XHJcbiAgICBpZiAoIXVybCkgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XHJcbiAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC9bXFxbXFxdXS9nLCAnXFxcXCQmJyk7XHJcbiAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdbPyZdJyArIG5hbWUgKyAnKD0oW14mI10qKXwmfCN8JCknKSxcclxuICAgICAgICByZXN1bHRzID0gcmVnZXguZXhlYyh1cmwpO1xyXG4gICAgaWYgKCFyZXN1bHRzKSByZXR1cm4gbnVsbDtcclxuICAgIGlmICghcmVzdWx0c1syXSkgcmV0dXJuICcnO1xyXG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyZXN1bHRzWzJdLnJlcGxhY2UoL1xcKy9nLCAnICcpKTtcclxufVxyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBuYXZJc09wZW4gPSBmYWxzZVxyXG4gICAgICAgICwgbW9iaWxlTmF2ID0gJCgnI25hdiB1bCcpXHJcbiAgICAgICAgLCBoYW1idXJnZXJFbGVtID0gJCgnLmhhbWJ1cmdlcicpXHJcbiAgICAgICAgLCB2aWV3UG9ydE9mZnNldCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICAkKCcjbmF2IGxpIGEnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdmFyIG5hdkxpbmsgPSAkKHRoaXMpLmF0dHIoJ2hyZWYnKTtcclxuICAgICAgICBpZihuYXZMaW5rLmluZGV4T2YoJy4nKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBuYXZMaW5rO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoJCh0aGlzKS5oYXNDbGFzcygnbG9jJykpe1xyXG4gICAgICAgICAgICBlcmFzZUNvb2tpZSgnbGFuZycpO1xyXG4gICAgICAgICAgICBzZXRDb29raWUoJ2xhbmcnLG5hdkxpbmssNyk7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgfSwyMCk7XHJcbiAgICAgICAgfSBlbHNlIGlmKG5hdkxpbmsuaW5kZXhPZignIycpICE9PSAtMSkge1xyXG4gICAgICAgICAgICB2YXIgbGlua1BvcyA9ICQobmF2TGluaykub2Zmc2V0KCkudG9wO1xyXG4gICAgICAgICAgICBpZiAobmF2TGluayA9PT0gJyNmb290ZXInKSB7XHJcbiAgICAgICAgICAgICAgICBsaW5rUG9zID0gJCgnI2NvbnRhY3QtaW5mbycpLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChuYXZMaW5rID09PSAnI2NvbXBhcmlzb24nKSB7XHJcbiAgICAgICAgICAgICAgICBsaW5rUG9zID0gJCgnI2NvbXBhcmlzb24td3JhcHBlcicpLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiaHRtbCwgYm9keVwiKS5hbmltYXRlKHsgc2Nyb2xsVG9wOiBsaW5rUG9zIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG5hdklzT3Blbikge1xyXG4gICAgICAgICAgICBoYW1idXJnZXJFbGVtLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICBtb2JpbGVOYXYucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpO1xyXG4gICAgICAgICAgICBuYXZJc09wZW4gPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBoYW1idXJnZXJFbGVtLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICBtb2JpbGVOYXYudG9nZ2xlQ2xhc3MoXCJvcGVuXCIpO1xyXG4gICAgICAgIG5hdklzT3BlbiA9IHRydWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIHNjcm9sbCA9IH5+JCh0aGlzKS5zY3JvbGxUb3AoKTtcclxuICAgICAgICBmaXhOYXYoc2Nyb2xsKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJy5jb250YWN0LWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIGZvb3Rlck9mZnNldCA9ICQoJ2Zvb3RlcicpLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAkKFwiaHRtbCwgYm9keVwiKS5hbmltYXRlKHsgc2Nyb2xsVG9wOiBmb290ZXJPZmZzZXQgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBmaXhOYXYodmlld1BvcnRPZmZzZXQpO1xyXG59KTtcclxuXHJcblxyXG5mdW5jdGlvbiBmaXhOYXYoc2Nyb2xsKXtcclxuICAgIHZhciBuYXYgPSAkKFwiI25hdlwiKTtcclxuICAgIGlmIChzY3JvbGwgPj0gNTAwKSB7XHJcbiAgICAgICAgbmF2LmFkZENsYXNzKFwiZml4ZWRcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5hdi5yZW1vdmVDbGFzcyhcImZpeGVkXCIpO1xyXG4gICAgfVxyXG59IiwiJChmdW5jdGlvbigpe1xyXG4gICAgLy8gTG9hZCBwcm9qZWN0c1xyXG4gICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnaG9tZXBhZ2UnKSl7XHJcbiAgICAgICAgdmFyIHVybCA9ICcuL2Fzc2V0cy9qc29uL2NvbnRlbnQuYmluJztcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgc2NyaXB0Q2hhcnNldDogXCJ1dGYtOFwiLFxyXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFjdHVhbCA9IEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh3aW5kb3cuYXRvYihkYXRhKSkpKTtcclxuICAgICAgICAgICAgICAgIHZhciBsb2MgPSBnZXRDb29raWUoJ2xhbmcnKTtcclxuICAgICAgICAgICAgICAgIHZhciBsb2NEYXRhID0gYWN0dWFsW2xvY107XHJcbiAgICAgICAgICAgICAgICB2YXIgaG9tZXBhZ2UgPSBsb2NEYXRhLnBhZ2VzLmhvbWVwYWdlO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbXBhcmlzb24gPSBob21lcGFnZS5jb250ZW50LmNvbXBhcmlzb247XHJcbiAgICAgICAgICAgICAgICB2YXIgY29tcGFyaXNvbldyYXBwZXIgPSAkKFwiI2NvbXBhcmlzb25cIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29tcGFyaXNvbkl0ZW0gPSBjb21wYXJpc29uLmNvbXBhcmlzb25zIHx8ICcnO1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGNvbXBhcmlzb25JdGVtLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICBjb21wYXJpc29uV3JhcHBlci5hcHBlbmQoJzxkaXYgY2xhc3M9XCJpdGVtXCI+PGltZyBkYXRhLWNvbnRlbnQ9XCJjb250ZW50LWNvbXBhcmlzb24tYmVmb3JlXCIgc3JjPVwiJyArIGl0ZW0uYmVmb3JlICsgJ1wiIGNsYXNzPVwiYmVmb3JlXCIgYWx0PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBkYXRhLWNvbnRlbnQ9XCJjb250ZW50LWNvbXBhcmlzb24tYWZ0ZXJcIiBjbGFzcz1cImFmdGVyXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyArIGl0ZW0uYWZ0ZXIgKyAnKVwiPjwvZGl2PjwvZGl2PicpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKXtcclxuICAgICAgICAgICAgICAgICAgICBjb21wYXJpc29uV3JhcHBlci5ub3QoJy5zbGljay1pbml0aWFsaXplZCcpLnNsaWNrKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TaG93OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5U3BlZWQ6IDMwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRBcnJvdzogJy5pY29uLWFycm93LXJpZ2h0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFycm93OiAnLmljb24tYXJyb3ctbGVmdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXBlVG9TbGlkZTogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBjb21wYXJpc29uV3JhcHBlci5vbignc2V0UG9zaXRpb24nLCBmdW5jdGlvbihldmVudCwgc2xpY2ssIGN1cnJlbnRTbGlkZSwgbmV4dFNsaWRlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlua2JveCA9IGNvbXBhcmlzb25XcmFwcGVyLmZpbmQoJy5zbGljay1hY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlua2JveCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5rYm94Lm9uKFwibW91c2Vtb3ZlXCIsdHJhY2tMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmtib3gub24oXCJ0b3VjaHN0YXJ0XCIsdHJhY2tMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmtib3gub24oXCJ0b3VjaG1vdmVcIix0cmFja0xvY2F0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSwyMDApO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5mdW5jdGlvbiB0cmFja0xvY2F0aW9uKGUpe1xyXG4gICAgdmFyIGNvbG9yYm94ID0gJCgnLnNsaWNrLWFjdGl2ZSAuYWZ0ZXInKVxyXG4gICAgICAgICwgZmlsbGVySW1hZ2UgPSAkKCcuc2xpY2stYWN0aXZlIC5iZWZvcmUnKVxyXG4gICAgICAgICwgcmVjdCA9IGZpbGxlckltYWdlWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXHJcbiAgICAgICAgLCBmaWxsZXJJbWFnZU93ID0gZmlsbGVySW1hZ2Uub3V0ZXJXaWR0aCgpXHJcbiAgICAgICAgLCBwb3NpdGlvbiA9ICgoZS5wYWdlWCAtIHJlY3QubGVmdCkgLyBmaWxsZXJJbWFnZU93KSoxMDA7XHJcblxyXG4gICAgaWYocG9zaXRpb24gPD0gMTAwKXtcclxuICAgICAgICBjb2xvcmJveC5jc3MoJ3dpZHRoJywgcG9zaXRpb24rXCIlXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCIkKGZ1bmN0aW9uKCl7XHJcbiAgICAvLyBMb2FkIHByb2plY3RzXHJcbiAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdwcm9qZWN0cycpKXtcclxuICAgICAgICB2YXIgdXJsID0gJy4vYXNzZXRzL2pzb24vY29udGVudC5iaW4nO1xyXG4gICAgICAgIHZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2g7XHJcblxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICBzY3JpcHRDaGFyc2V0OiBcInV0Zi04XCIsXHJcbiAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWN0dWFsID0gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHdpbmRvdy5hdG9iKGRhdGEpKSkpXHJcbiAgICAgICAgICAgICAgICAsIGxvYyA9IGdldENvb2tpZSgnbGFuZycpXHJcbiAgICAgICAgICAgICAgICAsIGhvbWVwcm9qZWN0ID0gYWN0dWFsW2xvY10ucGFnZXMuaG9tZXBhZ2UuY29udGVudC5wcm9qZWN0c1xyXG4gICAgICAgICAgICAgICAgLCByZXZpZXdMaW5rID0gaG9tZXByb2plY3QucmV2aWV3TGluayB8fCAnJ1xyXG4gICAgICAgICAgICAgICAgLCBwcm9qZWN0RGV0YWlsID0gYWN0dWFsW2xvY10ucGFnZXMucHJvamVjdHNcclxuICAgICAgICAgICAgICAgICwgc2VjdGlvbiA9ICQoJyNwcm9qZWN0cyAucHJvamVjdHMtd3JhcHBlcicpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChsb2MgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNob29zZUNvb2tpZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICQuZWFjaChwcm9qZWN0RGV0YWlsLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW1hZ2VBcnJheSA9IFtdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgaW1hZ2VDb250ZW50ID0gaXRlbS5pbWFnZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgLCBjb3VudCA9IHBhcnNlSW50KGluZGV4KSArIDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgLCByZXZpZXcgPSBpdGVtLnJldmlld1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAsIGF1dGhvciA9IHJldmlldy5hdXRob3IgfHwgJydcclxuICAgICAgICAgICAgICAgICAgICAgICAgLCBkZXNjID0gcmV2aWV3LmRlc2NyaXB0aW9uIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgcmV2aWV3RGF0ZSA9IHJldmlldy5kYXRlIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgaWRlbnRpZmllciA9IGF1dGhvci5yZXBsYWNlKC9bXkEtWjAtOV0rL2lnLCBcIi1cIikudG9Mb3dlckNhc2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAsIHN0YXJDb3VudCA9IHJldmlldy5zdGFycyB8fCAnJztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGltYWdlQ29udGVudCAmJiBpbWFnZUNvbnRlbnQubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2goaW1hZ2VDb250ZW50LCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZWRpYVNyYyA9IGl0ZW0uc3JjXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGlzSW1hZ2UgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBmaWxlVHlwZSA9IG1lZGlhU3JjLnNwbGl0KCcuJykucG9wKCkudG9Mb3dlckNhc2UoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZVR5cGUgPT09ICdqcGcnIHx8IGZpbGVUeXBlID09PSAncG5nJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW1hZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGl0ZW0gJiYgaXNJbWFnZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VBcnJheS5wdXNoKCc8ZGl2IGNsYXNzPVwicHJvamVjdC1pbWFnZVwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCcrbWVkaWFTcmMrJylcIj48L2Rpdj4nKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZUFycmF5LnB1c2goJzxkaXYgY2xhc3M9XCJwcm9qZWN0LWltYWdlXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ5b3V0dWJlLXZpZGVvLWVtYmVkIGVtYmVkLXJlc3BvbnNpdmUgZW1iZWQtcmVzcG9uc2l2ZS0xNmJ5OVwiIGlkPVwidmlkZW9cIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICA8aWZyYW1lXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgaWQ9XCJwbGF5ZXJcIlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgIGNsYXNzPVwieW91dHViZS12aWRlbyBlbWJlZC1yZXNwb25zaXZlLWl0ZW1cIlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgIGZyYW1lYm9yZGVyPVwiMFwiXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgYWxsb3dmdWxsc2NyZWVuPVwiMVwiXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgYWxsb3c9XCJhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhXCJcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICB0aXRsZT1cIllvdVR1YmUgdmlkZW8gcGxheWVyXCJcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgc3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJysgbWVkaWFTcmMgKyc/YXV0b3BsYXk9MCZyZWw9MCZmcz0xJmVuYWJsZWpzYXBpPTFcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgIDwvaWZyYW1lPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgIDwvc3Bhbj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICA8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIDwvZGl2PicpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5hcHBlbmQoJzxkaXYgY2xhc3M9XCJwcm9qZWN0XCIgaWQ9XCJwcm9qZWN0Jytjb3VudCsnXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LWNsb3NlXCI+PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LXdyYXBwZXJcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHQ8ZGl2IGNsYXNzPVwicHJvamVjdC1pbWFnZXNcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdDxkaXYgY2xhc3M9XCJzbGlkZXJcIj4nK2ltYWdlQXJyYXkuam9pbihcIlwiKSsnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PGRpdiBjbGFzcz1cInByb2plY3QtZGVzYy13cmFwcGVyXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHQ8ZGl2IGNsYXNzPVwicHJvamVjdC1kZXNjLWNvbnRlbnRcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdFx0PGRpdiBjbGFzcz1cInByb2plY3QtaGVhZGVyXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdFx0PGgyIGNsYXNzPVwicHJvamVjdC10aXRsZVwiPicraXRlbS5oZWFkZXIrJzwvaDI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdFx0PGRpdiBjbGFzcz1cInByb2plY3Qtc3ViLXRpdGxlXCI+JytpdGVtLnN1YlRpdGxlKyc8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdFx0PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LWRlc2NcIj4gXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdCAgIDxzcGFuPicraXRlbS5kZXNjcmlwdGlvbisnPC9zcGFuPiBcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdFx0ICAgPGEgY2xhc3M9XCJyZWFkLXJldmlld1wiIGRhdGEtY291bnQ9XCInK2NvdW50KydcIj4nK3Jldmlld0xpbmsrJyAnK2l0ZW0uaGVhZGVyKyc8L2E+IFxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0ICAgPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHQ8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHQ8L2Rpdj4gXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHQ8ZGl2IGNsYXNzPVwicHJvamVjdC1yZXZpZXdcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHQ8ZGl2IGNsYXNzPVwicmV2aWV3LWNsb3NlXCI+PC9kaXY+IFxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdDxkaXYgY2xhc3M9XCJyZXZpZXdcIiBpZD1cIicraWRlbnRpZmllcisnXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHQ8ZGl2IGNsYXNzPVwicmV2aWV3LWF1dGhvclwiPicrYXV0aG9yKyc8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdDxkaXYgY2xhc3M9XCJyZXZpZXctZGF0ZVwiPicrcmV2aWV3RGF0ZSsnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXZpZXctc3RhcnNcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJpY29uLXN0YXItZnVsbFwiPjwvaT5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgIDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0PGRpdiBjbGFzcz1cInJldmlldy10ZXh0XCI+JytkZXNjKyc8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHQ8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJDb3VudCA+IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3Byb2plY3QnK2NvdW50KS5maW5kKCcucmV2aWV3LXN0YXJzID4gc3BhbicpLmFwcGVuZCgnPGkgY2xhc3M9XCJpY29uLXN0YXItZnVsbFwiPjwvaT4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXZpZXcgPT09IHVuZGVmaW5lZCB8fCBkZXNjID09PSAnJyB8fCBkZXNjID09PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcHJvamVjdCcrY291bnQpLmZpbmQoJy5yZWFkLXJldmlldycpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5wcm9qZWN0LWltYWdlcycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCEkKCdib2R5JykuaGFzQ2xhc3MoJ29wZW4nKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoJy5wcm9qZWN0JykuYWRkQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRJRCA9ICQodGhpcykucGFyZW50KCkucGFyZW50KCcucHJvamVjdCcpLmF0dHIoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gXCIjXCIgKyBwYXJlbnRJRDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVySW5pdChwYXJlbnRJRCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlPUyA9ICEhbmF2aWdhdG9yLnBsYXRmb3JtICYmIC9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpT1Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sMjAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnByb2plY3QtdGl0bGUnKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZighJCgnYm9keScpLmhhc0NsYXNzKCdvcGVuJykpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudEVsZW0gPSAkKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbS5hZGRDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudElEID0gcGFyZW50RWxlbS5hdHRyKCdpZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZj1cIiNcIitwYXJlbnRJRDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVySW5pdChwYXJlbnRJRCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlPUyA9ICEhbmF2aWdhdG9yLnBsYXRmb3JtICYmIC9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpT1Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sMjAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcucHJvamVjdC1jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoJy5wcm9qZWN0JykucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudElEID0gJCh0aGlzKS5wYXJlbnQoJy5wcm9qZWN0JykuYXR0cignaWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnIycrcGFyZW50SUQrJyAuc2xpZGVyJykuc2xpY2soXCJ1bnNsaWNrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaD1cIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJlbnRJRCkuc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5yZWFkLXJldmlldycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb3VudCA9ICQodGhpcykuYXR0cignZGF0YS1jb3VudCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3Byb2plY3RcIitjb3VudCkuYWRkQ2xhc3MoJ3Nob3ctcmV2aWV3JykuZmluZCgnLnByb2plY3QtcmV2aWV3JykuYWRkQ2xhc3MoJ3Nob3cnKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnJldmlldy1jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ3Nob3cnKS5wYXJlbnQoJy5wcm9qZWN0JykucmVtb3ZlQ2xhc3MoJ3Nob3ctcmV2aWV3Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGhhc2ggJiYgaGFzaCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByb2plY3RJRCA9IFwicHJvamVjdFwiK2NvdW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvamVjdElEID09PSBoYXNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjJytoYXNoKS5hZGRDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdvcGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXJJbml0KHByb2plY3RJRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIGNob29zZUNvb2tpZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbmZ1bmN0aW9uIHNsaWRlckluaXQocHJvamVjdEVsZW0pe1xyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgIGlmKHR5cGVvZiBwcm9qZWN0RWxlbSA9PT0gJ3N0cmluZycpe1xyXG4gICAgICAgICAgICAkKCcjJytwcm9qZWN0RWxlbSsnIC5zbGlkZXInKS5zbGljayh7XHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXlTcGVlZDogMzAwMCxcclxuICAgICAgICAgICAgICAgIGFycm93czogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGxhenlMb2FkOiAnb25EZW1hbmQnLFxyXG4gICAgICAgICAgICAgICAgc3dpcDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9LDEwMCk7XHJcblxyXG59XHJcblxyXG4iLCIkKGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgdXJsID0gJy4vYXNzZXRzL2pzb24vY29udGVudC5iaW4nO1xyXG4gICAgdmFyICRib2R5ID0gJChcImJvZHlcIik7XHJcblxyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICBzY3JpcHRDaGFyc2V0OiBcInV0Zi04XCIsXHJcbiAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICB2YXIgYWN0dWFsID0gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHdpbmRvdy5hdG9iKGRhdGEpKSkpO1xyXG4gICAgICAgICAgICB2YXIgbG9jID0gZ2V0Q29va2llKCdsYW5nJyk7XHJcbiAgICAgICAgICAgIHZhciBsb2NEYXRhID0gYWN0dWFsW2xvY107XHJcbiAgICAgICAgICAgIHZhciBuYXYgPSBsb2NEYXRhLm5hdi5sYWJlbHM7XHJcbiAgICAgICAgICAgIHZhciBob21lcGFnZSA9IGxvY0RhdGEucGFnZXMuaG9tZXBhZ2U7XHJcbiAgICAgICAgICAgIHZhciBoZWFkZXIgPSBob21lcGFnZS5oZWFkZXIuY29udGVudDtcclxuICAgICAgICAgICAgdmFyIGludHJvID0gaG9tZXBhZ2UuY29udGVudC5pbnRybztcclxuICAgICAgICAgICAgdmFyIGJyYW5kcyA9IGludHJvLmltYWdlcztcclxuICAgICAgICAgICAgdmFyIGFib3V0ID0gaG9tZXBhZ2UuY29udGVudC5hYm91dDtcclxuICAgICAgICAgICAgdmFyIGFib3V0VXMgPSBob21lcGFnZS5jb250ZW50LmFib3V0VXM7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZXMgPSBob21lcGFnZS5jb250ZW50LnZhbHVlcztcclxuICAgICAgICAgICAgdmFyIGNvbXBhcmlzb24gPSBob21lcGFnZS5jb250ZW50LmNvbXBhcmlzb247XHJcbiAgICAgICAgICAgIHZhciBtZXRob2QgPSBob21lcGFnZS5jb250ZW50Lm1ldGhvZDtcclxuICAgICAgICAgICAgdmFyIG1vZGVsID0gaG9tZXBhZ2UuY29udGVudC5tb2RlbDtcclxuICAgICAgICAgICAgdmFyIHByb2plY3RzID0gaG9tZXBhZ2UuY29udGVudC5wcm9qZWN0cztcclxuICAgICAgICAgICAgdmFyIGZvb3RlciA9IGhvbWVwYWdlLmZvb3RlcjtcclxuXHJcbiAgICAgICAgICAgIGlmIChsb2NEYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5yZW1vdmVDbGFzcygnbG9hZGluZycpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAobG9jID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGNob29zZUNvb2tpZSgpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZihuYXYpIHtcclxuICAgICAgICAgICAgICAgIHZhciBuYXZJdGVtID0gJCgnI25hdiA+IHVsID4gbGkgJyk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cIiNwcmVhYm91dFwiXScpLmh0bWwobmF2LmFib3V0KTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiaW5kZXguaHRtbCNwcmVhYm91dFwiXScpLmh0bWwobmF2LmFib3V0KTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI21ldGhvZFwiXScpLmh0bWwobmF2Lm1ldGhvZCk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cImluZGV4Lmh0bWwjbWV0aG9kXCJdJykuaHRtbChuYXYubWV0aG9kKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI3ZhbHVlc1wiXScpLmh0bWwobmF2LnZhbHVlcyk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cImluZGV4Lmh0bWwjdmFsdWVzXCJdJykuaHRtbChuYXYudmFsdWVzKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI2Fib3V0VXNcIl0nKS5odG1sKG5hdi5hYm91dFVzKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiaW5kZXguaHRtbCNhYm91dFVzXCJdJykuaHRtbChuYXYuYWJvdXRVcyk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cInByb2plY3RzLmh0bWxcIl0nKS5odG1sKG5hdi5wcm9qZWN0cyk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cIiNmb290ZXJcIl0nKS5odG1sKG5hdi5jb250YWN0KTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI2Zvb3RlclwiXScpLmh0bWwobmF2LmNvbnRhY3QpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjbWlzc2lvblwiXScpLmh0bWwobmF2Lm1pc3Npb24pO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI21pc3Npb25cIl0nKS5odG1sKG5hdi5taXNzaW9uKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI21vZGVsXCJdJykuaHRtbChuYXYubW9kZWwpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI21vZGVsXCJdJykuaHRtbChuYXYubW9kZWwpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjZm91bmRhdGlvblwiXScpLmh0bWwobmF2LmZvdW5kYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI2ZvdW5kYXRpb25cIl0nKS5odG1sKG5hdi5mb3VuZGF0aW9uKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI2NvbXBhcmlzb25cIl0nKS5odG1sKG5hdi5jb21wYXJpc29uKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiaW5kZXguaHRtbCNjb21wYXJpc29uXCJdJykuaHRtbChuYXYuY29tcGFyaXNvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChoZWFkZXIpIHtcclxuICAgICAgICAgICAgICAgICQoJy5iYWNrZ3JvdW5kLXZpZGVvJykuY3NzKHsnYmFja2dyb3VuZEltYWdlJzogaGVhZGVyLmJhY2tncm91bmRJbWFnZVNyY30pO1xyXG4gICAgICAgICAgICAgICAgJCgnLnlvdXR1YmUtdmlkZW8tZW1iZWQgaWZyYW1lJykuYXR0cignaWQnLCBoZWFkZXIueW91dHViZVVSTCkuYXR0cignc3JjJywgJ2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycgKyBoZWFkZXIueW91dHViZVVSTCArICc/YXV0b3BsYXk9MCZyZWw9MCZmcz0xJmVuYWJsZWpzYXBpPTEnKVxyXG4gICAgICAgICAgICAgICAgJCgndmlkZW8gc291cmNlI21wNCcpLmF0dHIoJ3NyYycsIGhlYWRlci5iYWNrZ3JvdW5kVmlkZW9NcDRTcmMpO1xyXG4gICAgICAgICAgICAgICAgJCgndmlkZW8gc291cmNlI3dlYm0nKS5hdHRyKCdzcmMnLCBoZWFkZXIuYmFja2dyb3VuZFZpZGVvV2ViTVNyYyk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0naGVhZGVyLWNvbnRlbnQtdGl0bGUnXVwiKS5odG1sKGhlYWRlci5oZWFkZXIpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoaW50cm8pIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWludHJvLXRpdGxlJ11cIikuaHRtbChpbnRyby5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtaW50cm8tZGVzYyddXCIpLmh0bWwoaW50cm8uZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmKCQoJy5icmFuZGxpc3QnKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goYnJhbmRzLCBmdW5jdGlvbiAoaW5kZXgsIGJyYW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGJyYW5kLnNyYyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYm9keS5maW5kKCcuYnJhbmRsaXN0JykuYXBwZW5kKCc8bGk+PGltZyBzcmM9XCInK2JyYW5kLnNyYysnXCIgYWx0PVwiJyticmFuZC5hbHQrJ1wiIC8+PC9saT4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoYWJvdXQpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0LXJvdzEtdGl0bGUnXVwiKS5odG1sKGFib3V0LnJvdzEuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0LXJvdzEtaW1hZ2UnXVwiKS5jc3MoeydiYWNrZ3JvdW5kSW1hZ2UnOiBhYm91dC5yb3cxLmltYWdlLnNyY30pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtYWJvdXQtcm93MS1kZXNjJ11cIikuaHRtbChhYm91dC5yb3cxLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1hYm91dC1yb3cyLXRpdGxlJ11cIikuaHRtbChhYm91dC5yb3cyLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1hYm91dC1yb3cyLWltYWdlJ11cIikuY3NzKHsnYmFja2dyb3VuZEltYWdlJzogYWJvdXQucm93Mi5pbWFnZS5zcmN9KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0LXJvdzItZGVzYyddXCIpLmh0bWwoYWJvdXQucm93Mi5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChhYm91dFVzKSB7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1hYm91dFVzLXRpdGxlJ11cIikuaHRtbChhYm91dFVzLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1hYm91dFVzLWRlc2NyaXB0aW9uJ11cIikuaHRtbChhYm91dFVzLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1lbXBsb3llZS1uaWVrLWltYWdlJ11cIikuYXR0cignc3JjJywgYWJvdXRVcy5lbXBsb3llZXMubmllay5pbWFnZS5zcmMpLmF0dHIoJ2FsdCcsIGFib3V0VXMuZW1wbG95ZWVzLm5pZWsuaW1hZ2UuYWx0KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWVtcGxveWVlLW5pZWstdGl0bGUnXVwiKS5odG1sKGFib3V0VXMuZW1wbG95ZWVzLm5pZWsuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWVtcGxveWVlLW5pZWstZGVzYyddXCIpLmh0bWwoYWJvdXRVcy5lbXBsb3llZXMubmllay5kZXNjcmlwdGlvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtZW1wbG95ZWUtamFuLWltYWdlJ11cIikuYXR0cignc3JjJywgYWJvdXRVcy5lbXBsb3llZXMuamFuLmltYWdlLnNyYykuYXR0cignYWx0JywgYWJvdXRVcy5lbXBsb3llZXMuamFuLmltYWdlLmFsdCk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1lbXBsb3llZS1qYW4tdGl0bGUnXVwiKS5odG1sKGFib3V0VXMuZW1wbG95ZWVzLmphbi5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtZW1wbG95ZWUtamFuLWRlc2MnXVwiKS5odG1sKGFib3V0VXMuZW1wbG95ZWVzLmphbi5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh2YWx1ZXMpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlcy1pbWFnZSddXCIpLmNzcyh7J2JhY2tncm91bmRJbWFnZSc6IHZhbHVlcy5pbWFnZS5zcmN9KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlcy10aXRsZSddXCIpLmh0bWwodmFsdWVzLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC12YWx1ZXMtZGVzYyddXCIpLmh0bWwodmFsdWVzLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC12YWx1ZTEnXVwiKS5odG1sKHZhbHVlcy52YWx1ZXMudmFsdWUxKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlMiddXCIpLmh0bWwodmFsdWVzLnZhbHVlcy52YWx1ZTIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWUzJ11cIikuaHRtbCh2YWx1ZXMudmFsdWVzLnZhbHVlMyk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC12YWx1ZTQnXVwiKS5odG1sKHZhbHVlcy52YWx1ZXMudmFsdWU0KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlNSddXCIpLmh0bWwodmFsdWVzLnZhbHVlcy52YWx1ZTUpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWU2J11cIikuaHRtbCh2YWx1ZXMudmFsdWVzLnZhbHVlNik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChtZXRob2QpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC10aXRsZSddXCIpLmh0bWwobWV0aG9kLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtZGVzYyddXCIpLmh0bWwobWV0aG9kLmRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1ob3ZlckxhYmVsJ11cIikuaHRtbChtZXRob2QuaG92ZXJMYWJlbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWludHJvLXRpdGxlJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5pbnRyby5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWludHJvLWRlc2MnXVwiKS5odG1sKG1ldGhvZC5tZXRob2RzLmludHJvLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtZGVzaWduLXRpdGxlJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5kZXNpZ24uaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1kZXNpZ24tZGVzYyddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMuZGVzaWduLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtdHVuaW5nLXRpdGxlJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy50dW5pbmcuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC10dW5pbmctZGVzYyddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMudHVuaW5nLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtY29uc3RydWN0aW9uLXRpdGxlJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5jb25zdHJ1Y3Rpb24uaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1jb25zdHJ1Y3Rpb24tZGVzYyddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMuY29uc3RydWN0aW9uLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtZXZhbC10aXRsZSddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMuZXZhbC5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWV2YWwtZGVzYyddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMuZXZhbC5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChtb2RlbCkge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbW9kZWwtdGl0bGUnXVwiKS5odG1sKG1vZGVsLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tb2RlbC1pbWFnZSddXCIpLmNzcyh7J2JhY2tncm91bmRJbWFnZSc6IG1vZGVsLmltYWdlLnNyY30pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbW9kZWwtZGVzYyddXCIpLmh0bWwobW9kZWwuZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAocHJvamVjdHMpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3RzLXRpdGxlJ11cIikuaHRtbChwcm9qZWN0cy5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdHMtZGVzYyddXCIpLmh0bWwocHJvamVjdHMuZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdHMtYnV0dG9uJ11cIikuaHRtbChwcm9qZWN0cy5idXR0b24ubGFiZWwpO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3QxLWltYWdlJ11cIikuYXR0cignc3JjJywgcHJvamVjdHMucHJvamVjdDEuaW1hZ2Uuc3JjKS5hdHRyKCdhbHQnLCBwcm9qZWN0cy5wcm9qZWN0MS5pbWFnZS5hbHQpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdDEtdGl0bGUnXVwiKS5odG1sKHByb2plY3RzLnByb2plY3QxLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0MS1idG4nXVwiKS5odG1sKHByb2plY3RzLnByb2plY3QxLmJ1dHRvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdDItaW1hZ2UnXVwiKS5hdHRyKCdzcmMnLCBwcm9qZWN0cy5wcm9qZWN0Mi5pbWFnZS5zcmMpLmF0dHIoJ2FsdCcsIHByb2plY3RzLnByb2plY3QyLmltYWdlLmFsdCk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0Mi10aXRsZSddXCIpLmh0bWwocHJvamVjdHMucHJvamVjdDIuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3QyLWJ0biddXCIpLmh0bWwocHJvamVjdHMucHJvamVjdDIuYnV0dG9uKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYoY29tcGFyaXNvbil7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0cy1jb21wYXJpc29uLXRpdGxlJ11cIikuaHRtbChjb21wYXJpc29uLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0cy1jb21wYXJpc29uLWRlc2MnXVwiKS5odG1sKGNvbXBhcmlzb24uZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoZm9vdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLXRlc3RpbW9uaWFscy10aXRsZSddXCIpLmh0bWwoZm9vdGVyLnRlc3RpbW9uaWFscy5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1oZWFkZXInXVwiKS5odG1sKGZvb3Rlci5jb250YWN0cy5oZWFkZXIpO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtamFuLXRpdGxlJ11cIikuaHRtbChmb290ZXIuY29udGFjdHMuamFuLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWphbi1lbWFpbCddXCIpLmF0dHIoJ2hyZWYnLCBmb290ZXIuY29udGFjdHMuamFuLmxpbmtzLmVtYWlsLnNyYykuaHRtbChmb290ZXIuY29udGFjdHMuamFuLmxpbmtzLmVtYWlsLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWxpbmtlZGluLWphbiddXCIpLmF0dHIoJ2hyZWYnLCBmb290ZXIuY29udGFjdHMuamFuLmxpbmtzLmxpbmtlZGluLnNyYyk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWxpbmtlZGluLWphbi10aXRsZSddXCIpLmh0bWwoIGZvb3Rlci5jb250YWN0cy5qYW4ubGlua3MubGlua2VkaW4uaGVhZGVyKycgJyk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWNhbGwtamFuLXBob25lJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5qYW4ucGhvbmUpO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtbmllay10aXRsZSddXCIpLmh0bWwoZm9vdGVyLmNvbnRhY3RzLm5pZWsuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtbmllay1lbWFpbCddXCIpLmF0dHIoJ2hyZWYnLCBmb290ZXIuY29udGFjdHMubmllay5saW5rcy5lbWFpbC5zcmMpLmh0bWwoZm9vdGVyLmNvbnRhY3RzLm5pZWsubGlua3MuZW1haWwuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtbGlua2VkaW4tbmllayddXCIpLmF0dHIoJ2hyZWYnLCBmb290ZXIuY29udGFjdHMubmllay5saW5rcy5saW5rZWRpbi5zcmMpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1saW5rZWRpbi1uaWVrLXRpdGxlJ11cIikuaHRtbChmb290ZXIuY29udGFjdHMubmllay5saW5rcy5saW5rZWRpbi5oZWFkZXIrJyAnKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtY2FsbC1uaWVrLXBob25lJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5uaWVrLnBob25lKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLXBob25lLWhlYWRlciddXCIpLmh0bWwoZm9vdGVyLnBob25lLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLXZpc2l0LWhlYWRlciddXCIpLmh0bWwoZm9vdGVyLnZpc2l0LmhlYWRlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy12aXNpdC1kZXNjJ11cIikuaHRtbChmb290ZXIudmlzaXQuZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb3B5cmlnaHQtZGVzYyddXCIpLmh0bWwoZm9vdGVyLmNvcHlyaWdodC5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7XHJcbiIsIlxyXG52YXIgdGVzdGltb25pYWwgPSAkKCcjZ29vZ2xlLXJldmlld3MnKTtcclxuXHJcbiQoZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgdXJsID0gJy4vYXNzZXRzL2pzb24vY29udGVudC5iaW4nO1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICBzY3JpcHRDaGFyc2V0OiBcInV0Zi04XCIsXHJcbiAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICB2YXIgYWN0dWFsID0gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHdpbmRvdy5hdG9iKGRhdGEpKSkpO1xyXG4gICAgICAgICAgICB2YXIgbG9jID0gZ2V0Q29va2llKCdsYW5nJyk7XHJcbiAgICAgICAgICAgIHZhciBwcm9qZWN0RGV0YWlsID0gYWN0dWFsW2xvY10ucGFnZXMucHJvamVjdHM7XHJcblxyXG4gICAgICAgICAgICAkLmVhY2gocHJvamVjdERldGFpbCwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmV2aWV3ID0gaXRlbS5yZXZpZXdcclxuICAgICAgICAgICAgICAgICAgICAsIGF1dGhvciA9IHJldmlldy5hdXRob3IgfHwgJydcclxuICAgICAgICAgICAgICAgICAgICAsIGRlc2MgPSByZXZpZXcuZGVzY3JpcHRpb24gfHwgJydcclxuICAgICAgICAgICAgICAgICAgICAsIHJldmlld0RhdGUgPSByZXZpZXcuZGF0ZSB8fCAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICwgaWRlbnRpZmllciA9IGF1dGhvci5yZXBsYWNlKC9bXkEtWjAtOV0rL2lnLCBcIi1cIikudG9Mb3dlckNhc2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICwgc3RhckNvdW50ID0gcmV2aWV3LnN0YXJzIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgLCBjb3VudCA9IHBhcnNlSW50KGluZGV4KSArIDE7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHJldmlldyAmJiByZXZpZXcgIT09IHVuZGVmaW5lZCAmJiBkZXNjICE9PSAnJyAmJiBkZXNjICE9PSB1bmRlZmluZWQgfHwgc3RhckNvdW50ICE9PSAnJyAmJiBzdGFyQ291bnQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRlc3RpbW9uaWFsLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGVzdGltb25pYWwubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0aW1vbmlhbC5hcHBlbmQoJzxkaXYgY2xhc3M9XCJyZXZpZXdcIiBpZD1cIicgKyBpZGVudGlmaWVyICsgY291bnQgKyAnXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJldmlldy1hdXRob3JcIj4nICsgYXV0aG9yICsgJzwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXZpZXctZGF0ZVwiPicgKyByZXZpZXdEYXRlICsgJzwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXZpZXctc3RhcnNcIj5cXG4nK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJldmlldy10ZXh0XCI+JyArIHJldmlldy5kZXNjcmlwdGlvbiArICc8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICA8L2Rpdj4nKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFyQ291bnQgPiA0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcucmV2aWV3IycraWRlbnRpZmllciArIGNvdW50KS5maW5kKCcucmV2aWV3LXN0YXJzID4gc3BhbicpLmFwcGVuZCgnPGkgY2xhc3M9XCJpY29uLXN0YXItZnVsbFwiPjwvaT4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldmlld1NsaWRlcigpO1xyXG4gICAgICAgICAgICB9LCAxMDAwKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5cclxuZnVuY3Rpb24gcmV2aWV3U2xpZGVyKCl7XHJcbiAgICB0ZXN0aW1vbmlhbC5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICB0ZXN0aW1vbmlhbC5ub3QoJy5zbGljay1pbml0aWFsaXplZCcpLnNsaWNrKHtcclxuICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgZmFkZTogdHJ1ZSxcclxuICAgICAgICBpbmZpbml0ZTogdHJ1ZSxcclxuICAgICAgICBhdXRvcGxheVNwZWVkOiA4MDAwLFxyXG4gICAgICAgIGFycm93czogdHJ1ZSxcclxuICAgICAgICByZXNwb25zaXZlOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGJyZWFrcG9pbnQ6IDEwMjUsXHJcbiAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9KTtcclxufVxyXG4iXX0=
