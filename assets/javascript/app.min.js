var isHomePage=$("body.homepage");isHomePage&&($.fn.isInViewport=function(){var t=$(this);if("undefined"!==t&&t.length){var e=$(this).offset().top,a=e+$(this).outerHeight(),o=$(window).scrollTop(),n=o+$(window).height();return o<a&&e<n}});var map,aboutAnimationHasRan=!1,aboutUsAnimationHasRan=!1,valuesAnimationHasRan=!1,headerAnimationHasRan=!1,brandsAnimationHasRan=!1,headerElem=$("#header"),aboutElem=$("#about"),brandsElem=$(".brandlist"),aboutUsElem=$("#aboutUs"),valuesElem=$("#values");function fireAnimations(){if(isHomePage&&0<headerElem.length&&headerElem.isInViewport()){var t=$("#header .logo"),e=$("#header h1"),a=$("#header .icon-play");headerAnimationHasRan||(TweenMax.fromTo(t,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"}}),TweenMax.fromTo(e,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"},delay:.3}),TweenMax.fromTo(a,.5,{opacity:0,scale:1.5,ease:Bounce.ease},{opacity:1,scale:1}),headerAnimationHasRan=!0)}if(isHomePage&&0<headerElem.length&&aboutElem.isInViewport()){var o=$("#about > .left-container"),n=$("#about > .right-container");aboutAnimationHasRan||(TweenMax.fromTo(o,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),TweenMax.fromTo(n,1,{css:{x:"100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),aboutAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var i=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(i,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}if(isHomePage&&0<brandsElem.length&&brandsElem.isInViewport()){var s=brandsElem.find("li");5<$(".brandlist li").length?$(".brandlist").slick({slidesToShow:5,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!1,swip:!0,responsive:[{breakpoint:600,settings:{slidesToShow:3,slidesToScroll:1}}]}):brandsAnimationHasRan||(TweenMax.staggerFromTo(s,.5,{css:{x:"-40",opacity:0}},{css:{x:"0",opacity:"1"},delay:.2},.2),brandsAnimationHasRan=!0)}if(isHomePage&&0<valuesElem.length&&valuesElem.isInViewport()){var d=$(".valueItem");valuesAnimationHasRan||($.each(d,function(){var t=$(this).find("strong"),e=(-1*Math.random()+1.5).toFixed(2);TweenMax.fromTo(t,1,{css:{x:"-10",opacity:0}},{css:{x:"0",opacity:"1"},delay:e})}),valuesAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var c=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(c,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}}function getDirection(t,e,a){Math.abs(e-t)<=5||a(e<t?"down":"up",t)}function handleMethodScroll(t){var e="method",a=".fadeIn",o=".method-item",n=".intro",i=".design",s=".tuning",d=".construction";$(a).removeClass(e),$(o).removeClass(e),1===t?($(a+n).addClass(e),$(o+n).addClass(e)):2===t?($(o+n).addClass(e),$(a+i).addClass(e),$(o+i).addClass(e)):3===t?($(o+n).addClass(e),$(o+i).addClass(e),$(a+s).addClass(e),$(o+s).addClass(e)):4===t?($(o+n).addClass(e),$(o+i).addClass(e),$(o+s).addClass(e),$(a+d).addClass(e),$(o+d).addClass(e)):5===t&&($(o+n).addClass(e),$(o+i).addClass(e),$(o+s).addClass(e),$(o+d).addClass(e),$(a+".eval").addClass(e),$(o+".eval").addClass(e))}function setCookie(t,e,a){var o="";if(a){var n=new Date;n.setTime(n.getTime()+24*a*60*60*1e3),o="; expires="+n.toUTCString()}document.cookie=t+"="+(e||"")+o+"; path=/"}function getCookie(t){for(var e=t+"=",a=document.cookie.split(";"),o=0;o<a.length;o++){for(var n=a[o];" "==n.charAt(0);)n=n.substring(1,n.length);if(0==n.indexOf(e))return n.substring(e.length,n.length)}return null}function eraseCookie(t){document.cookie=t+"=; Max-Age=-99999999;"}function chooseCookie(){var t=navigator.language||navigator.userLanguage,e=getCookie("lang"),a=getParameterByName("lang");null==e||""===e?(t.match(/de/g)?setCookie("lang","de",7):t.match(/en/g)?setCookie("lang","en",7):(t.match(/nl/g),setCookie("lang","nl",7)),setTimeout(function(){window.location.reload()},20)):$("body").addClass(e),void 0!==a&&"de"===a?setCookie("lang","de",7):void 0!==a&&"en"===a?setCookie("lang","en",7):void 0!==a&&"nl"===a&&setCookie("lang","nl",7),setTimeout(function(){$("#nav .active-loc").html(getCookie("lang"))},200)}function getParameterByName(t,e){e||(e=window.location.href),t=t.replace(/[\[\]]/g,"\\$&");var a=new RegExp("[?&]"+t+"(=([^&#]*)|&|#|$)").exec(e);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null}function fixNav(t){var e=$("#nav");500<=t?e.addClass("fixed"):e.removeClass("fixed")}function trackLocation(t){var e=$(".slick-active .after"),a=$(".slick-active .before"),o=a[0].getBoundingClientRect(),n=a.outerWidth(),i=(t.pageX-o.left)/n*100;i<=100&&e.css("width",i+"%")}function googleMapsInit(){var t=new google.maps.LatLng(51.372027,6.160478),e={zoom:15,center:t,scrollwheel:!1,navigationControl:!1,mapTypeControl:!1,scaleControl:!1,disableDefaultUI:!0,styles:[{featureType:"landscape",stylers:[{visibility:"simplified"},{color:"#2b3f57"},{weight:.1}]},{featureType:"administrative",stylers:[{visibility:"on"},{hue:"#ff0000"},{weight:.4},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{weight:1.3},{color:"#FFFFFF"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:3}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:1.1}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:.4}]},{},{featureType:"road.highway",elementType:"labels",stylers:[{weight:.8},{color:"#ffffff"},{visibility:"on"}]},{featureType:"road.local",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"labels",stylers:[{color:"#ffffff"},{weight:.7}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{color:"#6c5b7b"}]},{featureType:"water",stylers:[{color:"#f3b191"}]},{featureType:"transit.line",stylers:[{visibility:"on"}]}]};map=new google.maps.Map(document.getElementById("map-canvas"),e);var a=new google.maps.Marker({position:t,icon:"//expo-mate.github.io/assets/images/marker.png",map:map}),o=new google.maps.InfoWindow({content:$(".contact-details-map").html()});450<$(window).width()&&map.panBy(200,-150),google.maps.event.addListener(a,"click",function(){o.open(map,a)})}function sliderInit(t){setTimeout(function(){"string"==typeof t&&$("#"+t+" .slider").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!0,lazyLoad:"onDemand",swip:!0})},100)}$(function(){isHomePage&&(fireAnimations(),$(window).on("resize scroll",function(){fireAnimations()}))}),$(function(){var a=0,o=!1,t=$("#header"),e=$("body.homepage"),n=$(window).height(),i=$(window).width(),s=950,d=0,c=$(".method-item"),l=$(".fadeIn"),r=-1<window.orientation&&screen.width<=640,m=null!=navigator.userAgent.match(/iPad/i),h=$("body").find("[data-content='content-method-hoverLabel']");if($(window).on("mousewheel DOMMouseScroll touchmove",function(){o=!0}),$(window).on("resize",function(){n=$(this).height(),i=$(this).width(),s=$(window).height()/100*20}),void 0!==e&&0<e.length){var f=$("#method"),p=$(".method-scroll-wrapper"),u=f.height(),v=f.offset().top,g=$("#case-studies"),w=~~g.offset().top,y=$("#about"),b=$("#preabout").offset().top,C="active",k="show";(r||m)&&(g.addClass(k),l.addClass(k),y.addClass(k)),$(c).on("mouseenter",function(){var t=$(this).attr("data-item");$(this).addClass("active"),$(".diagram-logo").addClass("hidden"),0<h.length&&h.addClass("hidden"),$(".method-desc."+t).addClass("active"),$("#diagram").addClass(t)}).on("mouseleave",function(){var t=$(this).attr("data-item");$(this).removeClass("active"),$(".diagram-logo").removeClass("hidden"),0<h.length&&h.removeClass("hidden"),$(".method-desc."+t).removeClass("active"),$("#diagram").removeClass(t)}),$(".close-btn").on("click",function(){$("body").toggleClass("isPlaying"),t.removeClass("play"),t.find(".video-container").removeClass("play"),$(".youtube-video-embed iframe").attr("id","").attr("src","")}),$(".play-video-wrapper").on("click",function(){$("body").toggleClass("isPlaying"),t.addClass("play"),t.find(".video-container").addClass("play");$.getJSON("./assets/json/content.json",function(t){var e=t[getCookie("lang")].pages.homepage.header.content;$(".youtube-video-embed iframe").attr("id",e.youtubeURL).attr("src","https://www.youtube.com/embed/"+e.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1")})}),$(window).on("scroll",function(){d=~~$(this).scrollTop(),n<1100&&(s=1050),c.removeClass(C),getDirection(d,a,function(t,e){(a=e)&&o&&!r&&1200<i&&!m&&("down"===t?(v<=e&&(l.removeClass(k),p.addClass(k),handleMethodScroll(5)),v+u<=e&&(g.addClass(k),l.removeClass(k),p.removeClass(k)),b<=e&&y.addClass(k)):(g.addClass(k),l.addClass(k),y.addClass(k)),"up"===t&&(e<w-s&&(p.addClass(k),handleMethodScroll(5)),e<=v-100&&l.removeClass(C)))})})}}),chooseCookie(),$(function(){var o=!1,n=$("#nav ul"),i=$(".hamburger"),t=$(window).scrollTop();$("#nav li a").on("click",function(t){t.preventDefault();var e=$(this).attr("href");if(-1!==e.indexOf("."))window.location.href=e;else if($(this).hasClass("loc"))eraseCookie("lang"),setCookie("lang",e,7),setTimeout(function(){window.location.reload()},20);else if(-1!==e.indexOf("#")){var a=$(e).offset().top;"#footer"===e?a=$("#contact-info").offset().top:"#comparison"===e&&(a=$("#comparison-wrapper").offset().top),$("html, body").animate({scrollTop:a})}o&&(i.removeClass("is-active"),n.removeClass("open"),o=!1)}),i.click(function(){$(this).toggleClass("is-active"),n.toggleClass("open"),o=!0}),$(window).on("scroll",function(){fixNav(~~$(this).scrollTop())}),$(".contact-btn").on("click",function(){var t=$("footer").offset().top;$("html, body").animate({scrollTop:t})}),fixNav(t)}),$(function(){if($("body").hasClass("homepage")){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(t){var e=JSON.parse(decodeURIComponent(escape(window.atob(t))))[getCookie("lang")].pages.homepage.content.comparison,i=$("#comparison"),a=e.comparisons||"";$.each(a,function(t,e){i.append('<div class="item"><img data-content="content-comparison-before" src="'+e.before+'" class="before" alt>\n<div data-content="content-comparison-after" class="after" style="background-image: url('+e.after+')"></div></div>')}),setTimeout(function(){i.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,nextArrow:".icon-arrow-right",prevArrow:".icon-arrow-left",swipeToSlide:!1}),i.on("setPosition",function(t,e,a,o){var n=i.find(".slick-active");n&&(n.on("mousemove",trackLocation),n.on("touchstart",trackLocation),n.on("touchmove",trackLocation))})},200)}})}}),$(function(){var w=$("body");$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(t){var e=JSON.parse(decodeURIComponent(escape(window.atob(t)))),a=getCookie("lang"),o=e[a],n=o.nav.labels,i=o.pages.homepage,s=i.header.content,d=i.content.intro,c=d.images,l=i.content.about,r=i.content.aboutUs,m=i.content.values,h=i.content.comparison,f=i.content.method,p=i.content.model,u=i.content.projects,v=i.footer;if(o&&w.removeClass("loading"),void 0===a&&chooseCookie(),n){var g=$("#nav > ul > li ");g.find('a[href="#preabout"]').html(n.about),g.find('a[href="index.html#preabout"]').html(n.about),g.find('a[href="#method"]').html(n.method),g.find('a[href="index.html#method"]').html(n.method),g.find('a[href="#values"]').html(n.values),g.find('a[href="index.html#values"]').html(n.values),g.find('a[href="#aboutUs"]').html(n.aboutUs),g.find('a[href="index.html#aboutUs"]').html(n.aboutUs),g.find('a[href="projects.html"]').html(n.projects),g.find('a[href="#footer"]').html(n.contact),g.find('a[href="#footer"]').html(n.contact),g.find('a[href="#mission"]').html(n.mission),g.find('a[href="index.html#mission"]').html(n.mission),g.find('a[href="#model"]').html(n.model),g.find('a[href="index.html#model"]').html(n.model),g.find('a[href="#foundation"]').html(n.foundation),g.find('a[href="index.html#foundation"]').html(n.foundation),g.find('a[href="#comparison"]').html(n.comparison),g.find('a[href="index.html#comparison"]').html(n.comparison)}s&&($(".background-video").css({backgroundImage:s.backgroundImageSrc}),$(".youtube-video-embed iframe").attr("id",s.youtubeURL).attr("src","https://www.youtube.com/embed/"+s.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1"),$("video source#mp4").attr("src",s.backgroundVideoMp4Src),$("video source#webm").attr("src",s.backgroundVideoWebMSrc),w.find("[data-content='header-content-title']").html(s.header)),d&&(w.find("[data-content='content-intro-title']").html(d.header),w.find("[data-content='content-intro-desc']").html(d.description),0<$(".brandlist").length&&$.each(c,function(t,e){e.src&&w.find(".brandlist").append('<li><img src="'+e.src+'" alt="'+e.alt+'" /></li>')})),l&&(w.find("[data-content='content-about-row1-title']").html(l.row1.header),w.find("[data-content='content-about-row1-image']").css({backgroundImage:l.row1.image.src}),w.find("[data-content='content-about-row1-desc']").html(l.row1.description),w.find("[data-content='content-about-row2-title']").html(l.row2.header),w.find("[data-content='content-about-row2-image']").css({backgroundImage:l.row2.image.src}),w.find("[data-content='content-about-row2-desc']").html(l.row2.description)),r&&(w.find("[data-content='content-aboutUs-title']").html(r.header),w.find("[data-content='content-aboutUs-description']").html(r.description),w.find("[data-content='content-employee-niek-image']").attr("src",r.employees.niek.image.src).attr("alt",r.employees.niek.image.alt),w.find("[data-content='content-employee-niek-title']").html(r.employees.niek.header),w.find("[data-content='content-employee-niek-desc']").html(r.employees.niek.description),w.find("[data-content='content-employee-jan-image']").attr("src",r.employees.jan.image.src).attr("alt",r.employees.jan.image.alt),w.find("[data-content='content-employee-jan-title']").html(r.employees.jan.header),w.find("[data-content='content-employee-jan-desc']").html(r.employees.jan.description)),m&&(w.find("[data-content='content-values-image']").css({backgroundImage:m.image.src}),w.find("[data-content='content-values-title']").html(m.header),w.find("[data-content='content-values-desc']").html(m.description),w.find("[data-content='content-value1']").html(m.values.value1),w.find("[data-content='content-value2']").html(m.values.value2),w.find("[data-content='content-value3']").html(m.values.value3),w.find("[data-content='content-value4']").html(m.values.value4),w.find("[data-content='content-value5']").html(m.values.value5),w.find("[data-content='content-value6']").html(m.values.value6)),f&&(w.find("[data-content='content-method-title']").html(f.header),w.find("[data-content='content-method-desc']").html(f.description),w.find("[data-content='content-method-hoverLabel']").html(f.hoverLabel),w.find("[data-content='content-method-intro-title']").html(f.methods.intro.header),w.find("[data-content='content-method-intro-desc']").html(f.methods.intro.description),w.find("[data-content='content-method-design-title']").html(f.methods.design.header),w.find("[data-content='content-method-design-desc']").html(f.methods.design.description),w.find("[data-content='content-method-tuning-title']").html(f.methods.tuning.header),w.find("[data-content='content-method-tuning-desc']").html(f.methods.tuning.description),w.find("[data-content='content-method-construction-title']").html(f.methods.construction.header),w.find("[data-content='content-method-construction-desc']").html(f.methods.construction.description),w.find("[data-content='content-method-eval-title']").html(f.methods.eval.header),w.find("[data-content='content-method-eval-desc']").html(f.methods.eval.description)),p&&(w.find("[data-content='content-model-title']").html(p.header),w.find("[data-content='content-model-image']").css({backgroundImage:p.image.src}),w.find("[data-content='content-model-desc']").html(p.description)),u&&(w.find("[data-content='content-projects-title']").html(u.header),w.find("[data-content='content-projects-desc']").html(u.description),w.find("[data-content='content-projects-button']").html(u.button.label),w.find("[data-content='content-project1-image']").attr("src",u.project1.image.src).attr("alt",u.project1.image.alt),w.find("[data-content='content-project1-title']").html(u.project1.header),w.find("[data-content='content-project1-btn']").html(u.project1.button),w.find("[data-content='content-project2-image']").attr("src",u.project2.image.src).attr("alt",u.project2.image.alt),w.find("[data-content='content-project2-title']").html(u.project2.header),w.find("[data-content='content-project2-btn']").html(u.project2.button)),h&&(w.find("[data-content='content-projects-comparison-title']").html(h.header),w.find("[data-content='content-projects-comparison-desc']").html(h.description)),v&&(w.find("[data-content='footer-testimonials-title']").html(v.testimonials.header),w.find("[data-content='footer-contacts-header']").html(v.contacts.header),w.find("[data-content='footer-contacts-jan-title']").html(v.contacts.jan.header),w.find("[data-content='footer-contacts-jan-email']").attr("href",v.contacts.jan.links.email.src).html(v.contacts.jan.links.email.header),w.find("[data-content='footer-contacts-linkedin-jan']").attr("href",v.contacts.jan.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-jan-title']").html(v.contacts.jan.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-jan-phone']").attr("href",v.contacts.jan.phone),w.find("[data-content='footer-contacts-niek-title']").html(v.contacts.niek.header),w.find("[data-content='footer-contacts-niek-email']").attr("href",v.contacts.niek.links.email.src).html(v.contacts.niek.links.email.header),w.find("[data-content='footer-contacts-linkedin-niek']").attr("href",v.contacts.niek.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-niek-title']").html(v.contacts.niek.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-niek-phone']").attr("href",v.contacts.niek.phone),w.find("[data-content='footer-contacts-phone-header']").html(v.phone.header),w.find("[data-content='footer-contacts-visit-header']").html(v.visit.header),w.find("[data-content='footer-contacts-visit-desc']").html(v.visit.description),w.find("[data-content='footer-copyright-desc']").html(v.copyright.description))}})}),google.maps.event.addDomListener(window,"load",googleMapsInit),$(function(){if($("body").hasClass("projects")){var p=window.location.hash;$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(t){var e=JSON.parse(decodeURIComponent(escape(window.atob(t)))),a=getCookie("lang"),h=e[a].pages.homepage.content.projects.reviewLink||"",o=e[a].pages.projects,f=$("#projects .projects-wrapper");void 0===a&&chooseCookie(),$.each(o,function(t,e){var a=[],o=e.images,n=parseInt(t)+1,i=e.review,s=i.author||"",d=i.description||"",c=i.date||"",l=s.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),r=i.stars||"";if(o&&0<o.length&&$.each(o,function(t,e){e&&a.push('<div class="project-image" style="background-image: url('+e.src+')"></div>')}),f.append('<div class="project" id="project'+n+'">\n\t<div class="project-close"></div>\n\t<div class="project-wrapper">\n\t\t<div class="project-images">\n\t\t\t<div class="slider">'+a.join("")+'</div>\n\t\t</div>\n\t\t<div class="project-desc-wrapper">\n\t\t\t<div class="project-desc-content">\n\t\t\t\t<div class="project-header">\n\t\t\t\t\t<h2 class="project-title">'+e.header+'</h2>\n\t\t\t\t\t<div class="project-sub-title">'+e.subTitle+'</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="project-desc"> \n\t\t\t\t   <span>'+e.description+'</span> \n\t\t\t\t   <a class="read-review" data-count="'+n+'">'+h+" "+e.header+'</a> \n\t\t\t   </div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class="project-review">\n\t\t<div class="review-close"></div> \n\t\t<div class="review" id="'+l+'">\n\t\t\t<div class="review-author">'+s+'</div>\n\t\t\t<div class="review-date">'+c+'</div>\n           <div class="review-stars"><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full fifth"></i></div>\n\t\t\t<div class="review-text">'+d+"</div>\n\t\t</div>\n\t</div>\n</div>"),4===r&&$(".review-stars").find(".fifth").remove(),void 0!==i&&""!==d&&void 0!==d||$("#project"+n).find(".read-review").addClass("hidden"),$(".project-images").on("click",function(){if(!$("body").hasClass("open")){$(this).parent().parent(".project").addClass("open");var t=$(this).parent().parent(".project").attr("id");document.location.href="#"+t,$("body").addClass("open"),sliderInit(t),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-title").on("click",function(){if(!$("body").hasClass("open")){var t=$(this).parent().parent().parent().parent().parent();t.addClass("open");var e=t.attr("id");document.location.href="#"+e,$("body").addClass("open"),sliderInit(e),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-close").on("click",function(){$("body").removeClass("open"),$(this).parent(".project").removeClass("open");var t=$(this).parent(".project").attr("id");$("#"+t+" .slider").slick("unslick"),window.location.hash="",document.getElementById(t).scrollIntoView(!0)}),$(".read-review").on("click",function(t){t.preventDefault();var e=$(this).attr("data-count");$("#project"+e).addClass("show-review").find(".project-review").addClass("show")}),$(".review-close").on("click",function(){$(this).parent().removeClass("show").parent(".project").removeClass("show-review")}),p&&void 0!==p){var m="project"+n;m===(p=window.location.hash.substring(1))&&($("#"+p).addClass("open"),$("body").addClass("open"),sliderInit(m))}})},error:function(t){chooseCookie()}})}});var testimonial=$("#google-reviews");function reviewSlider(){testimonial.removeClass("hidden"),testimonial.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,fade:!0,infinite:!0,autoplaySpeed:8e3,arrows:!0,responsive:[{breakpoint:1025,settings:{adaptiveHeight:!0}}]})}$(function(){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(t){var e=JSON.parse(decodeURIComponent(escape(window.atob(t))))[getCookie("lang")].pages.projects;$.each(e,function(t,e){var a=e.review,o=a.author||"",n=a.description||"",i=a.date||"",s=o.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),d=a.stars||"";(a&&void 0!==a&&""!==n&&void 0!==n||""!==d&&void 0!==d)&&(testimonial.addClass("hidden"),0<testimonial.length&&(testimonial.append('<div class="review" id="'+s+'">\n               <div class="review-author">'+o+'</div>\n               <div class="review-date">'+i+'</div>\n               <div class="review-stars"><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full"></i><i class="icon-star-full fifth"></i></div>\n               <div class="review-text">'+a.description+"</div>\n            </div>"),4===d&&$(".review-stars").find(".fifth").remove()))}),setTimeout(function(){reviewSlider()},1e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
