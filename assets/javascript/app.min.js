var map,isHomePage=$("body.homepage"),aboutAnimationHasRan=(isHomePage&&($.fn.isInViewport=function(){var e,t,n,a=$(this);if("undefined"!==a&&a.length)return e=(a=$(this).offset().top)+$(this).outerHeight(),n=(t=$(window).scrollTop())+$(window).height(),t<e&&a<n}),!1),aboutUsAnimationHasRan=!1,valuesAnimationHasRan=!1,headerAnimationHasRan=!1,brandsAnimationHasRan=!1,headerElem=$("#header"),aboutElem=$("#about"),brandsElem=$(".brandlist"),aboutUsElem=$("#aboutUs"),valuesElem=$("#values");function fireAnimations(){var e,t,n;isHomePage&&0<headerElem.length&&headerElem.isInViewport()&&(e=$("#header .logo"),t=$("#header h1"),n=$("#header .icon-play"),headerAnimationHasRan||(TweenMax.fromTo(e,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"}}),TweenMax.fromTo(t,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"},delay:.3}),TweenMax.fromTo(n,.5,{opacity:0,scale:1.5,ease:Bounce.ease},{opacity:1,scale:1}),headerAnimationHasRan=!0)),isHomePage&&0<headerElem.length&&aboutElem.isInViewport()&&(e=$("#about > .left-container"),t=$("#about > .right-container"),aboutAnimationHasRan||(TweenMax.fromTo(e,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),TweenMax.fromTo(t,1,{css:{x:"100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),aboutAnimationHasRan=!0)),isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()&&(n=$(".employee-wrapper"),aboutUsAnimationHasRan||(TweenMax.staggerFromTo(n,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)),isHomePage&&0<brandsElem.length&&brandsElem.isInViewport()&&(e=brandsElem.find("li"),5<$(".brandlist li").length?$(".brandlist").slick({slidesToShow:5,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!1,swip:!0,responsive:[{breakpoint:600,settings:{slidesToShow:3,slidesToScroll:1}}]}):brandsAnimationHasRan||(TweenMax.staggerFromTo(e,.5,{css:{x:"-40",opacity:0}},{css:{x:"0",opacity:"1"},delay:.2},.2),brandsAnimationHasRan=!0)),isHomePage&&0<valuesElem.length&&valuesElem.isInViewport()&&(t=$(".valueItem"),valuesAnimationHasRan||($.each(t,function(){var e=$(this).find("strong"),t=(-1*Math.random()+1.5).toFixed(2);TweenMax.fromTo(e,1,{css:{x:"-10",opacity:0}},{css:{x:"0",opacity:"1"},delay:t})}),valuesAnimationHasRan=!0)),isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()&&(n=$(".employee-wrapper"),aboutUsAnimationHasRan||(TweenMax.staggerFromTo(n,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0))}function getDirection(e,t,n){Math.abs(t-e)<=5||n(t<e?"down":"up",e)}function handleMethodScroll(e){var t="method",n=".fadeIn",a=".method-item",o=".intro",i=".design",s=".tuning",d=".construction";$(n).removeClass(t),$(a).removeClass(t),1===e?($(n+o).addClass(t),$(a+o).addClass(t)):2===e?($(a+o).addClass(t),$(n+i).addClass(t),$(a+i).addClass(t)):3===e?($(a+o).addClass(t),$(a+i).addClass(t),$(n+s).addClass(t),$(a+s).addClass(t)):4===e?($(a+o).addClass(t),$(a+i).addClass(t),$(a+s).addClass(t),$(n+d).addClass(t),$(a+d).addClass(t)):5===e&&($(a+o).addClass(t),$(a+i).addClass(t),$(a+s).addClass(t),$(a+d).addClass(t),$(n+".eval").addClass(t),$(a+".eval").addClass(t))}function setCookie(e,t,n){var a,o="";n&&((a=new Date).setTime(a.getTime()+24*n*60*60*1e3),o="; expires="+a.toUTCString()),document.cookie=e+"="+(t||"")+o+"; path=/"}function getCookie(e){for(var t=e+"=",n=document.cookie.split(";"),a=0;a<n.length;a++){for(var o=n[a];" "==o.charAt(0);)o=o.substring(1,o.length);if(0==o.indexOf(t))return o.substring(t.length,o.length)}return null}function eraseCookie(e){document.cookie=e+"=; Max-Age=-99999999;"}function chooseCookie(){var e=navigator.language||navigator.userLanguage,t=getCookie("lang"),n=getParameterByName("lang");null==t||""===t?(e.match(/de/g)?setCookie("lang","de",7):e.match(/en/g)?setCookie("lang","en",7):(e.match(/nl/g),setCookie("lang","nl",7)),setTimeout(function(){window.location.reload()},20)):$("body").addClass(t),void 0!==n&&"de"===n?setCookie("lang","de",7):void 0!==n&&"en"===n?setCookie("lang","en",7):void 0!==n&&"nl"===n&&setCookie("lang","nl",7),setTimeout(function(){$("#nav .active-loc").html(getCookie("lang"))},200)}function getParameterByName(e,t){t=t||window.location.href,e=e.replace(/[\[\]]/g,"\\$&");e=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return e?e[2]?decodeURIComponent(e[2].replace(/\+/g," ")):"":null}function fixNav(e){var t=$("#nav");500<=e?t.addClass("fixed"):t.removeClass("fixed")}function trackLocation(e){var t=$(".slick-active .after"),n=$(".slick-active .before"),a=n[0].getBoundingClientRect(),n=n.outerWidth(),e=(e.pageX-a.left)/n*100;e<=100&&t.css("width",e+"%")}function googleMapsInit(){var e=new google.maps.Geocoder,t=$(".contact-details-map").html();void 0!==t&&e.geocode({address:t},function(e,t){var n,a;t==google.maps.GeocoderStatus.OK&&(t=e[0].geometry.location.lat(),e=e[0].geometry.location.lng(),e={zoom:15,center:t=new google.maps.LatLng(t,e),scrollwheel:!1,navigationControl:!1,mapTypeControl:!1,scaleControl:!1,disableDefaultUI:!0,styles:[{featureType:"landscape",stylers:[{visibility:"simplified"},{color:"#2b3f57"},{weight:.1}]},{featureType:"administrative",stylers:[{visibility:"on"},{hue:"#ff0000"},{weight:.4},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{weight:1.3},{color:"#FFFFFF"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:3}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:1.1}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:.4}]},{},{featureType:"road.highway",elementType:"labels",stylers:[{weight:.8},{color:"#ffffff"},{visibility:"on"}]},{featureType:"road.local",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"labels",stylers:[{color:"#ffffff"},{weight:.7}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{color:"#6c5b7b"}]},{featureType:"water",stylers:[{color:"#f3b191"}]},{featureType:"transit.line",stylers:[{visibility:"on"}]}]},map=new google.maps.Map(document.getElementById("map-canvas"),e),n=new google.maps.Marker({position:t,icon:"//expo-mate.github.io/assets/images/marker.png",map:map}),a=new google.maps.InfoWindow({content:$(".contact-details-map").html()}),450<$(window).width()&&map.panBy(200,-150),google.maps.event.addListener(n,"click",function(){a.open(map,n)}))})}function showModal(e,t,n){var a;e&&e.preventDefault(),$("body").hasClass("open")||(a="",void 0!==(a=null==t?n:t.data("project"))&&($(".modal").data("project",a),$("body").addClass("open"),$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var e=JSON.parse(decodeURIComponent(escape(window.atob(e)))).nl.pages.projects,i=[];$.each(e,function(e,t){a===t.id&&($(".slider").empty(),t=t.images,document.location.href="#"+a,t&&0<t.length&&$.each(t,function(e,t){var n=t.src,a=!1,o=n.split(".").pop().toLowerCase();"jpg"!==o&&"png"!==o||(a=!0),i.push(t&&a?'<div class="project-image">\n<img src="'+n+'" alt="'+t.header+'" />\n</div>':'<div class="project-image youtube">\n<div class="youtube-video-embed embed-responsive embed-responsive-16by9" id="video">\n<span>\n    <iframe\n        id="player"\n        class="youtube-video embed-responsive-item"\n        frameborder="0"\n        allowfullscreen="1"\n        allow="autoplay; encrypted-media"\n        title="YouTube video player"\n         src="https://www.youtube.com/embed/'+n+'?autoplay=0&rel=0&fs=1&enablejsapi=1">\n    </iframe>\n  </span>\n  </div>\n </div>')}),sliderInit(i))})}})))}function closeModal(e,t){$("body").removeClass("open");var n=t.parent().data("project");window.location.hash="",t.hasClass("modal")&&(n=t.data("project")),$(".slider").slick("unslick"),$(".slider").empty(),document.getElementById("project-"+n).scrollIntoView(!0)}function sliderInit(e){$(".slider").append(e),setTimeout(function(){$(".slider").slick({slidesToShow:1,slidesToScroll:1,prevArrow:$(".icon-arrow-left"),nextArrow:$(".icon-arrow-right"),autoplay:!0,dots:!1,autoplaySpeed:3e3,adaptiveHeight:!0,lazyLoad:"onDemand",swip:!0})},100)}$(function(){isHomePage&&(fireAnimations(),$(window).on("resize scroll",function(){fireAnimations()}))}),$(function(){var e,n,a,o,i,s,d,c,l,r,m=0,h=!1,t=$("#header"),p=$("body.homepage"),f=$(window).height(),u=$(window).width(),v=950,g=$(".method-item"),w=$(".fadeIn"),y=-1<window.orientation&&screen.width<=640,b=null!=navigator.userAgent.match(/iPad/i),C=$("body").find("[data-content='content-method-hoverLabel']");$(window).on("mousewheel DOMMouseScroll touchmove",function(){h=!0}),$(window).on("resize",function(){f=$(this).height(),u=$(this).width(),v=$(window).height()/100*20}),void 0!==p&&0<p.length&&(p=$("#method"),n=$(".method-scroll-wrapper"),a=p.height(),o=p.offset().top,i=$("#case-studies"),s=~~i.offset().top,d=$("#about"),c=$("#preabout").offset().top,l="active",r="show",(y||b)&&(i.addClass(r),w.addClass(r),d.addClass(r)),$(g).on("mouseenter",function(){var e=$(this).attr("data-item");$(this).addClass("active"),$(".diagram-logo").addClass("hidden"),0<C.length&&C.addClass("hidden"),$(".method-desc."+e).addClass("active"),$("#diagram").addClass(e)}).on("mouseleave",function(){var e=$(this).attr("data-item");$(this).removeClass("active"),$(".diagram-logo").removeClass("hidden"),0<C.length&&C.removeClass("hidden"),$(".method-desc."+e).removeClass("active"),$("#diagram").removeClass(e)}),$(".close-btn").on("click",function(){$("body").toggleClass("isPlaying"),t.removeClass("play"),t.find(".video-container").removeClass("play"),$(".youtube-video-embed iframe").attr("id","").attr("src","")}),$(".play-video-wrapper").on("click",function(){$("body").toggleClass("isPlaying"),t.addClass("play"),t.find(".video-container").addClass("play");$.ajax({url:"./assets/json/content.json",scriptCharset:"utf-8",type:"GET",success:function(e){e=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.header.content;$(".youtube-video-embed iframe").attr("id",e.youtubeURL).attr("src","https://www.youtube.com/embed/"+e.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1")}})}),$(window).on("scroll",function(){e=~~$(this).scrollTop(),f<1100&&(v=1050),g.removeClass(l),getDirection(e,m,function(e,t){(m=t)&&h&&!y&&1200<u&&!b&&("down"===e?(o<=t&&(w.removeClass(r),n.addClass(r),handleMethodScroll(5)),o+a<=t&&(i.addClass(r),w.removeClass(r),n.removeClass(r)),c<=t&&d.addClass(r)):(i.addClass(r),w.addClass(r),d.addClass(r)),"up"===e)&&(t<s-v&&(n.addClass(r),handleMethodScroll(5)),t<=o-100)&&w.removeClass(l)})}))}),chooseCookie(),$(function(){var n=!1,a=$("#nav ul"),o=$(".hamburger"),e=$(window).scrollTop();$("#nav li a").on("click",function(e){e.preventDefault();var t,e=$(this).attr("href");-1!==e.indexOf(".")?window.location.href=e:$(this).hasClass("loc")?(eraseCookie("lang"),setCookie("lang",e,7),setTimeout(function(){window.location.reload()},20)):-1!==e.indexOf("#")&&(t=$(e).offset().top,"#footer"===e?t=$("#contact-info").offset().top:"#comparison"===e&&(t=$("#comparison-wrapper").offset().top),$("html, body").animate({scrollTop:t})),n&&(o.removeClass("is-active"),a.removeClass("open"),n=!1)}),o.click(function(){$(this).toggleClass("is-active"),a.toggleClass("open"),n=!0}),$(window).on("scroll",function(){fixNav(~~$(this).scrollTop())}),$(".contact-btn").on("click",function(){var e=$("footer").offset().top;$("html, body").animate({scrollTop:e})}),fixNav(e)}),$(function(){$("body").hasClass("homepage")&&$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var e=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.content.comparison,i=$("#comparison"),e=e.comparisons||"";$.each(e,function(e,t){i.append('<div class="item"><img data-content="content-comparison-before" src="'+t.before+'" class="before" alt>\n<div data-content="content-comparison-after" class="after" style="background-image: url('+t.after+')"></div></div>')}),setTimeout(function(){i.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,nextArrow:".icon-arrow-right",prevArrow:".icon-arrow-left",swipeToSlide:!1}),i.on("setPosition",function(e,t,n,a){var o=i.find(".slick-active");o&&(o.on("mousemove",trackLocation),o.on("touchstart",trackLocation),o.on("touchmove",trackLocation))})},200)}})}),$(function(){var f=$("body");$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var e=JSON.parse(decodeURIComponent(escape(window.atob(e)))),t=getCookie("lang"),e=e[t],n=e.nav.labels,a=e.pages.homepage,o=a.header.content,i=a.content.intro,s=i.images,d=a.content.about,c=a.content.aboutUs,l=a.content.values,r=a.content.comparison,m=a.content.method,h=a.content.model,p=a.content.projects,a=a.footer;e&&f.removeClass("loading"),void 0===t&&chooseCookie(),n&&((e=$("#nav > ul > li ")).find('a[href="#preabout"]').html(n.about),e.find('a[href="index.html#preabout"]').html(n.about),e.find('a[href="#method"]').html(n.method),e.find('a[href="index.html#method"]').html(n.method),e.find('a[href="#values"]').html(n.values),e.find('a[href="index.html#values"]').html(n.values),e.find('a[href="#aboutUs"]').html(n.aboutUs),e.find('a[href="index.html#aboutUs"]').html(n.aboutUs),e.find('a[href="projects.html"]').html(n.projects),e.find('a[href="#footer"]').html(n.contact),e.find('a[href="#footer"]').html(n.contact),e.find('a[href="#mission"]').html(n.mission),e.find('a[href="index.html#mission"]').html(n.mission),e.find('a[href="#model"]').html(n.model),e.find('a[href="index.html#model"]').html(n.model),e.find('a[href="#foundation"]').html(n.foundation),e.find('a[href="index.html#foundation"]').html(n.foundation),e.find('a[href="#comparison"]').html(n.comparison),e.find('a[href="index.html#comparison"]').html(n.comparison)),o&&($(".background-video").css({backgroundImage:o.backgroundImageSrc}),$(".youtube-video-embed iframe").attr("id",o.youtubeURL).attr("src","https://www.youtube.com/embed/"+o.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1"),$("video source#mp4").attr("src",o.backgroundVideoMp4Src),$("video source#webm").attr("src",o.backgroundVideoWebMSrc),f.find("[data-content='header-content-title']").html(o.header)),i&&(f.find("[data-content='content-intro-title']").html(i.header),f.find("[data-content='content-intro-desc']").html(i.description),0<$(".brandlist").length)&&$.each(s,function(e,t){t.src&&f.find(".brandlist").append('<li><img src="'+t.src+'" alt="'+t.alt+'" /></li>')}),d&&(f.find("[data-content='content-about-row1-title']").html(d.row1.header),f.find("[data-content='content-about-row1-image']").css({backgroundImage:d.row1.image.src}),f.find("[data-content='content-about-row1-desc']").html(d.row1.description),f.find("[data-content='content-about-row2-title']").html(d.row2.header),f.find("[data-content='content-about-row2-image']").css({backgroundImage:d.row2.image.src}),f.find("[data-content='content-about-row2-desc']").html(d.row2.description)),c&&(f.find("[data-content='content-aboutUs-title']").html(c.header),f.find("[data-content='content-aboutUs-description']").html(c.description),f.find("[data-content='content-employee-niek-image']").attr("src",c.employees.niek.image.src).attr("alt",c.employees.niek.image.alt),f.find("[data-content='content-employee-niek-title']").html(c.employees.niek.header),f.find("[data-content='content-employee-niek-desc']").html(c.employees.niek.description),f.find("[data-content='content-employee-jan-image']").attr("src",c.employees.jan.image.src).attr("alt",c.employees.jan.image.alt),f.find("[data-content='content-employee-jan-title']").html(c.employees.jan.header),f.find("[data-content='content-employee-jan-desc']").html(c.employees.jan.description)),l&&(f.find("[data-content='content-values-image']").css({backgroundImage:l.image.src}),f.find("[data-content='content-values-title']").html(l.header),f.find("[data-content='content-values-desc']").html(l.description),f.find("[data-content='content-value1']").html(l.values.value1),f.find("[data-content='content-value2']").html(l.values.value2),f.find("[data-content='content-value3']").html(l.values.value3),f.find("[data-content='content-value4']").html(l.values.value4),f.find("[data-content='content-value5']").html(l.values.value5),f.find("[data-content='content-value6']").html(l.values.value6)),m&&(f.find("[data-content='content-method-title']").html(m.header),f.find("[data-content='content-method-desc']").html(m.description),f.find("[data-content='content-method-hoverLabel']").html(m.hoverLabel),f.find("[data-content='content-method-intro-title']").html(m.methods.intro.header),f.find("[data-content='content-method-intro-desc']").html(m.methods.intro.description),f.find("[data-content='content-method-design-title']").html(m.methods.design.header),f.find("[data-content='content-method-design-desc']").html(m.methods.design.description),f.find("[data-content='content-method-tuning-title']").html(m.methods.tuning.header),f.find("[data-content='content-method-tuning-desc']").html(m.methods.tuning.description),f.find("[data-content='content-method-construction-title']").html(m.methods.construction.header),f.find("[data-content='content-method-construction-desc']").html(m.methods.construction.description),f.find("[data-content='content-method-eval-title']").html(m.methods.eval.header),f.find("[data-content='content-method-eval-desc']").html(m.methods.eval.description)),h&&(f.find("[data-content='content-model-title']").html(h.header),f.find("[data-content='content-model-image']").css({backgroundImage:h.image.src}),f.find("[data-content='content-model-desc']").html(h.description)),p&&(f.find("[data-content='content-projects-title']").html(p.header),f.find("[data-content='content-projects-desc']").html(p.description),f.find("[data-content='content-projects-button']").html(p.button.label),f.find("[data-content='content-project1-image']").attr("src",p.project1.image.src).attr("alt",p.project1.image.alt),f.find("[data-content='content-project1-title']").html(p.project1.header),f.find("[data-content='content-project1-btn']").html(p.project1.button),f.find("[data-content='content-project2-image']").attr("src",p.project2.image.src).attr("alt",p.project2.image.alt),f.find("[data-content='content-project2-title']").html(p.project2.header),f.find("[data-content='content-project2-btn']").html(p.project2.button)),r&&(f.find("[data-content='content-projects-comparison-title']").html(r.header),f.find("[data-content='content-projects-comparison-desc']").html(r.description)),a&&(f.find("[data-content='footer-testimonials-title']").html(a.testimonials.header),f.find("[data-content='footer-contacts-header']").html(a.contacts.header),f.find("[data-content='footer-contacts-jan-title']").html(a.contacts.jan.header),f.find("[data-content='footer-contacts-jan-email']").attr("href",a.contacts.jan.links.email.src).html(a.contacts.jan.links.email.header),f.find("[data-content='footer-contacts-linkedin-jan']").attr("href",a.contacts.jan.links.linkedin.src),f.find("[data-content='footer-contacts-linkedin-jan-title']").html(a.contacts.jan.links.linkedin.header+" "),f.find("[data-content='footer-contacts-call-jan-phone']").attr("href",a.contacts.jan.phone),f.find("[data-content='footer-contacts-niek-title']").html(a.contacts.niek.header),f.find("[data-content='footer-contacts-niek-email']").attr("href",a.contacts.niek.links.email.src).html(a.contacts.niek.links.email.header),f.find("[data-content='footer-contacts-linkedin-niek']").attr("href",a.contacts.niek.links.linkedin.src),f.find("[data-content='footer-contacts-linkedin-niek-title']").html(a.contacts.niek.links.linkedin.header+" "),f.find("[data-content='footer-contacts-call-niek-phone']").attr("href",a.contacts.niek.phone),f.find("[data-content='footer-contacts-phone-header']").html(a.phone.header),f.find("[data-content='footer-contacts-visit-header']").html(a.visit.header),f.find("[data-content='footer-contacts-visit-desc']").html(a.visit.description),f.find("[data-content='footer-copyright-desc']").html(a.copyright.description))}})}),google.maps.event.addDomListener(window,"load",googleMapsInit),$(function(){var p;$("body").hasClass("projects")&&(p=window.location.hash,$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var e=JSON.parse(decodeURIComponent(escape(window.atob(e)))),t=e[getCookie("lang")]||[],r=t.pages.homepage.content.projects.reviewLink||"",t=t.pages.projects,m=$("#projects .projects-wrapper"),h=e.nl.pages.projects;$.each(t,function(e,t){var n,a,o,i,s,d,c,l;t&&(parseInt(e),a=(n=t.review).author||"",o=n.description||"",i=n.date||"",s=a.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),d=n.stars||"",c=t.id||"project-"+e,l="",t.images&&0<t.images.length&&(l=t.images[0].src),$.each(h,function(e,t){t.id===c&&(l=t.images[0].src)}),m.append('<div class="project" id='+c+'>\n\t<div class="project-wrapper">\n\t\t<div class="project-image">\n       <div data-project="'+c+'" class="project-overview-image" style="background-image: url('+l+')"></div>\n\t\t</div>\n\t\t<div class="project-desc-wrapper">\n\t\t\t<div class="project-desc-content">\n\t\t\t\t<div class="project-header">\n\t\t\t\t\t<h2 class="project-title" data-project="'+c+'">'+t.header+'</h2>\n\t\t\t\t\t<div class="project-sub-title">'+t.subTitle+'</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="project-desc"> \n\t\t\t\t   <span>'+t.description+'</span> \n\t\t\t\t   <a class="read-review" data-revID="'+c+'">'+r+" "+t.header+'</a> \n\t\t\t   </div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class="project-review">\n\t\t<div class="review-close"></div> \n\t\t<div class="review" id="'+s+'">\n\t\t\t<div class="review-author">'+a+'</div>\n\t\t\t<div class="review-date">'+i+'</div>\n           <div class="review-stars">\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <span></span>\n           </div>\n\t\t\t<div class="review-text">'+o+"</div>\n\t\t</div>\n\t</div>\n</div>"),4<d&&$("#"+c).find(".review-stars > span").append('<i class="icon-star-full"></i>'),void 0!==n&&""!==o||$("#"+c).find(".read-review").addClass("hidden"),$(".read-review").on("click",function(e){e.preventDefault();e=$(this).attr("data-revID");$("#"+e).addClass("show-review").find(".project-review").addClass("show")}),$(".review-close").on("click",function(){$(this).parent().removeClass("show").parent(".project").removeClass("show-review")}),p)&&void 0!==p&&(p=window.location.hash.substring(1),c===p)&&showModal(null,null,c)})},error:function(e){chooseCookie()}}),$(document).on("click touch",".project-title",function(e){showModal(e,$(this))}),$(document).on("click touch",".project-overview-image",function(e){showModal(e,$(this))}),$(document).on("click touch",".modal-close",function(e){closeModal(e,$(this))}),$(document).on("click touch",".modal",function(e){e.target===this&&closeModal(e,$(this))}))});var testimonial=$("#google-reviews");function reviewSlider(){testimonial.removeClass("hidden"),testimonial.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,fade:!0,infinite:!0,autoplaySpeed:8e3,arrows:!0,responsive:[{breakpoint:1025,settings:{adaptiveHeight:!0}}]})}$(function(){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){e=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.projects;$.each(e,function(e,t){var t=t.review,n=t.author||"",a=t.description||"",o=t.date||"",i=n.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),s=t.stars||"",e=parseInt(e)+1;(t&&void 0!==t&&""!==a||""!==s)&&(testimonial.addClass("hidden"),0<testimonial.length)&&(testimonial.append('<div class="review" id="'+i+e+'">\n               <div class="review-author">'+n+'</div>\n               <div class="review-date">'+o+'</div>\n               <div class="review-stars">\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <span></span>\n               </div>\n               <div class="review-text">'+t.description+"</div>\n            </div>"),4<s)&&$(".review#"+i+e).find(".review-stars > span").append('<i class="icon-star-full"></i>')}),setTimeout(function(){reviewSlider()},1e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
