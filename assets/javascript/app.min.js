var isHomePage=$("body.homepage");isHomePage&&($.fn.isInViewport=function(){var e=$(this);if("undefined"!==e&&e.length){var t=$(this).offset().top,a=t+$(this).outerHeight(),n=$(window).scrollTop(),o=n+$(window).height();return n<a&&t<o}});var map,aboutAnimationHasRan=!1,aboutUsAnimationHasRan=!1,valuesAnimationHasRan=!1,headerAnimationHasRan=!1,brandsAnimationHasRan=!1,headerElem=$("#header"),aboutElem=$("#about"),brandsElem=$(".brandlist"),aboutUsElem=$("#aboutUs"),valuesElem=$("#values");function fireAnimations(){if(isHomePage&&0<headerElem.length&&headerElem.isInViewport()){var e=$("#header .logo"),t=$("#header h1"),a=$("#header .icon-play");headerAnimationHasRan||(TweenMax.fromTo(e,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"}}),TweenMax.fromTo(t,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"},delay:.3}),TweenMax.fromTo(a,.5,{opacity:0,scale:1.5,ease:Bounce.ease},{opacity:1,scale:1}),headerAnimationHasRan=!0)}if(isHomePage&&0<headerElem.length&&aboutElem.isInViewport()){var n=$("#about > .left-container"),o=$("#about > .right-container");aboutAnimationHasRan||(TweenMax.fromTo(n,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),TweenMax.fromTo(o,1,{css:{x:"100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),aboutAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var i=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(i,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}if(isHomePage&&0<brandsElem.length&&brandsElem.isInViewport()){var s=brandsElem.find("li");5<$(".brandlist li").length?$(".brandlist").slick({slidesToShow:5,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!1,swip:!0,responsive:[{breakpoint:600,settings:{slidesToShow:3,slidesToScroll:1}}]}):brandsAnimationHasRan||(TweenMax.staggerFromTo(s,.5,{css:{x:"-40",opacity:0}},{css:{x:"0",opacity:"1"},delay:.2},.2),brandsAnimationHasRan=!0)}if(isHomePage&&0<valuesElem.length&&valuesElem.isInViewport()){var d=$(".valueItem");valuesAnimationHasRan||($.each(d,function(){var e=$(this).find("strong"),t=(-1*Math.random()+1.5).toFixed(2);TweenMax.fromTo(e,1,{css:{x:"-10",opacity:0}},{css:{x:"0",opacity:"1"},delay:t})}),valuesAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var c=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(c,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}}function getDirection(e,t,a){Math.abs(t-e)<=5||a(t<e?"down":"up",e)}function handleMethodScroll(e){var t="method",a=".fadeIn",n=".method-item",o=".intro",i=".design",s=".tuning",d=".construction";$(a).removeClass(t),$(n).removeClass(t),1===e?($(a+o).addClass(t),$(n+o).addClass(t)):2===e?($(n+o).addClass(t),$(a+i).addClass(t),$(n+i).addClass(t)):3===e?($(n+o).addClass(t),$(n+i).addClass(t),$(a+s).addClass(t),$(n+s).addClass(t)):4===e?($(n+o).addClass(t),$(n+i).addClass(t),$(n+s).addClass(t),$(a+d).addClass(t),$(n+d).addClass(t)):5===e&&($(n+o).addClass(t),$(n+i).addClass(t),$(n+s).addClass(t),$(n+d).addClass(t),$(a+".eval").addClass(t),$(n+".eval").addClass(t))}function setCookie(e,t,a){var n="";if(a){var o=new Date;o.setTime(o.getTime()+24*a*60*60*1e3),n="; expires="+o.toUTCString()}document.cookie=e+"="+(t||"")+n+"; path=/"}function getCookie(e){for(var t=e+"=",a=document.cookie.split(";"),n=0;n<a.length;n++){for(var o=a[n];" "==o.charAt(0);)o=o.substring(1,o.length);if(0==o.indexOf(t))return o.substring(t.length,o.length)}return null}function eraseCookie(e){document.cookie=e+"=; Max-Age=-99999999;"}function chooseCookie(){var e=navigator.language||navigator.userLanguage,t=getCookie("lang"),a=getParameterByName("lang");null==t||""===t?(e.match(/de/g)?setCookie("lang","de",7):e.match(/en/g)?setCookie("lang","en",7):(e.match(/nl/g),setCookie("lang","nl",7)),setTimeout(function(){window.location.reload()},20)):$("body").addClass(t),void 0!==a&&"de"===a?setCookie("lang","de",7):void 0!==a&&"en"===a?setCookie("lang","en",7):void 0!==a&&"nl"===a&&setCookie("lang","nl",7),setTimeout(function(){$("#nav .active-loc").html(getCookie("lang"))},200)}function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var a=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null}function fixNav(e){var t=$("#nav");500<=e?t.addClass("fixed"):t.removeClass("fixed")}function trackLocation(e){var t=$(".slick-active .after"),a=$(".slick-active .before"),n=a[0].getBoundingClientRect(),o=a.outerWidth(),i=(e.pageX-n.left)/o*100;i<=100&&t.css("width",i+"%")}function googleMapsInit(){var e=new google.maps.Geocoder,t=$(".contact-details-map").html();void 0!==t&&e.geocode({address:t},function(e,t){if(t==google.maps.GeocoderStatus.OK){var a=e[0].geometry.location.lat(),n=e[0].geometry.location.lng(),o=new google.maps.LatLng(a,n),i={zoom:15,center:o,scrollwheel:!1,navigationControl:!1,mapTypeControl:!1,scaleControl:!1,disableDefaultUI:!0,styles:[{featureType:"landscape",stylers:[{visibility:"simplified"},{color:"#2b3f57"},{weight:.1}]},{featureType:"administrative",stylers:[{visibility:"on"},{hue:"#ff0000"},{weight:.4},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{weight:1.3},{color:"#FFFFFF"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:3}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:1.1}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:.4}]},{},{featureType:"road.highway",elementType:"labels",stylers:[{weight:.8},{color:"#ffffff"},{visibility:"on"}]},{featureType:"road.local",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"labels",stylers:[{color:"#ffffff"},{weight:.7}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{color:"#6c5b7b"}]},{featureType:"water",stylers:[{color:"#f3b191"}]},{featureType:"transit.line",stylers:[{visibility:"on"}]}]};map=new google.maps.Map(document.getElementById("map-canvas"),i);var s=new google.maps.Marker({position:o,icon:"//expo-mate.github.io/assets/images/marker.png",map:map}),d=new google.maps.InfoWindow({content:$(".contact-details-map").html()});450<$(window).width()&&map.panBy(200,-150),google.maps.event.addListener(s,"click",function(){d.open(map,s)})}})}function sliderInit(e){setTimeout(function(){"string"==typeof e&&$("#"+e+" .slider").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!0,lazyLoad:"onDemand",swip:!0})},100)}$(function(){isHomePage&&(fireAnimations(),$(window).on("resize scroll",function(){fireAnimations()}))}),$(function(){var a=0,n=!1,e=$("#header"),t=$("body.homepage"),o=$(window).height(),i=$(window).width(),s=950,d=0,c=$(".method-item"),r=$(".fadeIn"),l=-1<window.orientation&&screen.width<=640,m=null!=navigator.userAgent.match(/iPad/i),p=$("body").find("[data-content='content-method-hoverLabel']");if($(window).on("mousewheel DOMMouseScroll touchmove",function(){n=!0}),$(window).on("resize",function(){o=$(this).height(),i=$(this).width(),s=$(window).height()/100*20}),void 0!==t&&0<t.length){var h=$("#method"),f=$(".method-scroll-wrapper"),u=h.height(),v=h.offset().top,g=$("#case-studies"),w=~~g.offset().top,y=$("#about"),b=$("#preabout").offset().top,C="active",k="show";(l||m)&&(g.addClass(k),r.addClass(k),y.addClass(k)),$(c).on("mouseenter",function(){var e=$(this).attr("data-item");$(this).addClass("active"),$(".diagram-logo").addClass("hidden"),0<p.length&&p.addClass("hidden"),$(".method-desc."+e).addClass("active"),$("#diagram").addClass(e)}).on("mouseleave",function(){var e=$(this).attr("data-item");$(this).removeClass("active"),$(".diagram-logo").removeClass("hidden"),0<p.length&&p.removeClass("hidden"),$(".method-desc."+e).removeClass("active"),$("#diagram").removeClass(e)}),$(".close-btn").on("click",function(){$("body").toggleClass("isPlaying"),e.removeClass("play"),e.find(".video-container").removeClass("play"),$(".youtube-video-embed iframe").attr("id","").attr("src","")}),$(".play-video-wrapper").on("click",function(){$("body").toggleClass("isPlaying"),e.addClass("play"),e.find(".video-container").addClass("play");$.ajax({url:"./assets/json/content.json",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.header.content;$(".youtube-video-embed iframe").attr("id",t.youtubeURL).attr("src","https://www.youtube.com/embed/"+t.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1")}})}),$(window).on("scroll",function(){d=~~$(this).scrollTop(),o<1100&&(s=1050),c.removeClass(C),getDirection(d,a,function(e,t){(a=t)&&n&&!l&&1200<i&&!m&&("down"===e?(v<=t&&(r.removeClass(k),f.addClass(k),handleMethodScroll(5)),v+u<=t&&(g.addClass(k),r.removeClass(k),f.removeClass(k)),b<=t&&y.addClass(k)):(g.addClass(k),r.addClass(k),y.addClass(k)),"up"===e&&(t<w-s&&(f.addClass(k),handleMethodScroll(5)),t<=v-100&&r.removeClass(C)))})})}}),chooseCookie(),$(function(){var n=!1,o=$("#nav ul"),i=$(".hamburger"),e=$(window).scrollTop();$("#nav li a").on("click",function(e){e.preventDefault();var t=$(this).attr("href");if(-1!==t.indexOf("."))window.location.href=t;else if($(this).hasClass("loc"))eraseCookie("lang"),setCookie("lang",t,7),setTimeout(function(){window.location.reload()},20);else if(-1!==t.indexOf("#")){var a=$(t).offset().top;"#footer"===t?a=$("#contact-info").offset().top:"#comparison"===t&&(a=$("#comparison-wrapper").offset().top),$("html, body").animate({scrollTop:a})}n&&(i.removeClass("is-active"),o.removeClass("open"),n=!1)}),i.click(function(){$(this).toggleClass("is-active"),o.toggleClass("open"),n=!0}),$(window).on("scroll",function(){fixNav(~~$(this).scrollTop())}),$(".contact-btn").on("click",function(){var e=$("footer").offset().top;$("html, body").animate({scrollTop:e})}),fixNav(e)}),$(function(){if($("body").hasClass("homepage")){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.content.comparison,i=$("#comparison"),a=t.comparisons||"";$.each(a,function(e,t){i.append('<div class="item"><img data-content="content-comparison-before" src="'+t.before+'" class="before" alt>\n<div data-content="content-comparison-after" class="after" style="background-image: url('+t.after+')"></div></div>')}),setTimeout(function(){i.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,nextArrow:".icon-arrow-right",prevArrow:".icon-arrow-left",swipeToSlide:!1}),i.on("setPosition",function(e,t,a,n){var o=i.find(".slick-active");o&&(o.on("mousemove",trackLocation),o.on("touchstart",trackLocation),o.on("touchmove",trackLocation))})},200)}})}}),$(function(){var w=$("body");$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),n=t[a],o=n.nav.labels,i=n.pages.homepage,s=i.header.content,d=i.content.intro,c=d.images,r=i.content.about,l=i.content.aboutUs,m=i.content.values,p=i.content.comparison,h=i.content.method,f=i.content.model,u=i.content.projects,v=i.footer;if(n&&w.removeClass("loading"),void 0===a&&chooseCookie(),o){var g=$("#nav > ul > li ");g.find('a[href="#preabout"]').html(o.about),g.find('a[href="index.html#preabout"]').html(o.about),g.find('a[href="#method"]').html(o.method),g.find('a[href="index.html#method"]').html(o.method),g.find('a[href="#values"]').html(o.values),g.find('a[href="index.html#values"]').html(o.values),g.find('a[href="#aboutUs"]').html(o.aboutUs),g.find('a[href="index.html#aboutUs"]').html(o.aboutUs),g.find('a[href="projects.html"]').html(o.projects),g.find('a[href="#footer"]').html(o.contact),g.find('a[href="#footer"]').html(o.contact),g.find('a[href="#mission"]').html(o.mission),g.find('a[href="index.html#mission"]').html(o.mission),g.find('a[href="#model"]').html(o.model),g.find('a[href="index.html#model"]').html(o.model),g.find('a[href="#foundation"]').html(o.foundation),g.find('a[href="index.html#foundation"]').html(o.foundation),g.find('a[href="#comparison"]').html(o.comparison),g.find('a[href="index.html#comparison"]').html(o.comparison)}s&&($(".background-video").css({backgroundImage:s.backgroundImageSrc}),$(".youtube-video-embed iframe").attr("id",s.youtubeURL).attr("src","https://www.youtube.com/embed/"+s.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1"),$("video source#mp4").attr("src",s.backgroundVideoMp4Src),$("video source#webm").attr("src",s.backgroundVideoWebMSrc),w.find("[data-content='header-content-title']").html(s.header)),d&&(w.find("[data-content='content-intro-title']").html(d.header),w.find("[data-content='content-intro-desc']").html(d.description),0<$(".brandlist").length&&$.each(c,function(e,t){t.src&&w.find(".brandlist").append('<li><img src="'+t.src+'" alt="'+t.alt+'" /></li>')})),r&&(w.find("[data-content='content-about-row1-title']").html(r.row1.header),w.find("[data-content='content-about-row1-image']").css({backgroundImage:r.row1.image.src}),w.find("[data-content='content-about-row1-desc']").html(r.row1.description),w.find("[data-content='content-about-row2-title']").html(r.row2.header),w.find("[data-content='content-about-row2-image']").css({backgroundImage:r.row2.image.src}),w.find("[data-content='content-about-row2-desc']").html(r.row2.description)),l&&(w.find("[data-content='content-aboutUs-title']").html(l.header),w.find("[data-content='content-aboutUs-description']").html(l.description),w.find("[data-content='content-employee-niek-image']").attr("src",l.employees.niek.image.src).attr("alt",l.employees.niek.image.alt),w.find("[data-content='content-employee-niek-title']").html(l.employees.niek.header),w.find("[data-content='content-employee-niek-desc']").html(l.employees.niek.description),w.find("[data-content='content-employee-jan-image']").attr("src",l.employees.jan.image.src).attr("alt",l.employees.jan.image.alt),w.find("[data-content='content-employee-jan-title']").html(l.employees.jan.header),w.find("[data-content='content-employee-jan-desc']").html(l.employees.jan.description)),m&&(w.find("[data-content='content-values-image']").css({backgroundImage:m.image.src}),w.find("[data-content='content-values-title']").html(m.header),w.find("[data-content='content-values-desc']").html(m.description),w.find("[data-content='content-value1']").html(m.values.value1),w.find("[data-content='content-value2']").html(m.values.value2),w.find("[data-content='content-value3']").html(m.values.value3),w.find("[data-content='content-value4']").html(m.values.value4),w.find("[data-content='content-value5']").html(m.values.value5),w.find("[data-content='content-value6']").html(m.values.value6)),h&&(w.find("[data-content='content-method-title']").html(h.header),w.find("[data-content='content-method-desc']").html(h.description),w.find("[data-content='content-method-hoverLabel']").html(h.hoverLabel),w.find("[data-content='content-method-intro-title']").html(h.methods.intro.header),w.find("[data-content='content-method-intro-desc']").html(h.methods.intro.description),w.find("[data-content='content-method-design-title']").html(h.methods.design.header),w.find("[data-content='content-method-design-desc']").html(h.methods.design.description),w.find("[data-content='content-method-tuning-title']").html(h.methods.tuning.header),w.find("[data-content='content-method-tuning-desc']").html(h.methods.tuning.description),w.find("[data-content='content-method-construction-title']").html(h.methods.construction.header),w.find("[data-content='content-method-construction-desc']").html(h.methods.construction.description),w.find("[data-content='content-method-eval-title']").html(h.methods.eval.header),w.find("[data-content='content-method-eval-desc']").html(h.methods.eval.description)),f&&(w.find("[data-content='content-model-title']").html(f.header),w.find("[data-content='content-model-image']").css({backgroundImage:f.image.src}),w.find("[data-content='content-model-desc']").html(f.description)),u&&(w.find("[data-content='content-projects-title']").html(u.header),w.find("[data-content='content-projects-desc']").html(u.description),w.find("[data-content='content-projects-button']").html(u.button.label),w.find("[data-content='content-project1-image']").attr("src",u.project1.image.src).attr("alt",u.project1.image.alt),w.find("[data-content='content-project1-title']").html(u.project1.header),w.find("[data-content='content-project1-btn']").html(u.project1.button),w.find("[data-content='content-project2-image']").attr("src",u.project2.image.src).attr("alt",u.project2.image.alt),w.find("[data-content='content-project2-title']").html(u.project2.header),w.find("[data-content='content-project2-btn']").html(u.project2.button)),p&&(w.find("[data-content='content-projects-comparison-title']").html(p.header),w.find("[data-content='content-projects-comparison-desc']").html(p.description)),v&&(w.find("[data-content='footer-testimonials-title']").html(v.testimonials.header),w.find("[data-content='footer-contacts-header']").html(v.contacts.header),w.find("[data-content='footer-contacts-jan-title']").html(v.contacts.jan.header),w.find("[data-content='footer-contacts-jan-email']").attr("href",v.contacts.jan.links.email.src).html(v.contacts.jan.links.email.header),w.find("[data-content='footer-contacts-linkedin-jan']").attr("href",v.contacts.jan.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-jan-title']").html(v.contacts.jan.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-jan-phone']").attr("href",v.contacts.jan.phone),w.find("[data-content='footer-contacts-niek-title']").html(v.contacts.niek.header),w.find("[data-content='footer-contacts-niek-email']").attr("href",v.contacts.niek.links.email.src).html(v.contacts.niek.links.email.header),w.find("[data-content='footer-contacts-linkedin-niek']").attr("href",v.contacts.niek.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-niek-title']").html(v.contacts.niek.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-niek-phone']").attr("href",v.contacts.niek.phone),w.find("[data-content='footer-contacts-phone-header']").html(v.phone.header),w.find("[data-content='footer-contacts-visit-header']").html(v.visit.header),w.find("[data-content='footer-contacts-visit-desc']").html(v.visit.description),w.find("[data-content='footer-copyright-desc']").html(v.copyright.description))}})}),google.maps.event.addDomListener(window,"load",googleMapsInit),$(function(){if($("body").hasClass("projects")){var f=window.location.hash;$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),p=t[a].pages.homepage.content.projects.reviewLink||"",n=t[a].pages.projects,h=$("#projects .projects-wrapper");void 0===a&&chooseCookie(),$.each(n,function(e,t){var i=[],a=t.images,n=parseInt(e)+1,o=t.review,s=o.author||"",d=o.description||"",c=o.date||"",r=s.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),l=o.stars||"";if(a&&0<a.length&&$.each(a,function(e,t){var a=t.src,n=!1,o=a.split(".").pop().toLowerCase();"jpg"!==o&&"png"!==o||(n=!0),t&&n?i.push('<div class="project-image" style="background-image: url('+a+')"></div>'):i.push('<div class="project-image">\n<div class="youtube-video-embed embed-responsive embed-responsive-16by9" id="video">\n<span>\n    <iframe\n        id="player"\n        class="youtube-video embed-responsive-item"\n        frameborder="0"\n        allowfullscreen="1"\n        allow="autoplay; encrypted-media"\n        title="YouTube video player"\n         src="https://www.youtube.com/embed/'+a+'?autoplay=0&rel=0&fs=1&enablejsapi=1">\n    </iframe>\n  </span>\n  </div>\n </div>')}),h.append('<div class="project" id="project'+n+'">\n\t<div class="project-close"></div>\n\t<div class="project-wrapper">\n\t\t<div class="project-images">\n\t\t\t<div class="slider">'+i.join("")+'</div>\n\t\t</div>\n\t\t<div class="project-desc-wrapper">\n\t\t\t<div class="project-desc-content">\n\t\t\t\t<div class="project-header">\n\t\t\t\t\t<h2 class="project-title">'+t.header+'</h2>\n\t\t\t\t\t<div class="project-sub-title">'+t.subTitle+'</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="project-desc"> \n\t\t\t\t   <span>'+t.description+'</span> \n\t\t\t\t   <a class="read-review" data-count="'+n+'">'+p+" "+t.header+'</a> \n\t\t\t   </div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class="project-review">\n\t\t<div class="review-close"></div> \n\t\t<div class="review" id="'+r+'">\n\t\t\t<div class="review-author">'+s+'</div>\n\t\t\t<div class="review-date">'+c+'</div>\n           <div class="review-stars">\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <span></span>\n           </div>\n\t\t\t<div class="review-text">'+d+"</div>\n\t\t</div>\n\t</div>\n</div>"),4<l&&$("#project"+n).find(".review-stars > span").append('<i class="icon-star-full"></i>'),void 0!==o&&""!==d&&void 0!==d||$("#project"+n).find(".read-review").addClass("hidden"),$(".project-images").on("click",function(){if(!$("body").hasClass("open")){$(this).parent().parent(".project").addClass("open");var e=$(this).parent().parent(".project").attr("id");document.location.href="#"+e,$("body").addClass("open"),sliderInit(e),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-title").on("click",function(){if(!$("body").hasClass("open")){var e=$(this).parent().parent().parent().parent().parent();e.addClass("open");var t=e.attr("id");document.location.href="#"+t,$("body").addClass("open"),sliderInit(t),!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&setTimeout(function(){window.location.reload()},200)}}),$(".project-close").on("click",function(){$("body").removeClass("open"),$(this).parent(".project").removeClass("open");var e=$(this).parent(".project").attr("id");$("#"+e+" .slider").slick("unslick"),window.location.hash="",document.getElementById(e).scrollIntoView(!0)}),$(".read-review").on("click",function(e){e.preventDefault();var t=$(this).attr("data-count");$("#project"+t).addClass("show-review").find(".project-review").addClass("show")}),$(".review-close").on("click",function(){$(this).parent().removeClass("show").parent(".project").removeClass("show-review")}),f&&void 0!==f){var m="project"+n;m===(f=window.location.hash.substring(1))&&($("#"+f).addClass("open"),$("body").addClass("open"),sliderInit(m))}})},error:function(e){chooseCookie()}})}});var testimonial=$("#google-reviews");function reviewSlider(){testimonial.removeClass("hidden"),testimonial.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,fade:!0,infinite:!0,autoplaySpeed:8e3,arrows:!0,responsive:[{breakpoint:1025,settings:{adaptiveHeight:!0}}]})}$(function(){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.projects;$.each(t,function(e,t){var a=t.review,n=a.author||"",o=a.description||"",i=a.date||"",s=n.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),d=a.stars||"",c=parseInt(e)+1;(a&&void 0!==a&&""!==o&&void 0!==o||""!==d&&void 0!==d)&&(testimonial.addClass("hidden"),0<testimonial.length&&(testimonial.append('<div class="review" id="'+s+c+'">\n               <div class="review-author">'+n+'</div>\n               <div class="review-date">'+i+'</div>\n               <div class="review-stars">\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <span></span>\n               </div>\n               <div class="review-text">'+a.description+"</div>\n            </div>"),4<d&&$(".review#"+s+c).find(".review-stars > span").append('<i class="icon-star-full"></i>')))}),setTimeout(function(){reviewSlider()},1e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
