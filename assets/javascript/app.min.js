var isHomePage=$("body.homepage");isHomePage&&($.fn.isInViewport=function(){var e=$(this);if("undefined"!==e&&e.length){var t=$(this).offset().top,a=t+$(this).outerHeight(),o=$(window).scrollTop(),n=o+$(window).height();return o<a&&t<n}});var map,aboutAnimationHasRan=!1,aboutUsAnimationHasRan=!1,valuesAnimationHasRan=!1,headerAnimationHasRan=!1,brandsAnimationHasRan=!1,headerElem=$("#header"),aboutElem=$("#about"),brandsElem=$(".brandlist"),aboutUsElem=$("#aboutUs"),valuesElem=$("#values");function fireAnimations(){if(isHomePage&&0<headerElem.length&&headerElem.isInViewport()){var e=$("#header .logo"),t=$("#header h1"),a=$("#header .icon-play");headerAnimationHasRan||(TweenMax.fromTo(e,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"}}),TweenMax.fromTo(t,.5,{css:{y:"-30",opacity:0}},{css:{y:"0",opacity:"1"},delay:.3}),TweenMax.fromTo(a,.5,{opacity:0,scale:1.5,ease:Bounce.ease},{opacity:1,scale:1}),headerAnimationHasRan=!0)}if(isHomePage&&0<headerElem.length&&aboutElem.isInViewport()){var o=$("#about > .left-container"),n=$("#about > .right-container");aboutAnimationHasRan||(TweenMax.fromTo(o,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),TweenMax.fromTo(n,1,{css:{x:"100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1}),aboutAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var i=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(i,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}if(isHomePage&&0<brandsElem.length&&brandsElem.isInViewport()){var s=brandsElem.find("li");5<$(".brandlist li").length?$(".brandlist").slick({slidesToShow:5,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!1,swip:!0,responsive:[{breakpoint:600,settings:{slidesToShow:3,slidesToScroll:1}}]}):brandsAnimationHasRan||(TweenMax.staggerFromTo(s,.5,{css:{x:"-40",opacity:0}},{css:{x:"0",opacity:"1"},delay:.2},.2),brandsAnimationHasRan=!0)}if(isHomePage&&0<valuesElem.length&&valuesElem.isInViewport()){var d=$(".valueItem");valuesAnimationHasRan||($.each(d,function(){var e=$(this).find("strong"),t=(-1*Math.random()+1.5).toFixed(2);TweenMax.fromTo(e,1,{css:{x:"-10",opacity:0}},{css:{x:"0",opacity:"1"},delay:t})}),valuesAnimationHasRan=!0)}if(isHomePage&&0<aboutUsElem.length&&aboutUsElem.isInViewport()){var c=$(".employee-wrapper");aboutUsAnimationHasRan||(TweenMax.staggerFromTo(c,1,{css:{x:"-100",opacity:0}},{css:{x:"0",opacity:"1"},delay:1},.5),aboutUsAnimationHasRan=!0)}}function getDirection(e,t,a){Math.abs(t-e)<=5||a(t<e?"down":"up",e)}function handleMethodScroll(e){var t="method",a=".fadeIn",o=".method-item",n=".intro",i=".design",s=".tuning",d=".construction";$(a).removeClass(t),$(o).removeClass(t),1===e?($(a+n).addClass(t),$(o+n).addClass(t)):2===e?($(o+n).addClass(t),$(a+i).addClass(t),$(o+i).addClass(t)):3===e?($(o+n).addClass(t),$(o+i).addClass(t),$(a+s).addClass(t),$(o+s).addClass(t)):4===e?($(o+n).addClass(t),$(o+i).addClass(t),$(o+s).addClass(t),$(a+d).addClass(t),$(o+d).addClass(t)):5===e&&($(o+n).addClass(t),$(o+i).addClass(t),$(o+s).addClass(t),$(o+d).addClass(t),$(a+".eval").addClass(t),$(o+".eval").addClass(t))}function setCookie(e,t,a){var o="";if(a){var n=new Date;n.setTime(n.getTime()+24*a*60*60*1e3),o="; expires="+n.toUTCString()}document.cookie=e+"="+(t||"")+o+"; path=/"}function getCookie(e){for(var t=e+"=",a=document.cookie.split(";"),o=0;o<a.length;o++){for(var n=a[o];" "==n.charAt(0);)n=n.substring(1,n.length);if(0==n.indexOf(t))return n.substring(t.length,n.length)}return null}function eraseCookie(e){document.cookie=e+"=; Max-Age=-99999999;"}function chooseCookie(){var e=navigator.language||navigator.userLanguage,t=getCookie("lang"),a=getParameterByName("lang");null==t||""===t?(e.match(/de/g)?setCookie("lang","de",7):e.match(/en/g)?setCookie("lang","en",7):(e.match(/nl/g),setCookie("lang","nl",7)),setTimeout(function(){window.location.reload()},20)):$("body").addClass(t),void 0!==a&&"de"===a?setCookie("lang","de",7):void 0!==a&&"en"===a?setCookie("lang","en",7):void 0!==a&&"nl"===a&&setCookie("lang","nl",7),setTimeout(function(){$("#nav .active-loc").html(getCookie("lang"))},200)}function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var a=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null}function fixNav(e){var t=$("#nav");500<=e?t.addClass("fixed"):t.removeClass("fixed")}function trackLocation(e){var t=$(".slick-active .after"),a=$(".slick-active .before"),o=a[0].getBoundingClientRect(),n=a.outerWidth(),i=(e.pageX-o.left)/n*100;i<=100&&t.css("width",i+"%")}function googleMapsInit(){var e=new google.maps.Geocoder,t=$(".contact-details-map").html();void 0!==t&&e.geocode({address:t},function(e,t){if(t==google.maps.GeocoderStatus.OK){var a=e[0].geometry.location.lat(),o=e[0].geometry.location.lng(),n=new google.maps.LatLng(a,o),i={zoom:15,center:n,scrollwheel:!1,navigationControl:!1,mapTypeControl:!1,scaleControl:!1,disableDefaultUI:!0,styles:[{featureType:"landscape",stylers:[{visibility:"simplified"},{color:"#2b3f57"},{weight:.1}]},{featureType:"administrative",stylers:[{visibility:"on"},{hue:"#ff0000"},{weight:.4},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{weight:1.3},{color:"#FFFFFF"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:3}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:1.1}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#f55f77"},{weight:.4}]},{},{featureType:"road.highway",elementType:"labels",stylers:[{weight:.8},{color:"#ffffff"},{visibility:"on"}]},{featureType:"road.local",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"labels",stylers:[{color:"#ffffff"},{weight:.7}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{color:"#6c5b7b"}]},{featureType:"water",stylers:[{color:"#f3b191"}]},{featureType:"transit.line",stylers:[{visibility:"on"}]}]};map=new google.maps.Map(document.getElementById("map-canvas"),i);var s=new google.maps.Marker({position:n,icon:"//expo-mate.github.io/assets/images/marker.png",map:map}),d=new google.maps.InfoWindow({content:$(".contact-details-map").html()});450<$(window).width()&&map.panBy(200,-150),google.maps.event.addListener(s,"click",function(){d.open(map,s)})}})}function showModal(e,t){if(e.preventDefault(),!$("body").hasClass("open")){var o=t.data("project");void 0!==o&&($(".modal").data("project",o),$("body").addClass("open"),$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.projects,i=[],a=t[o].images;$(".slider").empty(),a&&0<a.length&&$.each(a,function(e,t){var a=t.src,o=!1,n=a.split(".").pop().toLowerCase();"jpg"!==n&&"png"!==n||(o=!0),t&&o?i.push('<div class="project-image">\n<img src="'+a+'" alt="'+t.header+'" />\n</div>'):i.push('<div class="project-image youtube">\n<div class="youtube-video-embed embed-responsive embed-responsive-16by9" id="video">\n<span>\n    <iframe\n        id="player"\n        class="youtube-video embed-responsive-item"\n        frameborder="0"\n        allowfullscreen="1"\n        allow="autoplay; encrypted-media"\n        title="YouTube video player"\n         src="https://www.youtube.com/embed/'+a+'?autoplay=0&rel=0&fs=1&enablejsapi=1">\n    </iframe>\n  </span>\n  </div>\n </div>')}),sliderInit(i)}}))}}function closeModal(e,t){$("body").removeClass("open");var a=t.parent().data("project");if(t.hasClass("modal"))a=t.data("project");$(".slider").slick("unslick"),$(".slider").empty(),document.getElementById("project-"+a).scrollIntoView(!0)}function sliderInit(e){$(".slider").append(e),setTimeout(function(){$(".slider").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,arrows:!0,lazyLoad:"onDemand",swip:!0})},100)}$(function(){isHomePage&&(fireAnimations(),$(window).on("resize scroll",function(){fireAnimations()}))}),$(function(){var a=0,o=!1,e=$("#header"),t=$("body.homepage"),n=$(window).height(),i=$(window).width(),s=950,d=0,c=$(".method-item"),l=$(".fadeIn"),r=-1<window.orientation&&screen.width<=640,m=null!=navigator.userAgent.match(/iPad/i),h=$("body").find("[data-content='content-method-hoverLabel']");if($(window).on("mousewheel DOMMouseScroll touchmove",function(){o=!0}),$(window).on("resize",function(){n=$(this).height(),i=$(this).width(),s=$(window).height()/100*20}),void 0!==t&&0<t.length){var p=$("#method"),f=$(".method-scroll-wrapper"),u=p.height(),v=p.offset().top,g=$("#case-studies"),w=~~g.offset().top,y=$("#about"),b=$("#preabout").offset().top,C="active",k="show";(r||m)&&(g.addClass(k),l.addClass(k),y.addClass(k)),$(c).on("mouseenter",function(){var e=$(this).attr("data-item");$(this).addClass("active"),$(".diagram-logo").addClass("hidden"),0<h.length&&h.addClass("hidden"),$(".method-desc."+e).addClass("active"),$("#diagram").addClass(e)}).on("mouseleave",function(){var e=$(this).attr("data-item");$(this).removeClass("active"),$(".diagram-logo").removeClass("hidden"),0<h.length&&h.removeClass("hidden"),$(".method-desc."+e).removeClass("active"),$("#diagram").removeClass(e)}),$(".close-btn").on("click",function(){$("body").toggleClass("isPlaying"),e.removeClass("play"),e.find(".video-container").removeClass("play"),$(".youtube-video-embed iframe").attr("id","").attr("src","")}),$(".play-video-wrapper").on("click",function(){$("body").toggleClass("isPlaying"),e.addClass("play"),e.find(".video-container").addClass("play");$.ajax({url:"./assets/json/content.json",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.header.content;$(".youtube-video-embed iframe").attr("id",t.youtubeURL).attr("src","https://www.youtube.com/embed/"+t.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1")}})}),$(window).on("scroll",function(){d=~~$(this).scrollTop(),n<1100&&(s=1050),c.removeClass(C),getDirection(d,a,function(e,t){(a=t)&&o&&!r&&1200<i&&!m&&("down"===e?(v<=t&&(l.removeClass(k),f.addClass(k),handleMethodScroll(5)),v+u<=t&&(g.addClass(k),l.removeClass(k),f.removeClass(k)),b<=t&&y.addClass(k)):(g.addClass(k),l.addClass(k),y.addClass(k)),"up"===e&&(t<w-s&&(f.addClass(k),handleMethodScroll(5)),t<=v-100&&l.removeClass(C)))})})}}),chooseCookie(),$(function(){var o=!1,n=$("#nav ul"),i=$(".hamburger"),e=$(window).scrollTop();$("#nav li a").on("click",function(e){e.preventDefault();var t=$(this).attr("href");if(-1!==t.indexOf("."))window.location.href=t;else if($(this).hasClass("loc"))eraseCookie("lang"),setCookie("lang",t,7),setTimeout(function(){window.location.reload()},20);else if(-1!==t.indexOf("#")){var a=$(t).offset().top;"#footer"===t?a=$("#contact-info").offset().top:"#comparison"===t&&(a=$("#comparison-wrapper").offset().top),$("html, body").animate({scrollTop:a})}o&&(i.removeClass("is-active"),n.removeClass("open"),o=!1)}),i.click(function(){$(this).toggleClass("is-active"),n.toggleClass("open"),o=!0}),$(window).on("scroll",function(){fixNav(~~$(this).scrollTop())}),$(".contact-btn").on("click",function(){var e=$("footer").offset().top;$("html, body").animate({scrollTop:e})}),fixNav(e)}),$(function(){if($("body").hasClass("homepage")){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.homepage.content.comparison,i=$("#comparison"),a=t.comparisons||"";$.each(a,function(e,t){i.append('<div class="item"><img data-content="content-comparison-before" src="'+t.before+'" class="before" alt>\n<div data-content="content-comparison-after" class="after" style="background-image: url('+t.after+')"></div></div>')}),setTimeout(function(){i.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,nextArrow:".icon-arrow-right",prevArrow:".icon-arrow-left",swipeToSlide:!1}),i.on("setPosition",function(e,t,a,o){var n=i.find(".slick-active");n&&(n.on("mousemove",trackLocation),n.on("touchstart",trackLocation),n.on("touchmove",trackLocation))})},200)}})}}),$(function(){var w=$("body");$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),o=t[a],n=o.nav.labels,i=o.pages.homepage,s=i.header.content,d=i.content.intro,c=d.images,l=i.content.about,r=i.content.aboutUs,m=i.content.values,h=i.content.comparison,p=i.content.method,f=i.content.model,u=i.content.projects,v=i.footer;if(o&&w.removeClass("loading"),void 0===a&&chooseCookie(),n){var g=$("#nav > ul > li ");g.find('a[href="#preabout"]').html(n.about),g.find('a[href="index.html#preabout"]').html(n.about),g.find('a[href="#method"]').html(n.method),g.find('a[href="index.html#method"]').html(n.method),g.find('a[href="#values"]').html(n.values),g.find('a[href="index.html#values"]').html(n.values),g.find('a[href="#aboutUs"]').html(n.aboutUs),g.find('a[href="index.html#aboutUs"]').html(n.aboutUs),g.find('a[href="projects.html"]').html(n.projects),g.find('a[href="#footer"]').html(n.contact),g.find('a[href="#footer"]').html(n.contact),g.find('a[href="#mission"]').html(n.mission),g.find('a[href="index.html#mission"]').html(n.mission),g.find('a[href="#model"]').html(n.model),g.find('a[href="index.html#model"]').html(n.model),g.find('a[href="#foundation"]').html(n.foundation),g.find('a[href="index.html#foundation"]').html(n.foundation),g.find('a[href="#comparison"]').html(n.comparison),g.find('a[href="index.html#comparison"]').html(n.comparison)}s&&($(".background-video").css({backgroundImage:s.backgroundImageSrc}),$(".youtube-video-embed iframe").attr("id",s.youtubeURL).attr("src","https://www.youtube.com/embed/"+s.youtubeURL+"?autoplay=0&rel=0&fs=1&enablejsapi=1"),$("video source#mp4").attr("src",s.backgroundVideoMp4Src),$("video source#webm").attr("src",s.backgroundVideoWebMSrc),w.find("[data-content='header-content-title']").html(s.header)),d&&(w.find("[data-content='content-intro-title']").html(d.header),w.find("[data-content='content-intro-desc']").html(d.description),0<$(".brandlist").length&&$.each(c,function(e,t){t.src&&w.find(".brandlist").append('<li><img src="'+t.src+'" alt="'+t.alt+'" /></li>')})),l&&(w.find("[data-content='content-about-row1-title']").html(l.row1.header),w.find("[data-content='content-about-row1-image']").css({backgroundImage:l.row1.image.src}),w.find("[data-content='content-about-row1-desc']").html(l.row1.description),w.find("[data-content='content-about-row2-title']").html(l.row2.header),w.find("[data-content='content-about-row2-image']").css({backgroundImage:l.row2.image.src}),w.find("[data-content='content-about-row2-desc']").html(l.row2.description)),r&&(w.find("[data-content='content-aboutUs-title']").html(r.header),w.find("[data-content='content-aboutUs-description']").html(r.description),w.find("[data-content='content-employee-niek-image']").attr("src",r.employees.niek.image.src).attr("alt",r.employees.niek.image.alt),w.find("[data-content='content-employee-niek-title']").html(r.employees.niek.header),w.find("[data-content='content-employee-niek-desc']").html(r.employees.niek.description),w.find("[data-content='content-employee-jan-image']").attr("src",r.employees.jan.image.src).attr("alt",r.employees.jan.image.alt),w.find("[data-content='content-employee-jan-title']").html(r.employees.jan.header),w.find("[data-content='content-employee-jan-desc']").html(r.employees.jan.description)),m&&(w.find("[data-content='content-values-image']").css({backgroundImage:m.image.src}),w.find("[data-content='content-values-title']").html(m.header),w.find("[data-content='content-values-desc']").html(m.description),w.find("[data-content='content-value1']").html(m.values.value1),w.find("[data-content='content-value2']").html(m.values.value2),w.find("[data-content='content-value3']").html(m.values.value3),w.find("[data-content='content-value4']").html(m.values.value4),w.find("[data-content='content-value5']").html(m.values.value5),w.find("[data-content='content-value6']").html(m.values.value6)),p&&(w.find("[data-content='content-method-title']").html(p.header),w.find("[data-content='content-method-desc']").html(p.description),w.find("[data-content='content-method-hoverLabel']").html(p.hoverLabel),w.find("[data-content='content-method-intro-title']").html(p.methods.intro.header),w.find("[data-content='content-method-intro-desc']").html(p.methods.intro.description),w.find("[data-content='content-method-design-title']").html(p.methods.design.header),w.find("[data-content='content-method-design-desc']").html(p.methods.design.description),w.find("[data-content='content-method-tuning-title']").html(p.methods.tuning.header),w.find("[data-content='content-method-tuning-desc']").html(p.methods.tuning.description),w.find("[data-content='content-method-construction-title']").html(p.methods.construction.header),w.find("[data-content='content-method-construction-desc']").html(p.methods.construction.description),w.find("[data-content='content-method-eval-title']").html(p.methods.eval.header),w.find("[data-content='content-method-eval-desc']").html(p.methods.eval.description)),f&&(w.find("[data-content='content-model-title']").html(f.header),w.find("[data-content='content-model-image']").css({backgroundImage:f.image.src}),w.find("[data-content='content-model-desc']").html(f.description)),u&&(w.find("[data-content='content-projects-title']").html(u.header),w.find("[data-content='content-projects-desc']").html(u.description),w.find("[data-content='content-projects-button']").html(u.button.label),w.find("[data-content='content-project1-image']").attr("src",u.project1.image.src).attr("alt",u.project1.image.alt),w.find("[data-content='content-project1-title']").html(u.project1.header),w.find("[data-content='content-project1-btn']").html(u.project1.button),w.find("[data-content='content-project2-image']").attr("src",u.project2.image.src).attr("alt",u.project2.image.alt),w.find("[data-content='content-project2-title']").html(u.project2.header),w.find("[data-content='content-project2-btn']").html(u.project2.button)),h&&(w.find("[data-content='content-projects-comparison-title']").html(h.header),w.find("[data-content='content-projects-comparison-desc']").html(h.description)),v&&(w.find("[data-content='footer-testimonials-title']").html(v.testimonials.header),w.find("[data-content='footer-contacts-header']").html(v.contacts.header),w.find("[data-content='footer-contacts-jan-title']").html(v.contacts.jan.header),w.find("[data-content='footer-contacts-jan-email']").attr("href",v.contacts.jan.links.email.src).html(v.contacts.jan.links.email.header),w.find("[data-content='footer-contacts-linkedin-jan']").attr("href",v.contacts.jan.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-jan-title']").html(v.contacts.jan.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-jan-phone']").attr("href",v.contacts.jan.phone),w.find("[data-content='footer-contacts-niek-title']").html(v.contacts.niek.header),w.find("[data-content='footer-contacts-niek-email']").attr("href",v.contacts.niek.links.email.src).html(v.contacts.niek.links.email.header),w.find("[data-content='footer-contacts-linkedin-niek']").attr("href",v.contacts.niek.links.linkedin.src),w.find("[data-content='footer-contacts-linkedin-niek-title']").html(v.contacts.niek.links.linkedin.header+" "),w.find("[data-content='footer-contacts-call-niek-phone']").attr("href",v.contacts.niek.phone),w.find("[data-content='footer-contacts-phone-header']").html(v.phone.header),w.find("[data-content='footer-contacts-visit-header']").html(v.visit.header),w.find("[data-content='footer-contacts-visit-desc']").html(v.visit.description),w.find("[data-content='footer-copyright-desc']").html(v.copyright.description))}})}),google.maps.event.addDomListener(window,"load",googleMapsInit),$(function(){if($("body").hasClass("projects")){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e)))),a=getCookie("lang"),r=t[a].pages.homepage.content.projects.reviewLink||"",o=t[a].pages.projects,m=$("#projects .projects-wrapper");void 0===a&&chooseCookie(),$.each(o,function(e,t){var a=t.images[0].src||"",o=parseInt(e),n=t.review,i=n.author||"",s=n.description||"",d=n.date||"",c=i.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),l=n.stars||"";m.append('<div class="project" id="project-'+o+'">\n\t<div class="project-wrapper">\n\t\t<div class="project-image">\n       <div data-project="'+o+'" class="project-overview-image" style="background-image: url('+a+')"></div>\n\t\t</div>\n\t\t<div class="project-desc-wrapper">\n\t\t\t<div class="project-desc-content">\n\t\t\t\t<div class="project-header">\n\t\t\t\t\t<h2 class="project-title" data-project="'+o+'">'+t.header+'</h2>\n\t\t\t\t\t<div class="project-sub-title">'+t.subTitle+'</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="project-desc"> \n\t\t\t\t   <span>'+t.description+'</span> \n\t\t\t\t   <a class="read-review" data-count="'+o+'">'+r+" "+t.header+'</a> \n\t\t\t   </div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class="project-review">\n\t\t<div class="review-close"></div> \n\t\t<div class="review" id="'+c+'">\n\t\t\t<div class="review-author">'+i+'</div>\n\t\t\t<div class="review-date">'+d+'</div>\n           <div class="review-stars">\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <i class="icon-star-full"></i>\n               <span></span>\n           </div>\n\t\t\t<div class="review-text">'+s+"</div>\n\t\t</div>\n\t</div>\n</div>"),4<l&&$("#project-"+o).find(".review-stars > span").append('<i class="icon-star-full"></i>'),void 0!==n&&""!==s&&void 0!==s||$("#project-"+o).find(".read-review").addClass("hidden"),$(".read-review").on("click",function(e){e.preventDefault();var t=$(this).attr("data-count");$("#project-"+t).addClass("show-review").find(".project-review").addClass("show")}),$(".review-close").on("click",function(){$(this).parent().removeClass("show").parent(".project").removeClass("show-review")})})},error:function(e){chooseCookie()}}),$(document).on("click touch",".project-title",function(e){showModal(e,$(this))}),$(document).on("click touch",".project-overview-image",function(e){showModal(e,$(this))}),$(document).on("click touch",".modal-close",function(e){closeModal(e,$(this))}),$(document).on("click touch",".modal",function(e){e.target===this&&closeModal(e,$(this))})}});var testimonial=$("#google-reviews");function reviewSlider(){testimonial.removeClass("hidden"),testimonial.not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,fade:!0,infinite:!0,autoplaySpeed:8e3,arrows:!0,responsive:[{breakpoint:1025,settings:{adaptiveHeight:!0}}]})}$(function(){$.ajax({url:"./assets/json/content.bin",scriptCharset:"utf-8",type:"GET",success:function(e){var t=JSON.parse(decodeURIComponent(escape(window.atob(e))))[getCookie("lang")].pages.projects;$.each(t,function(e,t){var a=t.review,o=a.author||"",n=a.description||"",i=a.date||"",s=o.replace(/[^A-Z0-9]+/gi,"-").toLowerCase(),d=a.stars||"",c=parseInt(e)+1;(a&&void 0!==a&&""!==n&&void 0!==n||""!==d&&void 0!==d)&&(testimonial.addClass("hidden"),0<testimonial.length&&(testimonial.append('<div class="review" id="'+s+c+'">\n               <div class="review-author">'+o+'</div>\n               <div class="review-date">'+i+'</div>\n               <div class="review-stars">\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <i class="icon-star-full"></i>\n                   <span></span>\n               </div>\n               <div class="review-text">'+a.description+"</div>\n            </div>"),4<d&&$(".review#"+s+c).find(".review-stars > span").append('<i class="icon-star-full"></i>')))}),setTimeout(function(){reviewSlider()},1e3)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbnMuanMiLCJtYXBzSW5pdC5qcyIsImJvb3RzdHJhcC5qcyIsImNvb2tpZXMuanMiLCJoZWFkZXIuanMiLCJpbWFnZUNvbXBhcmlzb24uanMiLCJwcm9qZWN0LWJvb3RzdHJhcC5qcyIsImxvY2FsZS5qcyIsInJldmlld3MuanMiXSwibmFtZXMiOlsiaXNIb21lUGFnZSIsIiQiLCJmbiIsImlzSW5WaWV3cG9ydCIsInRoYXQiLCJ0aGlzIiwibGVuZ3RoIiwiZWxlbWVudFRvcCIsIm9mZnNldCIsInRvcCIsImVsZW1lbnRCb3R0b20iLCJvdXRlckhlaWdodCIsInZpZXdwb3J0VG9wIiwid2luZG93Iiwic2Nyb2xsVG9wIiwidmlld3BvcnRCb3R0b20iLCJoZWlnaHQiLCJtYXAiLCJhYm91dEFuaW1hdGlvbkhhc1JhbiIsImFib3V0VXNBbmltYXRpb25IYXNSYW4iLCJ2YWx1ZXNBbmltYXRpb25IYXNSYW4iLCJoZWFkZXJBbmltYXRpb25IYXNSYW4iLCJicmFuZHNBbmltYXRpb25IYXNSYW4iLCJoZWFkZXJFbGVtIiwiYWJvdXRFbGVtIiwiYnJhbmRzRWxlbSIsImFib3V0VXNFbGVtIiwidmFsdWVzRWxlbSIsImZpcmVBbmltYXRpb25zIiwibG9nbyIsImNhcHRpb24iLCJwbGF5QnRuIiwiVHdlZW5NYXgiLCJmcm9tVG8iLCJjc3MiLCJ5Iiwib3BhY2l0eSIsImRlbGF5Iiwic2NhbGUiLCJlYXNlIiwiQm91bmNlIiwibGVmdFNpZGVFbGVtIiwicmlnaHRTaWRlRWxlbSIsIngiLCJlbXBsbyIsInN0YWdnZXJGcm9tVG8iLCJicmFuZCIsImZpbmQiLCJzbGljayIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwiYXV0b3BsYXkiLCJhdXRvcGxheVNwZWVkIiwiYXJyb3dzIiwic3dpcCIsInJlc3BvbnNpdmUiLCJicmVha3BvaW50Iiwic2V0dGluZ3MiLCJ2YWx1ZUl0ZW0iLCJlYWNoIiwidGV4dEVsZW0iLCJyYW5kb21OdW0iLCJNYXRoIiwicmFuZG9tIiwidG9GaXhlZCIsImVtcGxveWVlIiwiZ2V0RGlyZWN0aW9uIiwic2Nyb2xsIiwibGFzdFNjcm9sbFRvcCIsImNhbGxiYWNrIiwiYWJzIiwiaGFuZGxlTWV0aG9kU2Nyb2xsIiwic3RlcCIsInRvZ2dsZUNsYXNzTmFtZSIsImZhZGVJbkVsZW1DbGFzcyIsIm1ldGhvZEVsZW0iLCJpbnRyb0VsZW1DbGFzcyIsImRlc2lnbkVsZW1DbGFzcyIsInR1bmluZ0VsZW1DbGFzcyIsImNvbnN0cnVjdGlvbkVsZW1DbGFzcyIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzZXRDb29raWUiLCJuYW1lIiwidmFsdWUiLCJkYXlzIiwiZXhwaXJlcyIsImRhdGUiLCJEYXRlIiwic2V0VGltZSIsImdldFRpbWUiLCJ0b1VUQ1N0cmluZyIsImRvY3VtZW50IiwiY29va2llIiwiZ2V0Q29va2llIiwibmFtZUVRIiwiY2EiLCJzcGxpdCIsImkiLCJjIiwiY2hhckF0Iiwic3Vic3RyaW5nIiwiaW5kZXhPZiIsImVyYXNlQ29va2llIiwiY2hvb3NlQ29va2llIiwidXNlckxhbmciLCJuYXZpZ2F0b3IiLCJsYW5ndWFnZSIsInVzZXJMYW5ndWFnZSIsImFjdGl2ZUNvb2tpZSIsInF1ZXJ5UGFyYW0iLCJnZXRQYXJhbWV0ZXJCeU5hbWUiLCJtYXRjaCIsInNldFRpbWVvdXQiLCJsb2NhdGlvbiIsInJlbG9hZCIsInVuZGVmaW5lZCIsImh0bWwiLCJ1cmwiLCJocmVmIiwicmVwbGFjZSIsInJlc3VsdHMiLCJSZWdFeHAiLCJleGVjIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZml4TmF2IiwibmF2IiwidHJhY2tMb2NhdGlvbiIsImUiLCJjb2xvcmJveCIsImZpbGxlckltYWdlIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImZpbGxlckltYWdlT3ciLCJvdXRlcldpZHRoIiwicG9zaXRpb24iLCJwYWdlWCIsImxlZnQiLCJnb29nbGVNYXBzSW5pdCIsImdlb2NvZGVyIiwiZ29vZ2xlIiwibWFwcyIsIkdlb2NvZGVyIiwiYWRkcmVzcyIsImdlb2NvZGUiLCJzdGF0dXMiLCJHZW9jb2RlclN0YXR1cyIsIk9LIiwibGF0aXR1ZGUiLCJnZW9tZXRyeSIsImxhdCIsImxvbmdpdHVkZSIsImxuZyIsIm15TGF0bG5nIiwiTGF0TG5nIiwibWFwT3B0aW9ucyIsInpvb20iLCJjZW50ZXIiLCJzY3JvbGx3aGVlbCIsIm5hdmlnYXRpb25Db250cm9sIiwibWFwVHlwZUNvbnRyb2wiLCJzY2FsZUNvbnRyb2wiLCJkaXNhYmxlRGVmYXVsdFVJIiwic3R5bGVzIiwiZmVhdHVyZVR5cGUiLCJzdHlsZXJzIiwidmlzaWJpbGl0eSIsImNvbG9yIiwid2VpZ2h0IiwiaHVlIiwiZWxlbWVudFR5cGUiLCJNYXAiLCJnZXRFbGVtZW50QnlJZCIsIm1hcmtlciIsIk1hcmtlciIsImljb24iLCJpbmZvd2luZG93IiwiSW5mb1dpbmRvdyIsImNvbnRlbnQiLCJ3aWR0aCIsInBhbkJ5IiwiZXZlbnQiLCJhZGRMaXN0ZW5lciIsIm9wZW4iLCJzaG93TW9kYWwiLCJwcmV2ZW50RGVmYXVsdCIsImhhc0NsYXNzIiwicHJvamVjdElEIiwiZGF0YSIsImFqYXgiLCJzY3JpcHRDaGFyc2V0IiwidHlwZSIsInN1Y2Nlc3MiLCJwcm9qZWN0RGV0YWlsIiwiSlNPTiIsInBhcnNlIiwiZXNjYXBlIiwiYXRvYiIsInBhZ2VzIiwicHJvamVjdHMiLCJzbGlkZXJFbGVtcyIsImltYWdlQ29udGVudCIsImltYWdlcyIsImVtcHR5IiwiaW5kZXgiLCJpdGVtIiwibWVkaWFTcmMiLCJzcmMiLCJpc0ltYWdlIiwiZmlsZVR5cGUiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsInB1c2giLCJoZWFkZXIiLCJzbGlkZXJJbml0IiwiY2xvc2VNb2RhbCIsInBhcmVudElEIiwicGFyZW50Iiwic2Nyb2xsSW50b1ZpZXciLCJhcHBlbmQiLCJsYXp5TG9hZCIsIm9uIiwiaGFzU2Nyb2xsZWQiLCJ2aWV3UG9ydEhlaWdodCIsInZpZXdQb3J0V2lkdGgiLCJhbmltYXRpb25JbmNyZW1lbnRzIiwibWV0aG9kSXRlbSIsIm1ldGhvZENvbnRlbnQiLCJpc01vYmlsZSIsIm9yaWVudGF0aW9uIiwic2NyZWVuIiwiaXNfaVBhZCIsInVzZXJBZ2VudCIsInBsYWNlaG9sZGVyIiwibWV0aG9kQ29udGFpbmVyIiwibWV0aG9kU2Nyb2xsQ29udGFpbmVyIiwibWV0aG9kQ29udGFpbmVySGVpZ2h0IiwibWV0aG9kQ29udGFpbmVyT2Zmc2V0IiwiQ2FzZVN0dWR5Q29udGFpbmVyIiwiQ2FzZVN0dWR5Q29udGFpbmVyT2Zmc2V0IiwiYWJvdXRDb250YWluZXIiLCJwcmVBYm91dENvbnRhaW5lck9mZnNldCIsInZpc2libGVDbGFzc05hbWUiLCJhdHRyIiwidG9nZ2xlQ2xhc3MiLCJob21lcGFnZSIsInlvdXR1YmVVUkwiLCJkaXJlY3Rpb24iLCJuYXZJc09wZW4iLCJtb2JpbGVOYXYiLCJoYW1idXJnZXJFbGVtIiwidmlld1BvcnRPZmZzZXQiLCJuYXZMaW5rIiwibGlua1BvcyIsImFuaW1hdGUiLCJjbGljayIsImZvb3Rlck9mZnNldCIsImNvbXBhcmlzb24iLCJjb21wYXJpc29uV3JhcHBlciIsImNvbXBhcmlzb25JdGVtIiwiY29tcGFyaXNvbnMiLCJiZWZvcmUiLCJhZnRlciIsIm5vdCIsIm5leHRBcnJvdyIsInByZXZBcnJvdyIsInN3aXBlVG9TbGlkZSIsImN1cnJlbnRTbGlkZSIsIm5leHRTbGlkZSIsImlua2JveCIsIiRib2R5IiwiYWN0dWFsIiwibG9jIiwibG9jRGF0YSIsImxhYmVscyIsImludHJvIiwiYnJhbmRzIiwiYWJvdXQiLCJhYm91dFVzIiwidmFsdWVzIiwibWV0aG9kIiwibW9kZWwiLCJmb290ZXIiLCJuYXZJdGVtIiwiY29udGFjdCIsIm1pc3Npb24iLCJmb3VuZGF0aW9uIiwiYmFja2dyb3VuZEltYWdlIiwiYmFja2dyb3VuZEltYWdlU3JjIiwiYmFja2dyb3VuZFZpZGVvTXA0U3JjIiwiYmFja2dyb3VuZFZpZGVvV2ViTVNyYyIsImRlc2NyaXB0aW9uIiwiYWx0Iiwicm93MSIsImltYWdlIiwicm93MiIsImVtcGxveWVlcyIsIm5pZWsiLCJqYW4iLCJ2YWx1ZTEiLCJ2YWx1ZTIiLCJ2YWx1ZTMiLCJ2YWx1ZTQiLCJ2YWx1ZTUiLCJ2YWx1ZTYiLCJob3ZlckxhYmVsIiwibWV0aG9kcyIsImRlc2lnbiIsInR1bmluZyIsImNvbnN0cnVjdGlvbiIsImV2YWwiLCJidXR0b24iLCJsYWJlbCIsInByb2plY3QxIiwicHJvamVjdDIiLCJ0ZXN0aW1vbmlhbHMiLCJjb250YWN0cyIsImxpbmtzIiwiZW1haWwiLCJsaW5rZWRpbiIsInBob25lIiwidmlzaXQiLCJjb3B5cmlnaHQiLCJhZGREb21MaXN0ZW5lciIsInJldmlld0xpbmsiLCJzZWN0aW9uIiwib3ZlcnZpZXdJbWciLCJjb3VudCIsInBhcnNlSW50IiwicmV2aWV3IiwiYXV0aG9yIiwiZGVzYyIsInJldmlld0RhdGUiLCJpZGVudGlmaWVyIiwic3RhckNvdW50Iiwic3RhcnMiLCJzdWJUaXRsZSIsImVycm9yIiwiZXJyIiwidGFyZ2V0IiwidGVzdGltb25pYWwiLCJyZXZpZXdTbGlkZXIiLCJmYWRlIiwiaW5maW5pdGUiLCJhZGFwdGl2ZUhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQUEsV0FBQUMsRUFBQSxpQkFDQUQsYUFDQUMsRUFBQUMsR0FBQUMsYUFBQSxXQUNBLElBQUFDLEVBQUFILEVBQUFJLE1BQ0EsR0FBQSxjQUFBRCxHQUFBQSxFQUFBRSxPQUFBLENBQ0EsSUFBQUMsRUFBQU4sRUFBQUksTUFBQUcsU0FBQUMsSUFDQUMsRUFBQUgsRUFBQU4sRUFBQUksTUFBQU0sY0FDQUMsRUFBQVgsRUFBQVksUUFBQUMsWUFDQUMsRUFBQUgsRUFBQVgsRUFBQVksUUFBQUcsU0FDQSxPQUFBSixFQUFBRixHQUFBSCxFQUFBUSxLQUtBLElDWkFFLElEWUFDLHNCQUFBLEVBQ0FDLHdCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLHVCQUFBLEVBQ0FDLFdBQUF0QixFQUFBLFdBQ0F1QixVQUFBdkIs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PSAkKCdib2R5LmhvbWVwYWdlJyk7XHJcbmlmIChpc0hvbWVQYWdlKXtcclxuICAgICQuZm4uaXNJblZpZXdwb3J0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIHRoYXQgPSAkKHRoaXMpO1xyXG4gICAgICAgIGlmICh0aGF0ICE9PSAndW5kZWZpbmVkJyAmJiB0aGF0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICB2YXIgZWxlbWVudFRvcCA9ICQodGhpcykub2Zmc2V0KCkudG9wO1xyXG4gICAgICAgICAgICB2YXIgZWxlbWVudEJvdHRvbSA9IGVsZW1lbnRUb3AgKyAkKHRoaXMpLm91dGVySGVpZ2h0KCk7XHJcbiAgICAgICAgICAgIHZhciB2aWV3cG9ydFRvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuICAgICAgICAgICAgdmFyIHZpZXdwb3J0Qm90dG9tID0gdmlld3BvcnRUb3AgKyAkKHdpbmRvdykuaGVpZ2h0KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50Qm90dG9tID4gdmlld3BvcnRUb3AgJiYgZWxlbWVudFRvcCA8IHZpZXdwb3J0Qm90dG9tO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuXHJcbnZhciBhYm91dEFuaW1hdGlvbkhhc1JhbiA9IGZhbHNlO1xyXG52YXIgYWJvdXRVc0FuaW1hdGlvbkhhc1JhbiA9IGZhbHNlO1xyXG52YXIgdmFsdWVzQW5pbWF0aW9uSGFzUmFuID0gZmFsc2U7XHJcbnZhciBoZWFkZXJBbmltYXRpb25IYXNSYW4gPSBmYWxzZTtcclxudmFyIGJyYW5kc0FuaW1hdGlvbkhhc1JhbiA9IGZhbHNlO1xyXG52YXIgaGVhZGVyRWxlbSA9ICQoJyNoZWFkZXInKTtcclxudmFyIGFib3V0RWxlbSA9ICQoJyNhYm91dCcpO1xyXG52YXIgYnJhbmRzRWxlbSA9ICQoJy5icmFuZGxpc3QnKTtcclxudmFyIGFib3V0VXNFbGVtID0gJCgnI2Fib3V0VXMnKTtcclxudmFyIHZhbHVlc0VsZW0gPSAkKCcjdmFsdWVzJyk7XHJcblxyXG5cclxuJChmdW5jdGlvbigpe1xyXG4gICAgaWYgKGlzSG9tZVBhZ2Upe1xyXG4gICAgICAgIGZpcmVBbmltYXRpb25zKCk7XHJcbiAgICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUgc2Nyb2xsJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGZpcmVBbmltYXRpb25zKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gZmlyZUFuaW1hdGlvbnMoKXtcclxuICAgIGlmKGlzSG9tZVBhZ2UgJiYgaGVhZGVyRWxlbS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpZihoZWFkZXJFbGVtLmlzSW5WaWV3cG9ydCgpKXtcclxuICAgICAgICAgICAgdmFyIGxvZ28gPSAkKCcjaGVhZGVyIC5sb2dvJyk7XHJcbiAgICAgICAgICAgIHZhciBjYXB0aW9uID0gJCgnI2hlYWRlciBoMScpO1xyXG4gICAgICAgICAgICB2YXIgcGxheUJ0biA9ICQoJyNoZWFkZXIgLmljb24tcGxheScpO1xyXG4gICAgICAgICAgICBpZiAoIWhlYWRlckFuaW1hdGlvbkhhc1Jhbikge1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKGxvZ28sIC41LCB7Y3NzOiB7eTogXCItMzBcIiwgb3BhY2l0eTogMH19LCB7Y3NzOnt5OlwiMFwiLCBvcGFjaXR5OiBcIjFcIn19KTtcclxuICAgICAgICAgICAgICAgIFR3ZWVuTWF4LmZyb21UbyhjYXB0aW9uLCAuNSwge2Nzczoge3k6IFwiLTMwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eTpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogLjN9KTtcclxuICAgICAgICAgICAgICAgIFR3ZWVuTWF4LmZyb21UbyhwbGF5QnRuLCAuNSwge29wYWNpdHk6IDAsIHNjYWxlOjEuNSwgZWFzZTpCb3VuY2UuZWFzZX0sIHtvcGFjaXR5OiAxLCBzY2FsZToxfSk7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJBbmltYXRpb25IYXNSYW4gPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmKGlzSG9tZVBhZ2UgJiYgaGVhZGVyRWxlbS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpZihhYm91dEVsZW0uaXNJblZpZXdwb3J0KCkpe1xyXG4gICAgICAgICAgICB2YXIgbGVmdFNpZGVFbGVtID0gJCgnI2Fib3V0ID4gLmxlZnQtY29udGFpbmVyJyk7XHJcbiAgICAgICAgICAgIHZhciByaWdodFNpZGVFbGVtID0gJCgnI2Fib3V0ID4gLnJpZ2h0LWNvbnRhaW5lcicpO1xyXG4gICAgICAgICAgICBpZiAoIWFib3V0QW5pbWF0aW9uSGFzUmFuKSB7XHJcbiAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8obGVmdFNpZGVFbGVtLCAxLCB7Y3NzOiB7eDogXCItMTAwXCIsIG9wYWNpdHk6IDB9fSwge2Nzczp7eDpcIjBcIiwgb3BhY2l0eTogXCIxXCJ9LCBkZWxheTogMX0pO1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKHJpZ2h0U2lkZUVsZW0sIDEsIHtjc3M6IHt4OiBcIjEwMFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3g6XCIwXCIsIG9wYWNpdHk6IFwiMVwifSwgZGVsYXk6IDF9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBhYm91dEFuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAmJiBhYm91dFVzRWxlbS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpZihhYm91dFVzRWxlbS5pc0luVmlld3BvcnQoKSl7XHJcbiAgICAgICAgICAgIHZhciBlbXBsbyA9ICQoJy5lbXBsb3llZS13cmFwcGVyJyk7XHJcbiAgICAgICAgICAgIGlmICghYWJvdXRVc0FuaW1hdGlvbkhhc1Jhbikge1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguc3RhZ2dlckZyb21UbyhlbXBsbywgMSwge2Nzczoge3g6IFwiLTEwMFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3g6XCIwXCIsIG9wYWNpdHk6IFwiMVwifSwgZGVsYXk6IDF9LCAwLjUpO1xyXG4gICAgICAgICAgICAgICAgYWJvdXRVc0FuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAmJiBicmFuZHNFbGVtLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIGlmKGJyYW5kc0VsZW0uaXNJblZpZXdwb3J0KCkpe1xyXG4gICAgICAgICAgICB2YXIgYnJhbmQgPSBicmFuZHNFbGVtLmZpbmQoJ2xpJyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoJCgnLmJyYW5kbGlzdCBsaScpLmxlbmd0aCA+IDUpIHtcclxuICAgICAgICAgICAgICAgICQoJy5icmFuZGxpc3QnKS5zbGljayh7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TaG93OiA1LFxyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5U3BlZWQ6IDMwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXJyb3dzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBzd2lwOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNpdmU6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrcG9pbnQ6IDYwMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TaG93OiAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmICghYnJhbmRzQW5pbWF0aW9uSGFzUmFuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgVHdlZW5NYXguc3RhZ2dlckZyb21UbyhicmFuZCwgLjUsIHtjc3M6IHt4OiBcIi00MFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3g6XCIwXCIsIG9wYWNpdHk6IFwiMVwifSwgZGVsYXk6IC4yfSwgMC4yKTtcclxuICAgICAgICAgICAgICAgICAgICBicmFuZHNBbmltYXRpb25IYXNSYW4gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmKGlzSG9tZVBhZ2UgJiYgdmFsdWVzRWxlbS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpZih2YWx1ZXNFbGVtLmlzSW5WaWV3cG9ydCgpKXtcclxuICAgICAgICAgICAgdmFyIHZhbHVlSXRlbSA9ICQoJy52YWx1ZUl0ZW0nKTtcclxuICAgICAgICAgICAgaWYgKCF2YWx1ZXNBbmltYXRpb25IYXNSYW4pIHtcclxuXHJcbiAgICAgICAgICAgICAgICAkLmVhY2godmFsdWVJdGVtLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZXh0RWxlbSA9ICQodGhpcykuZmluZCgnc3Ryb25nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmRvbU51bSA9IChNYXRoLnJhbmRvbSgpICogKDAuNSAtIDEuNSkgKyAxLjUpLnRvRml4ZWQoMik7XHJcbiAgICAgICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKHRleHRFbGVtLCAxLCB7Y3NzOiB7eDogXCItMTBcIiwgb3BhY2l0eTogMH19LCB7Y3NzOnt4OlwiMFwiLCBvcGFjaXR5OiBcIjFcIn0sIGRlbGF5OiByYW5kb21OdW19KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhbHVlc0FuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaXNIb21lUGFnZSAmJiBhYm91dFVzRWxlbS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpZihhYm91dFVzRWxlbS5pc0luVmlld3BvcnQoKSl7XHJcbiAgICAgICAgICAgIHZhciBlbXBsb3llZSA9ICQoJy5lbXBsb3llZS13cmFwcGVyJyk7XHJcbiAgICAgICAgICAgIGlmICghYWJvdXRVc0FuaW1hdGlvbkhhc1Jhbikge1xyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXguc3RhZ2dlckZyb21UbyhlbXBsb3llZSwgMSwge2Nzczoge3g6IFwiLTEwMFwiLCBvcGFjaXR5OiAwfX0sIHtjc3M6e3g6XCIwXCIsIG9wYWNpdHk6IFwiMVwifSwgZGVsYXk6IDF9LCAwLjUpO1xyXG4gICAgICAgICAgICAgICAgYWJvdXRVc0FuaW1hdGlvbkhhc1JhbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuIiwiLy8gR29vZ2xlIG1hcHMgc2V0dXBcclxuXHJcbnZhciBtYXA7XHJcbmdvb2dsZS5tYXBzLmV2ZW50LmFkZERvbUxpc3RlbmVyKHdpbmRvdywgJ2xvYWQnLCBnb29nbGVNYXBzSW5pdCk7XHJcblxyXG5mdW5jdGlvbiBnb29nbGVNYXBzSW5pdCgpIHtcclxuICAgIHZhciBnZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpO1xyXG4gICAgdmFyIGFkZHJlc3MgPSAkKCcuY29udGFjdC1kZXRhaWxzLW1hcCcpLmh0bWwoKTtcclxuICAgIGlmIChhZGRyZXNzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBnZW9jb2Rlci5nZW9jb2RlKCB7ICdhZGRyZXNzJzogYWRkcmVzc30sIGZ1bmN0aW9uKHJlc3VsdHMsIHN0YXR1cykge1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09IGdvb2dsZS5tYXBzLkdlb2NvZGVyU3RhdHVzLk9LKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbGF0aXR1ZGUgPSByZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uLmxhdCgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGxvbmdpdHVkZSA9IHJlc3VsdHNbMF0uZ2VvbWV0cnkubG9jYXRpb24ubG5nKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbXlMYXRsbmcgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGxhdGl0dWRlLCBsb25naXR1ZGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hcE9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMTUsXHJcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBteUxhdGxuZyxcclxuICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGlvbkNvbnRyb2w6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIG1hcFR5cGVDb250cm9sOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBzY2FsZUNvbnRyb2w6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVzOiBbe1wiZmVhdHVyZVR5cGVcIjpcImxhbmRzY2FwZVwiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJzaW1wbGlmaWVkXCJ9LHtcImNvbG9yXCI6XCIjMmIzZjU3XCJ9LHtcIndlaWdodFwiOjAuMX1dfSx7XCJmZWF0dXJlVHlwZVwiOlwiYWRtaW5pc3RyYXRpdmVcIixcInN0eWxlcnNcIjpbe1widmlzaWJpbGl0eVwiOlwib25cIn0se1wiaHVlXCI6XCIjZmYwMDAwXCJ9LHtcIndlaWdodFwiOjAuNH0se1wiY29sb3JcIjpcIiNmZmZmZmZcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZC5oaWdod2F5XCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzLnRleHRcIixcInN0eWxlcnNcIjpbe1wid2VpZ2h0XCI6MS4zfSx7XCJjb2xvclwiOlwiI0ZGRkZGRlwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmhpZ2h3YXlcIixcImVsZW1lbnRUeXBlXCI6XCJnZW9tZXRyeVwiLFwic3R5bGVyc1wiOlt7XCJjb2xvclwiOlwiI2Y1NWY3N1wifSx7XCJ3ZWlnaHRcIjozfV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmFydGVyaWFsXCIsXCJlbGVtZW50VHlwZVwiOlwiZ2VvbWV0cnlcIixcInN0eWxlcnNcIjpbe1wiY29sb3JcIjpcIiNmNTVmNzdcIn0se1wid2VpZ2h0XCI6MS4xfV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmxvY2FsXCIsXCJlbGVtZW50VHlwZVwiOlwiZ2VvbWV0cnlcIixcInN0eWxlcnNcIjpbe1wiY29sb3JcIjpcIiNmNTVmNzdcIn0se1wid2VpZ2h0XCI6MC40fV19LHt9LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmhpZ2h3YXlcIixcImVsZW1lbnRUeXBlXCI6XCJsYWJlbHNcIixcInN0eWxlcnNcIjpbe1wid2VpZ2h0XCI6MC44fSx7XCJjb2xvclwiOlwiI2ZmZmZmZlwifSx7XCJ2aXNpYmlsaXR5XCI6XCJvblwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmxvY2FsXCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzXCIsXCJzdHlsZXJzXCI6W3tcInZpc2liaWxpdHlcIjpcIm9mZlwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkLmFydGVyaWFsXCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzXCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjZmZmZmZmXCJ9LHtcIndlaWdodFwiOjAuN31dfSx7XCJmZWF0dXJlVHlwZVwiOlwicG9pXCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzXCIsXCJzdHlsZXJzXCI6W3tcInZpc2liaWxpdHlcIjpcIm9mZlwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJwb2lcIixcInN0eWxlcnNcIjpbe1wiY29sb3JcIjpcIiM2YzViN2JcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwid2F0ZXJcIixcInN0eWxlcnNcIjpbe1wiY29sb3JcIjpcIiNmM2IxOTFcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwidHJhbnNpdC5saW5lXCIsXCJzdHlsZXJzXCI6W3tcInZpc2liaWxpdHlcIjpcIm9uXCJ9XX1dXHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcC1jYW52YXMnKSwgbWFwT3B0aW9ucyk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBteUxhdGxuZyxcclxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnLy9leHBvLW1hdGUuZ2l0aHViLmlvL2Fzc2V0cy9pbWFnZXMvbWFya2VyLnBuZycsXHJcbiAgICAgICAgICAgICAgICAgICAgbWFwOiBtYXBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBpbmZvd2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICQoJy5jb250YWN0LWRldGFpbHMtbWFwJykuaHRtbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPiA0NTApe1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcC5wYW5CeSgyMDAsIC0xNTApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKG1hcmtlciwgJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5mb3dpbmRvdy5vcGVuKG1hcCxtYXJrZXIpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsIiQoZnVuY3Rpb24gKCkge1xyXG4gICAgLy8qKioqKioqKiogQ29uc3RcclxuICAgIHZhciBsYXN0U2Nyb2xsVG9wID0gMFxyXG4gICAgICAgICwgaGFzU2Nyb2xsZWQgPSBmYWxzZVxyXG4gICAgICAgICwgaGVhZGVyRWxlbSA9ICQoJyNoZWFkZXInKVxyXG4gICAgICAgICwgaXNIb21lUGFnZSA9ICQoJ2JvZHkuaG9tZXBhZ2UnKVxyXG4gICAgICAgICwgdmlld1BvcnRIZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KClcclxuICAgICAgICAsIHZpZXdQb3J0V2lkdGggPSAkKHdpbmRvdykud2lkdGgoKVxyXG4gICAgICAgICwgYW5pbWF0aW9uSW5jcmVtZW50cyA9IDk1MFxyXG4gICAgICAgICwgc3RlcCA9IDBcclxuICAgICAgICAsIHNjcm9sbCA9IDBcclxuICAgICAgICAsIGhhc1NuYXBwZWQgPSBmYWxzZVxyXG4gICAgICAgICwgbWV0aG9kSXRlbSA9ICQoJy5tZXRob2QtaXRlbScpXHJcbiAgICAgICAgLCBtZXRob2RDb250ZW50ID0gJCgnLmZhZGVJbicpXHJcbiAgICAgICAgLCBpc01vYmlsZSA9IHdpbmRvdy5vcmllbnRhdGlvbiA+IC0xICYmIHNjcmVlbi53aWR0aCA8PSA2NDBcclxuICAgICAgICAsIGlzX2lQYWQgPSBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUGFkL2kpICE9IG51bGxcclxuICAgICAgICAsIHBsYWNlaG9sZGVyID0gJCgnYm9keScpLmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1ob3ZlckxhYmVsJ11cIik7XHJcblxyXG4gICAgLy8qKioqKioqKiogRXZlbnQgSGFuZGxlcnNcclxuXHJcbiAgICAkKHdpbmRvdykub24oJ21vdXNld2hlZWwgRE9NTW91c2VTY3JvbGwgdG91Y2htb3ZlJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaGFzU2Nyb2xsZWQgPSB0cnVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHZpZXdQb3J0SGVpZ2h0ID0gJCh0aGlzKS5oZWlnaHQoKTtcclxuICAgICAgICB2aWV3UG9ydFdpZHRoID0gJCh0aGlzKS53aWR0aCgpO1xyXG4gICAgICAgIGFuaW1hdGlvbkluY3JlbWVudHMgPSAkKHdpbmRvdykuaGVpZ2h0KCkgLyAxMDAgKiAyMDtcclxuICAgIH0pO1xyXG5cclxuICAgIGlmKGlzSG9tZVBhZ2UgIT09IHVuZGVmaW5lZCAmJiBpc0hvbWVQYWdlLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIHZhciBtZXRob2RDb250YWluZXIgPSAkKCcjbWV0aG9kJylcclxuICAgICAgICAgICAgLCBtZXRob2RTY3JvbGxDb250YWluZXIgPSAkKCcubWV0aG9kLXNjcm9sbC13cmFwcGVyJylcclxuICAgICAgICAgICAgLCBtZXRob2RDb250YWluZXJIZWlnaHQgPSBtZXRob2RDb250YWluZXIuaGVpZ2h0KClcclxuICAgICAgICAgICAgLCBtZXRob2RDb250YWluZXJPZmZzZXQgPSBtZXRob2RDb250YWluZXIub2Zmc2V0KCkudG9wXHJcbiAgICAgICAgICAgICwgQ2FzZVN0dWR5Q29udGFpbmVyID0gJCgnI2Nhc2Utc3R1ZGllcycpXHJcbiAgICAgICAgICAgICwgQ2FzZVN0dWR5Q29udGFpbmVyT2Zmc2V0ID0gfn5DYXNlU3R1ZHlDb250YWluZXIub2Zmc2V0KCkudG9wXHJcbiAgICAgICAgICAgICwgYWJvdXRDb250YWluZXIgPSAkKCcjYWJvdXQnKVxyXG4gICAgICAgICAgICAsIHByZUFib3V0Q29udGFpbmVyID0gJCgnI3ByZWFib3V0JylcclxuICAgICAgICAgICAgLCBwcmVBYm91dENvbnRhaW5lck9mZnNldCA9IHByZUFib3V0Q29udGFpbmVyLm9mZnNldCgpLnRvcFxyXG4gICAgICAgICAgICAsIHRvZ2dsZUNsYXNzTmFtZSA9ICdhY3RpdmUnXHJcbiAgICAgICAgICAgICwgdmlzaWJsZUNsYXNzTmFtZSA9ICdzaG93JztcclxuXHJcbiAgICAgICAgaWYoaXNNb2JpbGUgfHwgaXNfaVBhZCkge1xyXG4gICAgICAgICAgICBDYXNlU3R1ZHlDb250YWluZXIuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgIG1ldGhvZENvbnRlbnQuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgIGFib3V0Q29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJChtZXRob2RJdGVtKS5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIHZhciBpdGVtID0gJCh0aGlzKS5hdHRyKCdkYXRhLWl0ZW0nKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJy5kaWFncmFtLWxvZ28nKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIGlmKHBsYWNlaG9sZGVyLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXIuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJy5tZXRob2QtZGVzYy4nKyBpdGVtKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJyNkaWFncmFtJykuYWRkQ2xhc3MoaXRlbSk7XHJcbiAgICAgICAgfSkub24oJ21vdXNlbGVhdmUnLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIHZhciBpdGVtID0gJCh0aGlzKS5hdHRyKCdkYXRhLWl0ZW0nKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJy5kaWFncmFtLWxvZ28nKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIGlmKHBsYWNlaG9sZGVyLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXIucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJy5tZXRob2QtZGVzYy4nKyBpdGVtKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJyNkaWFncmFtJykucmVtb3ZlQ2xhc3MoaXRlbSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5jbG9zZS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKCdib2R5JykudG9nZ2xlQ2xhc3MoJ2lzUGxheWluZycpO1xyXG4gICAgICAgICAgICBoZWFkZXJFbGVtLnJlbW92ZUNsYXNzKCdwbGF5Jyk7XHJcbiAgICAgICAgICAgIGhlYWRlckVsZW0uZmluZCgnLnZpZGVvLWNvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdwbGF5Jyk7XHJcbiAgICAgICAgICAgICQoJy55b3V0dWJlLXZpZGVvLWVtYmVkIGlmcmFtZScpLmF0dHIoJ2lkJywgJycpLmF0dHIoJ3NyYycsICcnKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLnBsYXktdmlkZW8td3JhcHBlcicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICQoJ2JvZHknKS50b2dnbGVDbGFzcygnaXNQbGF5aW5nJyk7XHJcbiAgICAgICAgICAgIGhlYWRlckVsZW0uYWRkQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgaGVhZGVyRWxlbS5maW5kKCcudmlkZW8tY29udGFpbmVyJykuYWRkQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgdmFyIHVybCA9ICcuL2Fzc2V0cy9qc29uL2NvbnRlbnQuanNvbic7XHJcblxyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdXJsOiB1cmwsXHJcbiAgICAgICAgICAgICAgICBzY3JpcHRDaGFyc2V0OiBcInV0Zi04XCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYWN0dWFsID0gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHdpbmRvdy5hdG9iKGRhdGEpKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsb2MgPSBnZXRDb29raWUoJ2xhbmcnKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbG9jRGF0YSA9IGFjdHVhbFtsb2NdO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBob21lcGFnZSA9IGxvY0RhdGEucGFnZXMuaG9tZXBhZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGhlYWRlciA9IGhvbWVwYWdlLmhlYWRlci5jb250ZW50O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcueW91dHViZS12aWRlby1lbWJlZCBpZnJhbWUnKS5hdHRyKCdpZCcsIGhlYWRlci55b3V0dWJlVVJMKS5hdHRyKCdzcmMnLCAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJyArIGhlYWRlci55b3V0dWJlVVJMICsgJz9hdXRvcGxheT0wJnJlbD0wJmZzPTEmZW5hYmxlanNhcGk9MScpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIHNjcm9sbCA9IH5+JCh0aGlzKS5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICAgICAgICAgIGlmKHZpZXdQb3J0SGVpZ2h0IDwgMTEwMCl7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb25JbmNyZW1lbnRzID0gMTA1MDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbWV0aG9kSXRlbS5yZW1vdmVDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG5cclxuICAgICAgICAgICAgZ2V0RGlyZWN0aW9uKHNjcm9sbCwgbGFzdFNjcm9sbFRvcCwgZnVuY3Rpb24oZGlyZWN0aW9uLCBzY3JvbGwpe1xyXG4gICAgICAgICAgICAgICAgbGFzdFNjcm9sbFRvcCA9IHNjcm9sbDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZihzY3JvbGwgJiYgaGFzU2Nyb2xsZWQgJiYgIWlzTW9iaWxlICYmIHZpZXdQb3J0V2lkdGggPiAxMjAwICYmICFpc19pUGFkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGlyZWN0aW9uID09PSAnZG93bicpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9vblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsID49IG1ldGhvZENvbnRhaW5lck9mZnNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFoYXNTbmFwcGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kQ29udGVudC5yZW1vdmVDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21ldGhvZEl0ZW0ucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbWV0aG9kU2Nyb2xsQ29udGFpbmVyLmFkZENsYXNzKCdmaXhlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZFNjcm9sbENvbnRhaW5lci5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVNZXRob2RTY3JvbGwoNSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2hhc1NuYXBwZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsID49IG1ldGhvZENvbnRhaW5lck9mZnNldCArIG1ldGhvZENvbnRhaW5lckhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FzZVN0dWR5Q29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kQ29udGVudC5yZW1vdmVDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbWV0aG9kSXRlbS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21ldGhvZFNjcm9sbENvbnRhaW5lci5yZW1vdmVDbGFzcygnZml4ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZFNjcm9sbENvbnRhaW5lci5yZW1vdmVDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaGFzU25hcHBlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsID49IHByZUFib3V0Q29udGFpbmVyT2Zmc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYm91dENvbnRhaW5lci5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENhc2VTdHVkeUNvbnRhaW5lci5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kQ29udGVudC5hZGRDbGFzcyh2aXNpYmxlQ2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWJvdXRDb250YWluZXIuYWRkQ2xhc3ModmlzaWJsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZihkaXJlY3Rpb24gPT09ICd1cCcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9vblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsIDwgQ2FzZVN0dWR5Q29udGFpbmVyT2Zmc2V0IC0gYW5pbWF0aW9uSW5jcmVtZW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFoYXNTbmFwcGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tZXRob2RJdGVtLnJlbW92ZUNsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tZXRob2RTY3JvbGxDb250YWluZXIuYWRkQ2xhc3MoJ2ZpeGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kU2Nyb2xsQ29udGFpbmVyLmFkZENsYXNzKHZpc2libGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1ldGhvZFNjcm9sbCg1KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaGFzU25hcHBlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGwgPD0gbWV0aG9kQ29udGFpbmVyT2Zmc2V0IC0gMTAwICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kQ29udGVudC5yZW1vdmVDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tZXRob2RJdGVtLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbWV0aG9kU2Nyb2xsQ29udGFpbmVyLnJlbW92ZUNsYXNzKCdmaXhlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9oYXNTbmFwcGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGhhc1NuYXBwZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbCA+IG1ldGhvZENvbnRhaW5lck9mZnNldCAmJiBzY3JvbGwgPCBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwID0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzY3JvbGwgPiBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzICYmIHNjcm9sbCA8IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMgKiAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwID0gMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzY3JvbGwgPiBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzICogMiAmJiBzY3JvbGwgPCBtZXRob2RDb250YWluZXJPZmZzZXQgKyBhbmltYXRpb25JbmNyZW1lbnRzICogMykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcCA9IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2Nyb2xsID4gbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICsgYW5pbWF0aW9uSW5jcmVtZW50cyAqIDMgJiYgc2Nyb2xsIDwgbWV0aG9kQ29udGFpbmVyT2Zmc2V0ICsgYW5pbWF0aW9uSW5jcmVtZW50cyAqIDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXAgPSA0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNjcm9sbCA+IG1ldGhvZENvbnRhaW5lck9mZnNldCArIGFuaW1hdGlvbkluY3JlbWVudHMgKiA0ICYmIHNjcm9sbCA8IENhc2VTdHVkeUNvbnRhaW5lck9mZnNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcCA9IDU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1ldGhvZFNjcm9sbChzdGVwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5mdW5jdGlvbiBnZXREaXJlY3Rpb24gKHNjcm9sbCwgbGFzdFNjcm9sbFRvcCwgY2FsbGJhY2spe1xyXG4gICAgdmFyIGRpcmVjdGlvbiA9IG51bGxcclxuICAgICAgICAsIGRlbHRhID0gNTtcclxuXHJcbiAgICBpZihNYXRoLmFicyhsYXN0U2Nyb2xsVG9wIC0gc2Nyb2xsKSA8PSBkZWx0YSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoc2Nyb2xsID4gbGFzdFNjcm9sbFRvcCl7XHJcbiAgICAgICAgZGlyZWN0aW9uID0gJ2Rvd24nO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBkaXJlY3Rpb24gPSAndXAnO1xyXG4gICAgfVxyXG4gICAgY2FsbGJhY2soZGlyZWN0aW9uLCBzY3JvbGwpO1xyXG59XHJcblxyXG4vLyBUaGlzIGZ1bmN0aW9uIHNob3dlZCB0aGUgYXBwcm9wcmlhdGUgYnViYmxlXHJcbi8vIGN1cnJlbnRseSBub3QgdXNlZCBhcyB0aGUgc2Nyb2xsaW5nIGZ1bmN0aW9uIGlzIGRpc2FibGVkXHJcbmZ1bmN0aW9uIGhhbmRsZU1ldGhvZFNjcm9sbChzdGVwKXtcclxuICAgIHZhciB0b2dnbGVDbGFzc05hbWUgPSAnbWV0aG9kJ1xyXG4gICAgICAgICwgZmFkZUluRWxlbUNsYXNzID0gJy5mYWRlSW4nXHJcbiAgICAgICAgLCBtZXRob2RFbGVtID0gJy5tZXRob2QtaXRlbSdcclxuICAgICAgICAsIGludHJvRWxlbUNsYXNzID0gJy5pbnRybydcclxuICAgICAgICAsIGRlc2lnbkVsZW1DbGFzcyA9ICcuZGVzaWduJ1xyXG4gICAgICAgICwgdHVuaW5nRWxlbUNsYXNzID0gJy50dW5pbmcnXHJcbiAgICAgICAgLCBjb25zdHJ1Y3Rpb25FbGVtQ2xhc3MgPSAnLmNvbnN0cnVjdGlvbidcclxuICAgICAgICAsIGV2YWxFbGVtQ2xhc3MgPSAnLmV2YWwnO1xyXG5cclxuICAgICQoZmFkZUluRWxlbUNsYXNzKS5yZW1vdmVDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgJChtZXRob2RFbGVtKS5yZW1vdmVDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG5cclxuICAgIGlmKHN0ZXAgPT09IDEpe1xyXG4gICAgICAgICQoZmFkZUluRWxlbUNsYXNzK2ludHJvRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQobWV0aG9kRWxlbStpbnRyb0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgIH0gZWxzZSBpZihzdGVwID09PSAyKSB7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2ludHJvRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQoZmFkZUluRWxlbUNsYXNzK2Rlc2lnbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rZGVzaWduRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgfSBlbHNlIGlmKHN0ZXAgPT09IDMpIHtcclxuICAgICAgICAkKG1ldGhvZEVsZW0raW50cm9FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2Rlc2lnbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKGZhZGVJbkVsZW1DbGFzcyt0dW5pbmdFbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK3R1bmluZ0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgIH0gZWxzZSBpZihzdGVwID09PSA0KSB7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2ludHJvRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQobWV0aG9kRWxlbStkZXNpZ25FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK3R1bmluZ0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKGZhZGVJbkVsZW1DbGFzcytjb25zdHJ1Y3Rpb25FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2NvbnN0cnVjdGlvbkVsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgIH0gZWxzZSBpZihzdGVwID09PSA1KSB7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2ludHJvRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQobWV0aG9kRWxlbStkZXNpZ25FbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK3R1bmluZ0VsZW1DbGFzcykuYWRkQ2xhc3ModG9nZ2xlQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG1ldGhvZEVsZW0rY29uc3RydWN0aW9uRWxlbUNsYXNzKS5hZGRDbGFzcyh0b2dnbGVDbGFzc05hbWUpO1xyXG4gICAgICAgICQoZmFkZUluRWxlbUNsYXNzK2V2YWxFbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICAgICAgJChtZXRob2RFbGVtK2V2YWxFbGVtQ2xhc3MpLmFkZENsYXNzKHRvZ2dsZUNsYXNzTmFtZSk7XHJcbiAgICB9XHJcbn0iLCJjaG9vc2VDb29raWUoKTtcclxuXHJcbmZ1bmN0aW9uIHNldENvb2tpZShuYW1lLHZhbHVlLGRheXMpIHtcclxuICAgIHZhciBleHBpcmVzID0gXCJcIjtcclxuICAgIGlmIChkYXlzKSB7XHJcbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIChkYXlzKjI0KjYwKjYwKjEwMDApKTtcclxuICAgICAgICBleHBpcmVzID0gXCI7IGV4cGlyZXM9XCIgKyBkYXRlLnRvVVRDU3RyaW5nKCk7XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5jb29raWUgPSBuYW1lICsgXCI9XCIgKyAodmFsdWUgfHwgXCJcIikgICsgZXhwaXJlcyArIFwiOyBwYXRoPS9cIjtcclxufVxyXG5mdW5jdGlvbiBnZXRDb29raWUobmFtZSkge1xyXG4gICAgdmFyIG5hbWVFUSA9IG5hbWUgKyBcIj1cIjtcclxuICAgIHZhciBjYSA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpO1xyXG4gICAgZm9yKHZhciBpPTA7aSA8IGNhLmxlbmd0aDtpKyspIHtcclxuICAgICAgICB2YXIgYyA9IGNhW2ldO1xyXG4gICAgICAgIHdoaWxlIChjLmNoYXJBdCgwKT09JyAnKSBjID0gYy5zdWJzdHJpbmcoMSxjLmxlbmd0aCk7XHJcbiAgICAgICAgaWYgKGMuaW5kZXhPZihuYW1lRVEpID09IDApIHJldHVybiBjLnN1YnN0cmluZyhuYW1lRVEubGVuZ3RoLGMubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG59XHJcbmZ1bmN0aW9uIGVyYXNlQ29va2llKG5hbWUpIHtcclxuICAgIGRvY3VtZW50LmNvb2tpZSA9IG5hbWUrJz07IE1heC1BZ2U9LTk5OTk5OTk5Oyc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNob29zZUNvb2tpZSgpe1xyXG4gICAgdmFyIHVzZXJMYW5nID0gbmF2aWdhdG9yLmxhbmd1YWdlIHx8IG5hdmlnYXRvci51c2VyTGFuZ3VhZ2U7XHJcbiAgICB2YXIgYWN0aXZlQ29va2llID0gZ2V0Q29va2llKCdsYW5nJyk7XHJcbiAgICB2YXIgcXVlcnlQYXJhbSA9IGdldFBhcmFtZXRlckJ5TmFtZSgnbGFuZycpO1xyXG4gICAgaWYoYWN0aXZlQ29va2llID09PSB1bmRlZmluZWQgfHwgYWN0aXZlQ29va2llID09PSBudWxsIHx8IGFjdGl2ZUNvb2tpZSA9PT0gJycpe1xyXG4gICAgICAgIGlmKHVzZXJMYW5nLm1hdGNoKC9kZS9nKSl7XHJcbiAgICAgICAgICAgIHNldENvb2tpZSgnbGFuZycsJ2RlJyw3KTtcclxuICAgICAgICB9IGVsc2UgaWYgKHVzZXJMYW5nLm1hdGNoKC9lbi9nKSl7XHJcbiAgICAgICAgICAgIHNldENvb2tpZSgnbGFuZycsJ2VuJyw3KTtcclxuICAgICAgICB9IGVsc2UgaWYgKHVzZXJMYW5nLm1hdGNoKC9ubC9nKSkge1xyXG4gICAgICAgICAgICBzZXRDb29raWUoJ2xhbmcnLCdubCcsNyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2V0Q29va2llKCdsYW5nJywnbmwnLDcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgfSwyMCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcyhhY3RpdmVDb29raWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChxdWVyeVBhcmFtICE9PSB1bmRlZmluZWQgJiYgcXVlcnlQYXJhbSA9PT0gJ2RlJyl7XHJcbiAgICAgICAgc2V0Q29va2llKCdsYW5nJywnZGUnLDcpO1xyXG4gICAgfSBlbHNlIGlmIChxdWVyeVBhcmFtICE9PSB1bmRlZmluZWQgJiYgcXVlcnlQYXJhbSA9PT0gJ2VuJyl7XHJcbiAgICAgICAgc2V0Q29va2llKCdsYW5nJywnZW4nLDcpO1xyXG4gICAgfSBlbHNlIGlmIChxdWVyeVBhcmFtICE9PSB1bmRlZmluZWQgJiYgcXVlcnlQYXJhbSA9PT0gJ25sJyl7XHJcbiAgICAgICAgc2V0Q29va2llKCdsYW5nJywnbmwnLDcpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkKCcjbmF2IC5hY3RpdmUtbG9jJykuaHRtbChnZXRDb29raWUoJ2xhbmcnKSk7XHJcbiAgICB9LDIwMCk7XHJcbiAgICBcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0UGFyYW1ldGVyQnlOYW1lKG5hbWUsIHVybCkge1xyXG4gICAgaWYgKCF1cmwpIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW1xcW1xcXV0vZywgJ1xcXFwkJicpO1xyXG4gICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgnWz8mXScgKyBuYW1lICsgJyg9KFteJiNdKil8JnwjfCQpJyksXHJcbiAgICAgICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcclxuICAgIGlmICghcmVzdWx0cykgcmV0dXJuIG51bGw7XHJcbiAgICBpZiAoIXJlc3VsdHNbMl0pIHJldHVybiAnJztcclxuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XHJcbn1cclxuIiwiJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbmF2SXNPcGVuID0gZmFsc2VcclxuICAgICAgICAsIG1vYmlsZU5hdiA9ICQoJyNuYXYgdWwnKVxyXG4gICAgICAgICwgaGFtYnVyZ2VyRWxlbSA9ICQoJy5oYW1idXJnZXInKVxyXG4gICAgICAgICwgdmlld1BvcnRPZmZzZXQgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XHJcblxyXG4gICAgJCgnI25hdiBsaSBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciBuYXZMaW5rID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XHJcbiAgICAgICAgaWYobmF2TGluay5pbmRleE9mKCcuJykgIT09IC0xKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gbmF2TGluaztcclxuICAgICAgICB9IGVsc2UgaWYgKCQodGhpcykuaGFzQ2xhc3MoJ2xvYycpKXtcclxuICAgICAgICAgICAgZXJhc2VDb29raWUoJ2xhbmcnKTtcclxuICAgICAgICAgICAgc2V0Q29va2llKCdsYW5nJyxuYXZMaW5rLDcpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIH0sMjApO1xyXG4gICAgICAgIH0gZWxzZSBpZihuYXZMaW5rLmluZGV4T2YoJyMnKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgdmFyIGxpbmtQb3MgPSAkKG5hdkxpbmspLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAgICAgaWYgKG5hdkxpbmsgPT09ICcjZm9vdGVyJykge1xyXG4gICAgICAgICAgICAgICAgbGlua1BvcyA9ICQoJyNjb250YWN0LWluZm8nKS5vZmZzZXQoKS50b3A7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmF2TGluayA9PT0gJyNjb21wYXJpc29uJykge1xyXG4gICAgICAgICAgICAgICAgbGlua1BvcyA9ICQoJyNjb21wYXJpc29uLXdyYXBwZXInKS5vZmZzZXQoKS50b3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogbGlua1BvcyB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChuYXZJc09wZW4pIHtcclxuICAgICAgICAgICAgaGFtYnVyZ2VyRWxlbS5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgbW9iaWxlTmF2LnJlbW92ZUNsYXNzKFwib3BlblwiKTtcclxuICAgICAgICAgICAgbmF2SXNPcGVuID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgaGFtYnVyZ2VyRWxlbS5jbGljayhmdW5jdGlvbigpe1xyXG4gICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcbiAgICAgICAgbW9iaWxlTmF2LnRvZ2dsZUNsYXNzKFwib3BlblwiKTtcclxuICAgICAgICBuYXZJc09wZW4gPSB0cnVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCh3aW5kb3cpLm9uKCdzY3JvbGwnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciBzY3JvbGwgPSB+fiQodGhpcykuc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgZml4TmF2KHNjcm9sbCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCcuY29udGFjdC1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciBmb290ZXJPZmZzZXQgPSAkKCdmb290ZXInKS5vZmZzZXQoKS50b3A7XHJcbiAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogZm9vdGVyT2Zmc2V0IH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZml4TmF2KHZpZXdQb3J0T2Zmc2V0KTtcclxufSk7XHJcblxyXG5cclxuZnVuY3Rpb24gZml4TmF2KHNjcm9sbCl7XHJcbiAgICB2YXIgbmF2ID0gJChcIiNuYXZcIik7XHJcbiAgICBpZiAoc2Nyb2xsID49IDUwMCkge1xyXG4gICAgICAgIG5hdi5hZGRDbGFzcyhcImZpeGVkXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBuYXYucmVtb3ZlQ2xhc3MoXCJmaXhlZFwiKTtcclxuICAgIH1cclxufSIsIiQoZnVuY3Rpb24oKXtcclxuICAgIC8vIExvYWQgcHJvamVjdHNcclxuICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ2hvbWVwYWdlJykpe1xyXG4gICAgICAgIHZhciB1cmwgPSAnLi9hc3NldHMvanNvbi9jb250ZW50LmJpbic7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiB1cmwsXHJcbiAgICAgICAgICAgIHNjcmlwdENoYXJzZXQ6IFwidXRmLThcIixcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhY3R1YWwgPSBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUod2luZG93LmF0b2IoZGF0YSkpKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbG9jID0gZ2V0Q29va2llKCdsYW5nJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbG9jRGF0YSA9IGFjdHVhbFtsb2NdO1xyXG4gICAgICAgICAgICAgICAgdmFyIGhvbWVwYWdlID0gbG9jRGF0YS5wYWdlcy5ob21lcGFnZTtcclxuICAgICAgICAgICAgICAgIHZhciBjb21wYXJpc29uID0gaG9tZXBhZ2UuY29udGVudC5jb21wYXJpc29uO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbXBhcmlzb25XcmFwcGVyID0gJChcIiNjb21wYXJpc29uXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbXBhcmlzb25JdGVtID0gY29tcGFyaXNvbi5jb21wYXJpc29ucyB8fCAnJztcclxuICAgICAgICAgICAgICAgICQuZWFjaChjb21wYXJpc29uSXRlbSwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyaXNvbldyYXBwZXIuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiaXRlbVwiPjxpbWcgZGF0YS1jb250ZW50PVwiY29udGVudC1jb21wYXJpc29uLWJlZm9yZVwiIHNyYz1cIicgKyBpdGVtLmJlZm9yZSArICdcIiBjbGFzcz1cImJlZm9yZVwiIGFsdD5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1jb250ZW50PVwiY29udGVudC1jb21wYXJpc29uLWFmdGVyXCIgY2xhc3M9XCJhZnRlclwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCcgKyBpdGVtLmFmdGVyICsgJylcIj48L2Rpdj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyaXNvbldyYXBwZXIubm90KCcuc2xpY2staW5pdGlhbGl6ZWQnKS5zbGljayh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheVNwZWVkOiAzMDAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0QXJyb3c6ICcuaWNvbi1hcnJvdy1yaWdodCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZBcnJvdzogJy5pY29uLWFycm93LWxlZnQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2lwZVRvU2xpZGU6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyaXNvbldyYXBwZXIub24oJ3NldFBvc2l0aW9uJywgZnVuY3Rpb24oZXZlbnQsIHNsaWNrLCBjdXJyZW50U2xpZGUsIG5leHRTbGlkZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbmtib3ggPSBjb21wYXJpc29uV3JhcHBlci5maW5kKCcuc2xpY2stYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmtib3gpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlua2JveC5vbihcIm1vdXNlbW92ZVwiLHRyYWNrTG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5rYm94Lm9uKFwidG91Y2hzdGFydFwiLHRyYWNrTG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5rYm94Lm9uKFwidG91Y2htb3ZlXCIsdHJhY2tMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0sMjAwKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gdHJhY2tMb2NhdGlvbihlKXtcclxuICAgIHZhciBjb2xvcmJveCA9ICQoJy5zbGljay1hY3RpdmUgLmFmdGVyJylcclxuICAgICAgICAsIGZpbGxlckltYWdlID0gJCgnLnNsaWNrLWFjdGl2ZSAuYmVmb3JlJylcclxuICAgICAgICAsIHJlY3QgPSBmaWxsZXJJbWFnZVswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxyXG4gICAgICAgICwgZmlsbGVySW1hZ2VPdyA9IGZpbGxlckltYWdlLm91dGVyV2lkdGgoKVxyXG4gICAgICAgICwgcG9zaXRpb24gPSAoKGUucGFnZVggLSByZWN0LmxlZnQpIC8gZmlsbGVySW1hZ2VPdykqMTAwO1xyXG5cclxuICAgIGlmKHBvc2l0aW9uIDw9IDEwMCl7XHJcbiAgICAgICAgY29sb3Jib3guY3NzKCd3aWR0aCcsIHBvc2l0aW9uK1wiJVwiKTtcclxuICAgIH1cclxufVxyXG5cclxuIiwiJChmdW5jdGlvbigpe1xyXG4gICAgLy8gTG9hZCBwcm9qZWN0c1xyXG4gICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygncHJvamVjdHMnKSl7XHJcbiAgICAgICAgdmFyIHVybCA9ICcuL2Fzc2V0cy9qc29uL2NvbnRlbnQuYmluJztcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgc2NyaXB0Q2hhcnNldDogXCJ1dGYtOFwiLFxyXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFjdHVhbCA9IEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh3aW5kb3cuYXRvYihkYXRhKSkpKVxyXG4gICAgICAgICAgICAgICAgLCBsb2MgPSBnZXRDb29raWUoJ2xhbmcnKVxyXG4gICAgICAgICAgICAgICAgLCBob21lcHJvamVjdCA9IGFjdHVhbFtsb2NdLnBhZ2VzLmhvbWVwYWdlLmNvbnRlbnQucHJvamVjdHNcclxuICAgICAgICAgICAgICAgICwgcmV2aWV3TGluayA9IGhvbWVwcm9qZWN0LnJldmlld0xpbmsgfHwgJydcclxuICAgICAgICAgICAgICAgICwgcHJvamVjdERldGFpbCA9IGFjdHVhbFtsb2NdLnBhZ2VzLnByb2plY3RzXHJcbiAgICAgICAgICAgICAgICAsIHNlY3Rpb24gPSAkKCcjcHJvamVjdHMgLnByb2plY3RzLXdyYXBwZXInKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAobG9jID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjaG9vc2VDb29raWUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAkLmVhY2gocHJvamVjdERldGFpbCwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGltYWdlQ29udGVudCA9IGl0ZW0uaW1hZ2VzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgb3ZlcnZpZXdJbWcgPSBpbWFnZUNvbnRlbnRbMF0uc3JjIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgY291bnQgPSBwYXJzZUludChpbmRleClcclxuICAgICAgICAgICAgICAgICAgICAgICAgLCByZXZpZXcgPSBpdGVtLnJldmlld1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAsIGF1dGhvciA9IHJldmlldy5hdXRob3IgfHwgJydcclxuICAgICAgICAgICAgICAgICAgICAgICAgLCBkZXNjID0gcmV2aWV3LmRlc2NyaXB0aW9uIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgcmV2aWV3RGF0ZSA9IHJldmlldy5kYXRlIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICwgaWRlbnRpZmllciA9IGF1dGhvci5yZXBsYWNlKC9bXkEtWjAtOV0rL2lnLCBcIi1cIikudG9Mb3dlckNhc2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAsIHN0YXJDb3VudCA9IHJldmlldy5zdGFycyB8fCAnJztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5hcHBlbmQoJzxkaXYgY2xhc3M9XCJwcm9qZWN0XCIgaWQ9XCJwcm9qZWN0LScrY291bnQrJ1wiPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHQ8ZGl2IGNsYXNzPVwicHJvamVjdC13cmFwcGVyXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PGRpdiBjbGFzcz1cInByb2plY3QtaW1hZ2VcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICA8ZGl2IGRhdGEtcHJvamVjdD1cIicrY291bnQrJ1wiIGNsYXNzPVwicHJvamVjdC1vdmVydmlldy1pbWFnZVwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCcrIG92ZXJ2aWV3SW1nICsnKVwiPjwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LWRlc2Mtd3JhcHBlclwiPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0PGRpdiBjbGFzcz1cInByb2plY3QtZGVzYy1jb250ZW50XCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LWhlYWRlclwiPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0XHRcdDxoMiBjbGFzcz1cInByb2plY3QtdGl0bGVcIiBkYXRhLXByb2plY3Q9XCInK2NvdW50KydcIj4nK2l0ZW0uaGVhZGVyKyc8L2gyPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJwcm9qZWN0LXN1Yi10aXRsZVwiPicraXRlbS5zdWJUaXRsZSsnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0XHQ8ZGl2IGNsYXNzPVwicHJvamVjdC1kZXNjXCI+IFxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0XHQgICA8c3Bhbj4nK2l0ZW0uZGVzY3JpcHRpb24rJzwvc3Bhbj4gXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHRcdCAgIDxhIGNsYXNzPVwicmVhZC1yZXZpZXdcIiBkYXRhLWNvdW50PVwiJytjb3VudCsnXCI+JytyZXZpZXdMaW5rKycgJytpdGVtLmhlYWRlcisnPC9hPiBcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdCAgIDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PC9kaXY+IFxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHQ8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0PGRpdiBjbGFzcz1cInByb2plY3QtcmV2aWV3XCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PGRpdiBjbGFzcz1cInJldmlldy1jbG9zZVwiPjwvZGl2PiBcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHQ8ZGl2IGNsYXNzPVwicmV2aWV3XCIgaWQ9XCInK2lkZW50aWZpZXIrJ1wiPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXHRcdFx0PGRpdiBjbGFzcz1cInJldmlldy1hdXRob3JcIj4nK2F1dGhvcisnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0XHQ8ZGl2IGNsYXNzPVwicmV2aWV3LWRhdGVcIj4nK3Jldmlld0RhdGUrJzwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmV2aWV3LXN0YXJzXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJpY29uLXN0YXItZnVsbFwiPjwvaT5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICA8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1x0XHRcdDxkaXYgY2xhc3M9XCJyZXZpZXctdGV4dFwiPicrZGVzYysnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdFx0PC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcdDwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFyQ291bnQgPiA0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNwcm9qZWN0LScrY291bnQpLmZpbmQoJy5yZXZpZXctc3RhcnMgPiBzcGFuJykuYXBwZW5kKCc8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldmlldyA9PT0gdW5kZWZpbmVkIHx8IGRlc2MgPT09ICcnIHx8IGRlc2MgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNwcm9qZWN0LScrY291bnQpLmZpbmQoJy5yZWFkLXJldmlldycpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5yZWFkLXJldmlldycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb3VudCA9ICQodGhpcykuYXR0cignZGF0YS1jb3VudCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3Byb2plY3QtXCIrY291bnQpLmFkZENsYXNzKCdzaG93LXJldmlldycpLmZpbmQoJy5wcm9qZWN0LXJldmlldycpLmFkZENsYXNzKCdzaG93Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5yZXZpZXctY2xvc2UnKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdzaG93JykucGFyZW50KCcucHJvamVjdCcpLnJlbW92ZUNsYXNzKCdzaG93LXJldmlldycpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICBjaG9vc2VDb29raWUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBtb2RhbCBpbWFnZSBoYW5kbGVyXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGljayB0b3VjaFwiLCBcIi5wcm9qZWN0LXRpdGxlXCIsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICB2YXIgdGhhdCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbChlLCB0aGF0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGljayB0b3VjaFwiLCBcIi5wcm9qZWN0LW92ZXJ2aWV3LWltYWdlXCIsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICB2YXIgdGhhdCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbChlLCB0aGF0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGljayB0b3VjaFwiLCBcIi5tb2RhbC1jbG9zZVwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHZhciB0aGF0ID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgY2xvc2VNb2RhbChlLCB0aGF0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGljayB0b3VjaFwiLCBcIi5tb2RhbFwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIGlmIChlLnRhcmdldCAhPT0gdGhpcylcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHRoYXQgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICBjbG9zZU1vZGFsKGUsIHRoYXQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmZ1bmN0aW9uIHNob3dNb2RhbChlLCB0aGF0KXtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGlmKCEkKCdib2R5JykuaGFzQ2xhc3MoJ29wZW4nKSkge1xyXG4gICAgICAgIHZhciBwcm9qZWN0SUQgPSB0aGF0LmRhdGEoJ3Byb2plY3QnKTtcclxuICAgICAgICBpZiAocHJvamVjdElEICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgJCgnLm1vZGFsJykuZGF0YSgncHJvamVjdCcsIHByb2plY3RJRCk7XHJcbiAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnb3BlbicpO1xyXG5cclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHVybDogJy4vYXNzZXRzL2pzb24vY29udGVudC5iaW4nLFxyXG4gICAgICAgICAgICAgICAgc2NyaXB0Q2hhcnNldDogXCJ1dGYtOFwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFjdHVhbCA9IEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh3aW5kb3cuYXRvYihkYXRhKSkpKVxyXG4gICAgICAgICAgICAgICAgICAgICwgbG9jID0gZ2V0Q29va2llKCdsYW5nJylcclxuICAgICAgICAgICAgICAgICAgICAsIHByb2plY3REZXRhaWwgPSBhY3R1YWxbbG9jXS5wYWdlcy5wcm9qZWN0c1xyXG4gICAgICAgICAgICAgICAgICAgICwgc2xpZGVyRWxlbXMgPSBbXVxyXG4gICAgICAgICAgICAgICAgICAgICwgaW1hZ2VDb250ZW50ID0gcHJvamVjdERldGFpbFtwcm9qZWN0SURdLmltYWdlcztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnNsaWRlcicpLmVtcHR5KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZUNvbnRlbnQgJiYgaW1hZ2VDb250ZW50Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGltYWdlQ29udGVudCwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVkaWFTcmMgPSBpdGVtLnNyY1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBpc0ltYWdlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgZmlsZVR5cGUgPSBtZWRpYVNyYy5zcGxpdCgnLicpLnBvcCgpLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGVUeXBlID09PSAnanBnJyB8fCBmaWxlVHlwZSA9PT0gJ3BuZycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0ltYWdlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpdGVtICYmIGlzSW1hZ2Upe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlckVsZW1zLnB1c2goJzxkaXYgY2xhc3M9XCJwcm9qZWN0LWltYWdlXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGltZyBzcmM9XCInK21lZGlhU3JjKydcIiBhbHQ9XCInK2l0ZW0uaGVhZGVyKydcIiAvPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVyRWxlbXMucHVzaCgnPGRpdiBjbGFzcz1cInByb2plY3QtaW1hZ2UgeW91dHViZVwiPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwieW91dHViZS12aWRlby1lbWJlZCBlbWJlZC1yZXNwb25zaXZlIGVtYmVkLXJlc3BvbnNpdmUtMTZieTlcIiBpZD1cInZpZGVvXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuPlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgPGlmcmFtZVxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgIGlkPVwicGxheWVyXCJcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICBjbGFzcz1cInlvdXR1YmUtdmlkZW8gZW1iZWQtcmVzcG9uc2l2ZS1pdGVtXCJcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICBmcmFtZWJvcmRlcj1cIjBcIlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgIGFsbG93ZnVsbHNjcmVlbj1cIjFcIlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgIGFsbG93PVwiYXV0b3BsYXk7IGVuY3J5cHRlZC1tZWRpYVwiXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgdGl0bGU9XCJZb3VUdWJlIHZpZGVvIHBsYXllclwiXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgIHNyYz1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycrIG1lZGlhU3JjICsnP2F1dG9wbGF5PTAmcmVsPTAmZnM9MSZlbmFibGVqc2FwaT0xXCI+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICA8L2lmcmFtZT5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICA8L3NwYW4+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyA8L2Rpdj4nKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlckluaXQoc2xpZGVyRWxlbXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlTW9kYWwoZSwgdGhhdCl7XHJcbiAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgIHZhciBwYXJlbnRJRCA9IHRoYXQucGFyZW50KCkuZGF0YSgncHJvamVjdCcpO1xyXG4gICAgaWYodGhhdC5oYXNDbGFzcygnbW9kYWwnKSkge1xyXG4gICAgICAgIHZhciBwYXJlbnRJRCA9IHRoYXQuZGF0YSgncHJvamVjdCcpO1xyXG4gICAgfVxyXG4gICAgJCgnLnNsaWRlcicpLnNsaWNrKFwidW5zbGlja1wiKTtcclxuICAgICQoJy5zbGlkZXInKS5lbXB0eSgpO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3QtJytwYXJlbnRJRCkuc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNsaWRlckluaXQoc2xpZGVyRWxlbXMpe1xyXG4gICAgJCgnLnNsaWRlcicpLmFwcGVuZChzbGlkZXJFbGVtcyk7XHJcblxyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICQoJy5zbGlkZXInKS5zbGljayh7XHJcbiAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvcGxheVNwZWVkOiAzMDAwLFxyXG4gICAgICAgICAgICBhcnJvd3M6IHRydWUsXHJcbiAgICAgICAgICAgIGxhenlMb2FkOiAnb25EZW1hbmQnLFxyXG4gICAgICAgICAgICBzd2lwOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LDEwMCk7XHJcbn1cclxuXHJcbiIsIiQoZnVuY3Rpb24oKXtcclxuICAgIHZhciB1cmwgPSAnLi9hc3NldHMvanNvbi9jb250ZW50LmJpbic7XHJcbiAgICB2YXIgJGJvZHkgPSAkKFwiYm9keVwiKTtcclxuXHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgIHNjcmlwdENoYXJzZXQ6IFwidXRmLThcIixcclxuICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIHZhciBhY3R1YWwgPSBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUod2luZG93LmF0b2IoZGF0YSkpKSk7XHJcbiAgICAgICAgICAgIHZhciBsb2MgPSBnZXRDb29raWUoJ2xhbmcnKTtcclxuICAgICAgICAgICAgdmFyIGxvY0RhdGEgPSBhY3R1YWxbbG9jXTtcclxuICAgICAgICAgICAgdmFyIG5hdiA9IGxvY0RhdGEubmF2LmxhYmVscztcclxuICAgICAgICAgICAgdmFyIGhvbWVwYWdlID0gbG9jRGF0YS5wYWdlcy5ob21lcGFnZTtcclxuICAgICAgICAgICAgdmFyIGhlYWRlciA9IGhvbWVwYWdlLmhlYWRlci5jb250ZW50O1xyXG4gICAgICAgICAgICB2YXIgaW50cm8gPSBob21lcGFnZS5jb250ZW50LmludHJvO1xyXG4gICAgICAgICAgICB2YXIgYnJhbmRzID0gaW50cm8uaW1hZ2VzO1xyXG4gICAgICAgICAgICB2YXIgYWJvdXQgPSBob21lcGFnZS5jb250ZW50LmFib3V0O1xyXG4gICAgICAgICAgICB2YXIgYWJvdXRVcyA9IGhvbWVwYWdlLmNvbnRlbnQuYWJvdXRVcztcclxuICAgICAgICAgICAgdmFyIHZhbHVlcyA9IGhvbWVwYWdlLmNvbnRlbnQudmFsdWVzO1xyXG4gICAgICAgICAgICB2YXIgY29tcGFyaXNvbiA9IGhvbWVwYWdlLmNvbnRlbnQuY29tcGFyaXNvbjtcclxuICAgICAgICAgICAgdmFyIG1ldGhvZCA9IGhvbWVwYWdlLmNvbnRlbnQubWV0aG9kO1xyXG4gICAgICAgICAgICB2YXIgbW9kZWwgPSBob21lcGFnZS5jb250ZW50Lm1vZGVsO1xyXG4gICAgICAgICAgICB2YXIgcHJvamVjdHMgPSBob21lcGFnZS5jb250ZW50LnByb2plY3RzO1xyXG4gICAgICAgICAgICB2YXIgZm9vdGVyID0gaG9tZXBhZ2UuZm9vdGVyO1xyXG5cclxuICAgICAgICAgICAgaWYgKGxvY0RhdGEpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LnJlbW92ZUNsYXNzKCdsb2FkaW5nJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChsb2MgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgY2hvb3NlQ29va2llKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmKG5hdikge1xyXG4gICAgICAgICAgICAgICAgdmFyIG5hdkl0ZW0gPSAkKCcjbmF2ID4gdWwgPiBsaSAnKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI3ByZWFib3V0XCJdJykuaHRtbChuYXYuYWJvdXQpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI3ByZWFib3V0XCJdJykuaHRtbChuYXYuYWJvdXQpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjbWV0aG9kXCJdJykuaHRtbChuYXYubWV0aG9kKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiaW5kZXguaHRtbCNtZXRob2RcIl0nKS5odG1sKG5hdi5tZXRob2QpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjdmFsdWVzXCJdJykuaHRtbChuYXYudmFsdWVzKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiaW5kZXguaHRtbCN2YWx1ZXNcIl0nKS5odG1sKG5hdi52YWx1ZXMpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjYWJvdXRVc1wiXScpLmh0bWwobmF2LmFib3V0VXMpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI2Fib3V0VXNcIl0nKS5odG1sKG5hdi5hYm91dFVzKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwicHJvamVjdHMuaHRtbFwiXScpLmh0bWwobmF2LnByb2plY3RzKTtcclxuICAgICAgICAgICAgICAgIG5hdkl0ZW0uZmluZCgnYVtocmVmPVwiI2Zvb3RlclwiXScpLmh0bWwobmF2LmNvbnRhY3QpO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjZm9vdGVyXCJdJykuaHRtbChuYXYuY29udGFjdCk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cIiNtaXNzaW9uXCJdJykuaHRtbChuYXYubWlzc2lvbik7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cImluZGV4Lmh0bWwjbWlzc2lvblwiXScpLmh0bWwobmF2Lm1pc3Npb24pO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjbW9kZWxcIl0nKS5odG1sKG5hdi5tb2RlbCk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cImluZGV4Lmh0bWwjbW9kZWxcIl0nKS5odG1sKG5hdi5tb2RlbCk7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cIiNmb3VuZGF0aW9uXCJdJykuaHRtbChuYXYuZm91bmRhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBuYXZJdGVtLmZpbmQoJ2FbaHJlZj1cImluZGV4Lmh0bWwjZm91bmRhdGlvblwiXScpLmh0bWwobmF2LmZvdW5kYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCIjY29tcGFyaXNvblwiXScpLmh0bWwobmF2LmNvbXBhcmlzb24pO1xyXG4gICAgICAgICAgICAgICAgbmF2SXRlbS5maW5kKCdhW2hyZWY9XCJpbmRleC5odG1sI2NvbXBhcmlzb25cIl0nKS5odG1sKG5hdi5jb21wYXJpc29uKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGhlYWRlcikge1xyXG4gICAgICAgICAgICAgICAgJCgnLmJhY2tncm91bmQtdmlkZW8nKS5jc3MoeydiYWNrZ3JvdW5kSW1hZ2UnOiBoZWFkZXIuYmFja2dyb3VuZEltYWdlU3JjfSk7XHJcbiAgICAgICAgICAgICAgICAkKCcueW91dHViZS12aWRlby1lbWJlZCBpZnJhbWUnKS5hdHRyKCdpZCcsIGhlYWRlci55b3V0dWJlVVJMKS5hdHRyKCdzcmMnLCAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJyArIGhlYWRlci55b3V0dWJlVVJMICsgJz9hdXRvcGxheT0wJnJlbD0wJmZzPTEmZW5hYmxlanNhcGk9MScpXHJcbiAgICAgICAgICAgICAgICAkKCd2aWRlbyBzb3VyY2UjbXA0JykuYXR0cignc3JjJywgaGVhZGVyLmJhY2tncm91bmRWaWRlb01wNFNyYyk7XHJcbiAgICAgICAgICAgICAgICAkKCd2aWRlbyBzb3VyY2Ujd2VibScpLmF0dHIoJ3NyYycsIGhlYWRlci5iYWNrZ3JvdW5kVmlkZW9XZWJNU3JjKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdoZWFkZXItY29udGVudC10aXRsZSddXCIpLmh0bWwoaGVhZGVyLmhlYWRlcik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChpbnRybykge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtaW50cm8tdGl0bGUnXVwiKS5odG1sKGludHJvLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1pbnRyby1kZXNjJ11cIikuaHRtbChpbnRyby5kZXNjcmlwdGlvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYoJCgnLmJyYW5kbGlzdCcpLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChicmFuZHMsIGZ1bmN0aW9uIChpbmRleCwgYnJhbmQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoYnJhbmQuc3JjKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRib2R5LmZpbmQoJy5icmFuZGxpc3QnKS5hcHBlbmQoJzxsaT48aW1nIHNyYz1cIicrYnJhbmQuc3JjKydcIiBhbHQ9XCInK2JyYW5kLmFsdCsnXCIgLz48L2xpPicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChhYm91dCkge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtYWJvdXQtcm93MS10aXRsZSddXCIpLmh0bWwoYWJvdXQucm93MS5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtYWJvdXQtcm93MS1pbWFnZSddXCIpLmNzcyh7J2JhY2tncm91bmRJbWFnZSc6IGFib3V0LnJvdzEuaW1hZ2Uuc3JjfSk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1hYm91dC1yb3cxLWRlc2MnXVwiKS5odG1sKGFib3V0LnJvdzEuZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0LXJvdzItdGl0bGUnXVwiKS5odG1sKGFib3V0LnJvdzIuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0LXJvdzItaW1hZ2UnXVwiKS5jc3MoeydiYWNrZ3JvdW5kSW1hZ2UnOiBhYm91dC5yb3cyLmltYWdlLnNyY30pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtYWJvdXQtcm93Mi1kZXNjJ11cIikuaHRtbChhYm91dC5yb3cyLmRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGFib3V0VXMpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0VXMtdGl0bGUnXVwiKS5odG1sKGFib3V0VXMuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWFib3V0VXMtZGVzY3JpcHRpb24nXVwiKS5odG1sKGFib3V0VXMuZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWVtcGxveWVlLW5pZWstaW1hZ2UnXVwiKS5hdHRyKCdzcmMnLCBhYm91dFVzLmVtcGxveWVlcy5uaWVrLmltYWdlLnNyYykuYXR0cignYWx0JywgYWJvdXRVcy5lbXBsb3llZXMubmllay5pbWFnZS5hbHQpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtZW1wbG95ZWUtbmllay10aXRsZSddXCIpLmh0bWwoYWJvdXRVcy5lbXBsb3llZXMubmllay5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtZW1wbG95ZWUtbmllay1kZXNjJ11cIikuaHRtbChhYm91dFVzLmVtcGxveWVlcy5uaWVrLmRlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1lbXBsb3llZS1qYW4taW1hZ2UnXVwiKS5hdHRyKCdzcmMnLCBhYm91dFVzLmVtcGxveWVlcy5qYW4uaW1hZ2Uuc3JjKS5hdHRyKCdhbHQnLCBhYm91dFVzLmVtcGxveWVlcy5qYW4uaW1hZ2UuYWx0KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LWVtcGxveWVlLWphbi10aXRsZSddXCIpLmh0bWwoYWJvdXRVcy5lbXBsb3llZXMuamFuLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1lbXBsb3llZS1qYW4tZGVzYyddXCIpLmh0bWwoYWJvdXRVcy5lbXBsb3llZXMuamFuLmRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHZhbHVlcykge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWVzLWltYWdlJ11cIikuY3NzKHsnYmFja2dyb3VuZEltYWdlJzogdmFsdWVzLmltYWdlLnNyY30pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWVzLXRpdGxlJ11cIikuaHRtbCh2YWx1ZXMuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlcy1kZXNjJ11cIikuaHRtbCh2YWx1ZXMuZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlMSddXCIpLmh0bWwodmFsdWVzLnZhbHVlcy52YWx1ZTEpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWUyJ11cIikuaHRtbCh2YWx1ZXMudmFsdWVzLnZhbHVlMik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC12YWx1ZTMnXVwiKS5odG1sKHZhbHVlcy52YWx1ZXMudmFsdWUzKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXZhbHVlNCddXCIpLmh0bWwodmFsdWVzLnZhbHVlcy52YWx1ZTQpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtdmFsdWU1J11cIikuaHRtbCh2YWx1ZXMudmFsdWVzLnZhbHVlNSk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC12YWx1ZTYnXVwiKS5odG1sKHZhbHVlcy52YWx1ZXMudmFsdWU2KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG1ldGhvZCkge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLXRpdGxlJ11cIikuaHRtbChtZXRob2QuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1kZXNjJ11cIikuaHRtbChtZXRob2QuZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWhvdmVyTGFiZWwnXVwiKS5odG1sKG1ldGhvZC5ob3ZlckxhYmVsKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtaW50cm8tdGl0bGUnXVwiKS5odG1sKG1ldGhvZC5tZXRob2RzLmludHJvLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtaW50cm8tZGVzYyddXCIpLmh0bWwobWV0aG9kLm1ldGhvZHMuaW50cm8uZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1kZXNpZ24tdGl0bGUnXVwiKS5odG1sKG1ldGhvZC5tZXRob2RzLmRlc2lnbi5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWRlc2lnbi1kZXNjJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5kZXNpZ24uZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC10dW5pbmctdGl0bGUnXVwiKS5odG1sKG1ldGhvZC5tZXRob2RzLnR1bmluZy5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLXR1bmluZy1kZXNjJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy50dW5pbmcuZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1jb25zdHJ1Y3Rpb24tdGl0bGUnXVwiKS5odG1sKG1ldGhvZC5tZXRob2RzLmNvbnN0cnVjdGlvbi5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtbWV0aG9kLWNvbnN0cnVjdGlvbi1kZXNjJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5jb25zdHJ1Y3Rpb24uZGVzY3JpcHRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1ldGhvZC1ldmFsLXRpdGxlJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5ldmFsLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tZXRob2QtZXZhbC1kZXNjJ11cIikuaHRtbChtZXRob2QubWV0aG9kcy5ldmFsLmRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG1vZGVsKSB7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tb2RlbC10aXRsZSddXCIpLmh0bWwobW9kZWwuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LW1vZGVsLWltYWdlJ11cIikuY3NzKHsnYmFja2dyb3VuZEltYWdlJzogbW9kZWwuaW1hZ2Uuc3JjfSk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1tb2RlbC1kZXNjJ11cIikuaHRtbChtb2RlbC5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChwcm9qZWN0cykge1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdHMtdGl0bGUnXVwiKS5odG1sKHByb2plY3RzLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0cy1kZXNjJ11cIikuaHRtbChwcm9qZWN0cy5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0cy1idXR0b24nXVwiKS5odG1sKHByb2plY3RzLmJ1dHRvbi5sYWJlbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdDEtaW1hZ2UnXVwiKS5hdHRyKCdzcmMnLCBwcm9qZWN0cy5wcm9qZWN0MS5pbWFnZS5zcmMpLmF0dHIoJ2FsdCcsIHByb2plY3RzLnByb2plY3QxLmltYWdlLmFsdCk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0MS10aXRsZSddXCIpLmh0bWwocHJvamVjdHMucHJvamVjdDEuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3QxLWJ0biddXCIpLmh0bWwocHJvamVjdHMucHJvamVjdDEuYnV0dG9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nY29udGVudC1wcm9qZWN0Mi1pbWFnZSddXCIpLmF0dHIoJ3NyYycsIHByb2plY3RzLnByb2plY3QyLmltYWdlLnNyYykuYXR0cignYWx0JywgcHJvamVjdHMucHJvamVjdDIuaW1hZ2UuYWx0KTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3QyLXRpdGxlJ11cIikuaHRtbChwcm9qZWN0cy5wcm9qZWN0Mi5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2NvbnRlbnQtcHJvamVjdDItYnRuJ11cIikuaHRtbChwcm9qZWN0cy5wcm9qZWN0Mi5idXR0b24pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZihjb21wYXJpc29uKXtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3RzLWNvbXBhcmlzb24tdGl0bGUnXVwiKS5odG1sKGNvbXBhcmlzb24uaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdjb250ZW50LXByb2plY3RzLWNvbXBhcmlzb24tZGVzYyddXCIpLmh0bWwoY29tcGFyaXNvbi5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChmb290ZXIpIHtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItdGVzdGltb25pYWxzLXRpdGxlJ11cIikuaHRtbChmb290ZXIudGVzdGltb25pYWxzLmhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWhlYWRlciddXCIpLmh0bWwoZm9vdGVyLmNvbnRhY3RzLmhlYWRlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1qYW4tdGl0bGUnXVwiKS5odG1sKGZvb3Rlci5jb250YWN0cy5qYW4uaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtamFuLWVtYWlsJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5qYW4ubGlua3MuZW1haWwuc3JjKS5odG1sKGZvb3Rlci5jb250YWN0cy5qYW4ubGlua3MuZW1haWwuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtbGlua2VkaW4tamFuJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5qYW4ubGlua3MubGlua2VkaW4uc3JjKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtbGlua2VkaW4tamFuLXRpdGxlJ11cIikuaHRtbCggZm9vdGVyLmNvbnRhY3RzLmphbi5saW5rcy5saW5rZWRpbi5oZWFkZXIrJyAnKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtY2FsbC1qYW4tcGhvbmUnXVwiKS5hdHRyKCdocmVmJywgZm9vdGVyLmNvbnRhY3RzLmphbi5waG9uZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1uaWVrLXRpdGxlJ11cIikuaHRtbChmb290ZXIuY29udGFjdHMubmllay5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1uaWVrLWVtYWlsJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5uaWVrLmxpbmtzLmVtYWlsLnNyYykuaHRtbChmb290ZXIuY29udGFjdHMubmllay5saW5rcy5lbWFpbC5oZWFkZXIpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1saW5rZWRpbi1uaWVrJ11cIikuYXR0cignaHJlZicsIGZvb3Rlci5jb250YWN0cy5uaWVrLmxpbmtzLmxpbmtlZGluLnNyYyk7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLWxpbmtlZGluLW5pZWstdGl0bGUnXVwiKS5odG1sKGZvb3Rlci5jb250YWN0cy5uaWVrLmxpbmtzLmxpbmtlZGluLmhlYWRlcisnICcpO1xyXG4gICAgICAgICAgICAgICAgJGJvZHkuZmluZChcIltkYXRhLWNvbnRlbnQ9J2Zvb3Rlci1jb250YWN0cy1jYWxsLW5pZWstcGhvbmUnXVwiKS5hdHRyKCdocmVmJywgZm9vdGVyLmNvbnRhY3RzLm5pZWsucGhvbmUpO1xyXG5cclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtcGhvbmUtaGVhZGVyJ11cIikuaHRtbChmb290ZXIucGhvbmUuaGVhZGVyKTtcclxuICAgICAgICAgICAgICAgICRib2R5LmZpbmQoXCJbZGF0YS1jb250ZW50PSdmb290ZXItY29udGFjdHMtdmlzaXQtaGVhZGVyJ11cIikuaHRtbChmb290ZXIudmlzaXQuaGVhZGVyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvbnRhY3RzLXZpc2l0LWRlc2MnXVwiKS5odG1sKGZvb3Rlci52aXNpdC5kZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgICAgICAkYm9keS5maW5kKFwiW2RhdGEtY29udGVudD0nZm9vdGVyLWNvcHlyaWdodC1kZXNjJ11cIikuaHRtbChmb290ZXIuY29weXJpZ2h0LmRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuIiwiXHJcbnZhciB0ZXN0aW1vbmlhbCA9ICQoJyNnb29nbGUtcmV2aWV3cycpO1xyXG5cclxuJChmdW5jdGlvbigpIHtcclxuICAgIHZhciB1cmwgPSAnLi9hc3NldHMvanNvbi9jb250ZW50LmJpbic7XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgIHNjcmlwdENoYXJzZXQ6IFwidXRmLThcIixcclxuICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIHZhciBhY3R1YWwgPSBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUod2luZG93LmF0b2IoZGF0YSkpKSk7XHJcbiAgICAgICAgICAgIHZhciBsb2MgPSBnZXRDb29raWUoJ2xhbmcnKTtcclxuICAgICAgICAgICAgdmFyIHByb2plY3REZXRhaWwgPSBhY3R1YWxbbG9jXS5wYWdlcy5wcm9qZWN0cztcclxuXHJcbiAgICAgICAgICAgICQuZWFjaChwcm9qZWN0RGV0YWlsLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciByZXZpZXcgPSBpdGVtLnJldmlld1xyXG4gICAgICAgICAgICAgICAgICAgICwgYXV0aG9yID0gcmV2aWV3LmF1dGhvciB8fCAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICwgZGVzYyA9IHJldmlldy5kZXNjcmlwdGlvbiB8fCAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICwgcmV2aWV3RGF0ZSA9IHJldmlldy5kYXRlIHx8ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgLCBpZGVudGlmaWVyID0gYXV0aG9yLnJlcGxhY2UoL1teQS1aMC05XSsvaWcsIFwiLVwiKS50b0xvd2VyQ2FzZSgpXHJcbiAgICAgICAgICAgICAgICAgICAgLCBzdGFyQ291bnQgPSByZXZpZXcuc3RhcnMgfHwgJydcclxuICAgICAgICAgICAgICAgICAgICAsIGNvdW50ID0gcGFyc2VJbnQoaW5kZXgpICsgMTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocmV2aWV3ICYmIHJldmlldyAhPT0gdW5kZWZpbmVkICYmIGRlc2MgIT09ICcnICYmIGRlc2MgIT09IHVuZGVmaW5lZCB8fCBzdGFyQ291bnQgIT09ICcnICYmIHN0YXJDb3VudCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVzdGltb25pYWwuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZXN0aW1vbmlhbC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RpbW9uaWFsLmFwcGVuZCgnPGRpdiBjbGFzcz1cInJldmlld1wiIGlkPVwiJyArIGlkZW50aWZpZXIgKyBjb3VudCArICdcIj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmV2aWV3LWF1dGhvclwiPicgKyBhdXRob3IgKyAnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJldmlldy1kYXRlXCI+JyArIHJldmlld0RhdGUgKyAnPC9kaXY+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJldmlldy1zdGFyc1wiPlxcbicrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbi1zdGFyLWZ1bGxcIj48L2k+XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8L2Rpdj5cXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmV2aWV3LXRleHRcIj4nICsgcmV2aWV3LmRlc2NyaXB0aW9uICsgJzwvZGl2PlxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgIDwvZGl2PicpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJDb3VudCA+IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5yZXZpZXcjJytpZGVudGlmaWVyICsgY291bnQpLmZpbmQoJy5yZXZpZXctc3RhcnMgPiBzcGFuJykuYXBwZW5kKCc8aSBjbGFzcz1cImljb24tc3Rhci1mdWxsXCI+PC9pPicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV2aWV3U2xpZGVyKCk7XHJcbiAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcblxyXG5mdW5jdGlvbiByZXZpZXdTbGlkZXIoKXtcclxuICAgIHRlc3RpbW9uaWFsLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgIHRlc3RpbW9uaWFsLm5vdCgnLnNsaWNrLWluaXRpYWxpemVkJykuc2xpY2soe1xyXG4gICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICBhdXRvcGxheTogdHJ1ZSxcclxuICAgICAgICBmYWRlOiB0cnVlLFxyXG4gICAgICAgIGluZmluaXRlOiB0cnVlLFxyXG4gICAgICAgIGF1dG9wbGF5U3BlZWQ6IDgwMDAsXHJcbiAgICAgICAgYXJyb3dzOiB0cnVlLFxyXG4gICAgICAgIHJlc3BvbnNpdmU6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgYnJlYWtwb2ludDogMTAyNSxcclxuICAgICAgICAgICAgICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0pO1xyXG59XHJcbiJdfQ==
